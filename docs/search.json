[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tumor heterogeneity and tumor-microglia interactions in primary and recurrent IDH1 mutant gliomas",
    "section": "",
    "text": "Key info\nDiffuse gliomas harbor recurrent mutations in the isocitrate dehydrogenase (IDH) gene. IDH mutant gliomas are classified into two major subtypes: Oligodendrogliomas with chromosome arms 1p/19q codeletion and astrocytomas with euploid 1p/19q. Recent studies have highlighted intratumoral heterogeneity as a feature of IDH mutant gliomas. These tumors exhibit a hierarchy of cellular phenotypes, with a neural stem cell-like population giving rise to tumor subpopulations with expression signatures resembling astrocytes and oligodendrocytes. However, a detailed comparison of transcriptional and epigenomic heterogeneity in oligodendrogliomas and astrocytomas is still lacking.\nIn addition, IDH mutant gliomas have distinct activation states of tumor-associated microglia/macrophages (TAMs); however, it is not clear whether TAM composition differs between oligodendrogliomas and astrocytomas, how tumor subpopulations interact with TAMs and to what extent tumor grade and recurrence play a role in promoting TAM diversity in diffuse gliomas. Therefore, comparative analyses of tumor heterogeneity and tumor-stroma interactions are critical to our understanding of IDH mutant gliomas and their evolution.\nHere, we performed high-throughput single-nucleus RNA and ATAC sequencing (snRNA- and snATAC-seq) on primary IDH mutant gliomas and snRNA-seq on a cohort of primary and recurrent astrocytoma pairs to create a resource to comprehensively resolve tumor diversity and TAM states. Our results confirm the previously described differentiation hierarchies and reveal a novel group of epigenetically and transcriptionally distinct ribosomal enriched non-cycling stem-like tumor cells in IDH mutant gliomas. We identify significant transcriptional differences in TAM states between oligodendrogliomas and astrocytomas, and receptor-ligand interaction mapping between tumor subpopulations and TAM states reveals a notable interaction between inflammatory TAMs and astrocytic tumor subpopulations in astrocytomas confirmed by immunohistochemical analyses of validation cohorts. These results suggest that TAM-tumor interactions may contribute to the clinical course of oligodendrogliomas and astrocytomas."
  },
  {
    "objectID": "index.html#book-contents",
    "href": "index.html#book-contents",
    "title": "Tumor heterogeneity and tumor-microglia interactions in primary and recurrent IDH1 mutant gliomas",
    "section": "Book contents",
    "text": "Book contents\nIn the present book, we have compiled all the code used in the analysis and to generate the figures. A couple of notes worth mentioning:\n\nAbsolute paths are displayed, which will not work on another user’s end.\nObjects are loaded based on such pathways. Another user will have to regenerate such objects based on the available data.\nMetadata columns may vary between the code and the available metadata. However, this should be a name change.\nSome figures might slightly vary from the final version on the paper, due to modifications with Affinity Designer.\nDevelopment version of SCpubr was used (equivalent to v2.X.X, when published) for the figures."
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "Tumor heterogeneity and tumor-microglia interactions in primary and recurrent IDH1 mutant gliomas",
    "section": "Contact",
    "text": "Contact\nCorresponding authors:\n\nSevin Turcan: sevin.turcan@med.uni-heidelberg.de\nHolger Heyn: holger.heyn@cnag.eu\n\nFor any queries on the figures, please contact:\n\nEnrique Blanco Carmona: e.blancocarmona@kitz-heidelberg.de\nIf related to SCpubr: https://github.com/enblacar/SCpubr/issues/new/choose"
  },
  {
    "objectID": "analysis/analysis_001_count_matrices.html",
    "href": "analysis/analysis_001_count_matrices.html",
    "title": "Quality control",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n#--------------------------------------------------------------------\n# 1 - READ IN COUNT MATRICES AND INDIVIDUAL QC\n#--------------------------------------------------------------------\n\n# ------------------------------------------------------------------\n# All the following code including doublet detection has to be run\n# for each sample individually.\n# ------------------------------------------------------------------\n\n# Global parameters. Used throughout the whole analysis.\nsample_name &lt;- \"\" # Name of the sample.\n\n# Load samples.\nmt_pattern &lt;- \"^MT-\"\nsample_path &lt;- \"\" # Path to where the count matrix from cellranger (either filtered or raw, your choice) is located.\n\n# Read the count matrix and generate a Seurat object.\nsample &lt;- Seurat::Read10X(data.dir = sample_path) %&gt;%\n            Seurat::CreateSeuratObject(project = sample_name, min.cells = 3, min.features = 200)\n\n# Compute percentage of mitochondrial RNA in the cells.\nsample[[\"percent.mt\"]] &lt;- Seurat::PercentageFeatureSet(object = sample,\n                                                       pattern = mt_pattern)\n\n# Perform QC on the sample.\n# Get cutoffs.\ncounts_lower_cutoff &lt;- 1000 # Minimum amount of UMIs per cell.\ngenes_lower_cutoff &lt;- 500 # Minimum amount of genes per cell.\nmito_higher_cutoff &lt;- 5 # Maximum amount of mitochondrial RNA per cell.\n\n# Generate the first subset.\ncount_mask &lt;- sample$nCount_RNA &gt; counts_lower_cutoff\ngene_mask &lt;- sample$nFeature_RNA &gt; genes_lower_cutoff\nmito_mask &lt;- sample$percent.mt &lt; mito_higher_cutoff\nmask &lt;- count_mask & gene_mask & mito_mask\nsample &lt;- sample[, mask] # Subset the sample.\n\n# Upper cutoffs are determined by the mean and standard deviation of the remaining cells.\ncounts_higher_cutoff &lt;- mean(sample$nCount_RNA) + 3 * stats::sd(sample$nCount_RNA)\ngenes_higher_cutoff &lt;- mean(sample$nFeature_RNA) + 3 * stats::sd(sample$nFeature_RNA)\n\n\n# Second subset based on the mean and standard deviation of the remaining cells.\ncount_mask &lt;- sample$nCount_RNA &lt; counts_higher_cutoff\ngene_mask &lt;- sample$nFeature_RNA &lt; genes_higher_cutoff\nmask &lt;- count_mask & gene_mask\nsample &lt;- sample[, mask] # Subset the sample."
  },
  {
    "objectID": "analysis/analysis_002_doublets.html",
    "href": "analysis/analysis_002_doublets.html",
    "title": "Doublet detection",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n#--------------------------------------------------------------------\n# 2 - DOUBLET DETECTION WITH SCRUBBLET\n#--------------------------------------------------------------------\n\n# For this part we have scrublet installed in a conda environment.\nconda_env &lt;- \"\" #Path to your conda environment.\nreticulate::use_condaenv(conda_env)\n\n# Import scrublet.\nscrublet &lt;- reticulate::import(\"scrublet\")\n\n# Transpose the count matrix.\ncounts_transposed &lt;- Matrix::t(sample@assays$RNA@counts)\n\n# Run scrublet.\n# Code adapted from: https://github.com/swolock/scrublet/blob/master/examples/scrublet_basics.ipynb\nscrub = scrublet$Scrublet(counts_transposed, expected_doublet_rate = 0.06)\n\n# Compute the doublets.\nreturn_list = scrub$scrub_doublets() # List with the output from scrublet.\nscrublet_score &lt;- return_list[[1]] # Scrublet scores per cell.\nscrublet_binary &lt;- return_list[[2]] # Scrublet assignment for each cell.\n\n# Add cell names to the output, so it can be integrated in the Seurat object.\nrow.names(scrublet_score) &lt;- colnames(sample)\nrow.names(scrublet_binary) &lt;- colnames(sample)\n\n# Add the output as metadata.\nsample$scrublet_score &lt;- scrublet_score\nsample$scrublet_binary &lt;- scrublet_binary\n\n# Visualize the doublet scores and the assignment.\nh &lt;- graphics::hist(sample$scrublet_score, breaks = \"FD\") # To compute the breaks according to Freedman–Diaconis rule. https://stats.stackexchange.com/a/383145\np &lt;- ggplot2::ggplot(sample[[]], ggplot2::aes(x = sample$scrublet_score, fill = sample$scrublet_binary)) +\n     ggplot2::geom_histogram(breaks = h$breaks) +\n     ggplot2::scale_fill_manual(values = colortools::opposite(\"steelblue\")) +\n     ggplot2::geom_vline(ggplot2::aes(xintercept = mean_binary), colour = \"grey\", linetype = \"dashed\") +\n     ggpubr::theme_pubclean()\np$labels$fill &lt;- \"Doublet assignment\"\np$labels$y &lt;- \"Number of nuclei\"\np$labels$x &lt;- \"scrublet score\"\np$labels$subtitle &lt;- sprintf(\"Binary prediction of doublets failed: %s\", was_null)\np$theme$legend.position &lt;- \"bottom\"\np$labels$subtitle &lt;- sprintf(\"Cutoff: %s\\t Predicted doublets: %s\\t Number of singlets: %s\\t Percentage of doublets: %s\",\n                             mean_binary,\n                             sum(sample$scrublet_binary),\n                             sum(!sample$scrublet_binary),\n                             round(sum(sample$scrublet_binary) / length(colnames(sample)), 3))\n\n# At this point, it might be the case that the cutoff decided by scrublet is suboptimal.\n# Therefore, it might make more sense to decide it yourself based on the histogram.\n\ndoublet_cutoff &lt;- 0.2 # Put your own value.\n\n# Modify the binary assignment accordingly.\nsample$scrublet_binary &lt;- ifelse(sample$scrublet_score &gt; doublet_cutoff, TRUE, FALSE)\n# You can re-run the histogram above to get the new visualization and metrics.\n\n# Generate a reporting df.\nreport_df &lt;- data.frame(number_of_cells_after_qc = length(colnames(sample)),\n                        number_of_predicted_doublets = sum(sample$scrublet_binary),\n                        cutoff = mean_binary,\n                        percentage_of_predicted_doublets_in_sample = sum(sample$scrublet_binary) * 100 / length(colnames(sample)),\n                        prediction_doublet_failed = was_null)\n\n# Save individual samples.\noutput_path &lt;- \"\" # Path where the samples will be stored.\n\nsaveRDS(sample, paste0(output_path, \"/\", sample_name, \"_after_QC.rds\"))"
  },
  {
    "objectID": "analysis/analysis_003_merge_samples.html",
    "href": "analysis/analysis_003_merge_samples.html",
    "title": "Merge datasets",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n#--------------------------------------------------------------------\n# 3 - MERGE INDIVIDUAL SAMPLES TOGETHER\n#--------------------------------------------------------------------\n\n# Generate a list containing all samples.\nlist_samples &lt;- list()\nsample_names_vector &lt;- c() # Vector containing all sample names.\n\nfor (sample_name_use in sample_names_vector){\n    sample.individual &lt;- readRDS(paste0(output_path, \"/\", sample_name_use, \"_after_QC.rds\"))\n    list.samples[[sample_name_use]] &lt;- sample.individual\n}\n\n# Generate the merged sample.\nsample_name &lt;- \"\" # Name for the merged sample.\nsample &lt;- merge(list_samples[[1]],\n                y = list_samples[2: length(list_samples)],\n                add.cell.ids = names(list_samples),\n                project = sample_name)\n\nmerged_sample@meta.data$orig.ident &lt;- stringr::str_replace_all(merged_sample@meta.data$orig.ident, \"\\\\.\", \"-\")\n\n# Exclude doublets.\nmessage(print0(\"Total number of doublets in the sample: \", sum(sample$scrublet_binary)))\nsample &lt;- sample[, sample$scrublet_binary == FALSE]"
  },
  {
    "objectID": "analysis/analysis_004_normalization.html",
    "href": "analysis/analysis_004_normalization.html",
    "title": "Normalization and Cell Cycle scoring",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n#--------------------------------------------------------------------\n# 4 - NORMALIZATION USING SCTRANSFORM AND CELL CYCLE SCORING\n#--------------------------------------------------------------------\n\n# In this process, we want to regress out the effect of 5 variables:\n# - nCount_RNA: UMIs. We observe different numbers across samples.\n# - nFeature_RNA: genes. We observe different numbers across samples.\n# - percent.mt: % of mitochondrial RNA in the cells.\n# - S.Score and G2M.Score: Cell cycle effect. We want to be sure this is not a bias in the data.\n\n# Get S phase genes.\ns.genes &lt;- Seurat::cc.genes.updated.2019$s.genes\n# Get G2-M phase genes.\ng2m.genes &lt;- Seurat::cc.genes.updated.2019$g2m.genes\n\n\n# We normalize first using SCTransform and removing the effect of UMIs, genes and percent.mt.\n# Process followed as in https://github.com/satijalab/seurat/issues/1679#issuecomment-557781838\n\nsample &lt;- Seurat::SCTransform(sample,\n                              assay = \"RNA\",\n                              new.assay.name = \"SCT\",\n                              vars.to.regress = c(\"nCount_RNA\", \"nFeature_RNA\", \"percent.mt\"))\n\n\n# With the data normalized, we asses the cell cycle effect.\nsample &lt;- Seurat::CellCycleScoring(object = sample,\n                                   s.features = s.genes,\n                                   g2m.features = g2m.genes,\n                                   set.ident = FALSE)\n\n\n# And then, since now S.Score and G2M.Score are stored as metadata variables, we can normalize again using also these variables in the regress out.\n\nsample &lt;- Seurat::SCTransform(sample,\n                              assay = \"RNA\",\n                              new.assay.name = \"SCT\",\n                              vars.to.regress = c(\"nCount_RNA\", \"nFeature_RNA\", \"percent.mt\", \"S.Score\", \"G2M.Score\"))\n# Please note that this second normalization uses the data in the \"RNA\" assay, this is, the unnormalized data.\n# Therefore, the data we will work on is only normalized once."
  },
  {
    "objectID": "analysis/analysis_005_dimensional_reduction.html",
    "href": "analysis/analysis_005_dimensional_reduction.html",
    "title": "Dimensional reduction",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n#--------------------------------------------------------------------\n# 5 - DIMENSIONAL REDUCTION\n#--------------------------------------------------------------------\n\nsample &lt;- Seurat::RunPCA(sample, assay = \"SCT\")\nelbow &lt;- Seurat::ElbowPlot(sample) # Visualize the number of PCs and select an appropriate number.\nnpcs &lt;- 15 # Selected number of PCs.\n\n# Normalize using Harmony. The effect to remove is the orig.ident metadata column (from where each sample comes from).\nsample &lt;- harmony::RunHarmony(sample, dims = 1:npcs, group.by.vars = \"orig.ident\", assay.use = \"SCT\")\n\n# Dimensional reduction: UMAP over harmony reduction.\nsample &lt;- Seurat::RunUMAP(sample, dims = 1:npcs, reduction = \"harmony\")\n\nsample &lt;- Seurat::FindNeighbors(sample, dims = 1:npcs, reduction = \"harmony\")\n\nsample &lt;- Seurat::FindClusters(sample,\n                               random.seed = 42)"
  },
  {
    "objectID": "analysis/analysis_006_cluster_labelling.html",
    "href": "analysis/analysis_006_cluster_labelling.html",
    "title": "Cluster labelling",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n#--------------------------------------------------------------------\n# 6 - CLUSTER LABELLING\n#--------------------------------------------------------------------\n\n# Samples are labelled according to external lists of marker genes:\n# TME: PanglaoDB: https://panglaodb.se/index.html\n# Tumor bulk: https://pubmed.ncbi.nlm.nih.gov/27806376/\n# A table with the annotation for each cell will be provided as supplementary data."
  },
  {
    "objectID": "analysis/analysis_007_CNV.html",
    "href": "analysis/analysis_007_CNV.html",
    "title": "CNV analysis",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n#----------------------------------------------------------------------------\n# 7 - CNV PROFILING FOR 10X SAMPLES GENERATING METACELLS FOR INCREASED SIGNAL\n#----------------------------------------------------------------------------\n\n# CNV profiling is done using inferCNV package.\n# In addition, here we provide the code for the generation of metacells, to further increase the resolution of the output, which can be quite noisy for 10X datasets.\n\n\n# First of all, we want to get rid of any clusters with less than 10 cells.\n# Also, we assume that the current labelling is stored in the metadata variable \"New_NMF_labelling\" and this is also use as Idents in the seurat object.\nSeurat::Idents(sample) &lt;- sample$New_NMF_labelling\n\n\nclusters_keep &lt;- c()\nfor (cluster in levels(sample)){\n    num &lt;- sum(sample$New_NMF_labelling == cluster)\n    if (num &gt;= 10){\n        clusters_keep &lt;- append(clusters_keep, cluster)\n    }\n}\n\n# Subset the sample.\nsample &lt;- sample[, sample$New_NMF_labelling %in% clusters_keep]\n\n\n# We need to retrieve the count matrix. For this, we generate metacells as follows:\n\n# Generate a new metadata column storing the mapping cell-metacell.\nsample[[\"metacell_mapping\"]] &lt;- \"not_mapped\"\n\n# Generate a new metadata column storing the mapping cell-metacell.\nsample[[\"metacell_mapping\"]] &lt;- \"not_mapped\"\n\n# Will store all the metacells.\nwhole_metacells &lt;- data.frame(test = rownames(sample), row.names = rownames(sample))\n# Will store the complete annotation for the metacells.\nwhole_annotation &lt;- data.frame(cluster_names = \"test\", row.names = \"test\")\n\nmeta_counter &lt;- 0 # To keep a count of the metacells that are created.\nmetacell_content &lt;- 5 # How many cells per metacell.\n\nfor (cluster_id in rev(levels(sample))){\n    print(sprintf(\"Computing metacells for cluster %s.\", cluster_id))\n    # Will store the metacells per cluster.\n    metacells &lt;- data.frame(test = rownames(sample), row.names = rownames(sample))\n\n    # Subset the sample by each cluster ID.\n    chunksample &lt;- sample[, sample$TME_annotation == cluster_id]\n\n    # Get the count data as a data frame and transpose it so columns are GENES and rows are CELLS.\n    countdata &lt;- t(as.data.frame(Seurat::GetAssayData(chunksample, assay = \"RNA\", slot =  \"counts\")))\n\n    # Get the possible amount of metacells.\n    times &lt;- trunc(dim(countdata)[1] / metacell_content)\n\n    for (i in seq(1,times)){\n        meta_counter &lt;- meta_counter + 1\n        # Generate slice points for each metacell.\n        start &lt;- ((i -1) * metacell_content + 1)\n        end &lt;- i * metacell_content\n\n\n        # Compute the slice as a data frame containing the sum of the subsetted cells. dims = 1 row (metacell), X columns (genes)\n        slice &lt;- as.data.frame(colSums(countdata[start:end, ]))\n\n        # Get the name of the cells merged.\n        cell_names &lt;- rownames(countdata[start:end, ])\n\n        # Add the metacell.\n        col_name &lt;- sprintf(\"metacell_%s\", meta_counter)\n        metacells[[col_name]] &lt;- slice[,1]\n\n        # Add the mapping.\n        sample$metacell_mapping[colnames(sample) %in% cell_names] &lt;- col_name\n    }\n\n    # Delete the test column as we already have more than 1 column in our data frame.\n    metacells[[\"test\"]] &lt;- NULL\n\n    # Will contain the annotation of the generated metacells. Columns: cluster identities. Rows: each metacell.\n    annotation &lt;- data.frame(cluster_names = colnames(metacells), row.names = colnames(metacells))\n    # Replace the dummy cluster_names column's values for the actual label for the cluster.\n    annotation$cluster_names &lt;- cluster_id\n\n    # Add the annotation data and the metacell data to the global containers. In the end: # Columns for metacell object = # rows for annotation object.\n    whole_metacells &lt;- cbind(whole_metacells, metacells)\n    whole_annotation &lt;- rbind(whole_annotation, annotation)\n}\n\n# Turn the names into characters for the sake of avoiding errors when subsetting.\nwhole_annotation$cluster_names &lt;- as.character(whole_annotation$cluster_names)\n\n# Delete the test row from the global annotation data.\nwhole_annotation &lt;- whole_annotation[!rownames(whole_annotation) %in% c(\"test\"), , drop = FALSE]\n\n# Delete the test column from the global metacell data.\nwhole_metacells$test &lt;- NULL\n\ncnv_analysis_folder &lt;- \"\" # Path to store the output of inferCNV\nannotation_file &lt;- sprintf(\"%s/annotation_metacells.tsv\", cnv_analysis_folder)\n# Save the annotation object.\nutils::write.table(whole_annotation,\n                   file = annotation_file,\n                   sep = \"\\t\",\n                   row.names = TRUE,\n                   col.names = FALSE,\n                   quote = FALSE)\n\n# Return the metacell object as a matrix (required for running inferCNV).\ncount_matrix &lt;- as.matrix(whole_metacells)\n\n# You might also want to save the Seurat object with the metacell mapping annotation.\nsaveRDS(sample, \"\") # Modify accordingly.\n\n# Run inferCNV:\ngene_ordering_file &lt;- \"\" # Path to where the file with the order of the genes is stored. It can also be downloaded here: https://data.broadinstitute.org/Trinity/CTAT/cnv/\nref_clusters &lt;- \"\" # Which clusters to use as a reference.\n\n# Create the inferCNV object.\ninfercnv_obj &lt;- infercnv::CreateInfercnvObject(raw_counts_matrix = count_matrix,\n                                               annotations_file = annotation_file,\n                                               delim = \"\\t\",\n                                               gene_order_file = gene_ordering_file,\n                                               ref_group_names = ref_clusters)\n\n# Run inferCNV.\ncnv_analysis_folder_output &lt;- \"\" # This path needs to not exist in your filesystem otherwise inferCNV will stop complaining that the path exists.\ninfercnv_obj &lt;- infercnv::run(infercnv_obj,\n                              cutoff = 0.1,  # use 1 for smart-seq, 0.1 for 10x-genomics\n                              min_cells_per_gene = 3, # Default.\n                              out_dir = cnv_analysis_folder,  # dir is auto-created for storing outputs\n                              cluster_by_groups = TRUE,   # Cluster by groups.\n                              denoise = TRUE,\n                              HMM = TRUE,\n                              HMM_type = \"i6\",\n                              window_length = 201,\n                              num_threads = 8,\n                              resume_mode=FALSE)\n\n# For further denoising, you can apply median filtering, but this might remove true signal from the plot.\ninfercnv_obj_median_filtered = infercnv::apply_median_filtering(infercnv_obj)\n\ninfercnv::plot_cnv(infercnv_obj_median_filtered,\n                   out_dir = cnv_analysis_folder_output,\n                   output_filename = 'infercnv.median_filtered',\n                   x.range = \"auto\",\n                   x.center = 1,\n                   title = \"infercnv\",\n                   color_safe_pal = FALSE)"
  },
  {
    "objectID": "analysis/analysis_008_NMF.html",
    "href": "analysis/analysis_008_NMF.html",
    "title": "NMF analysis",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# ------------------------------------------------------------------\n# 8 - NMF ANALYSIS ON THE TUMOR BULK\n# ------------------------------------------------------------------\n\n# Notes:\n# The first half of this code, up to individual NMF signature generation and also the function for\n# scoring metasignatures has been adapted from Volker Hovestadt's code.\n# Methodology explained in: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6754173/\n#\n\n# The following code is strongly suggested to be run in a cluster, for each sample individually as a job.\n# It can take easily 100+ GB of RAM for each unique sample in sample$orig.ident.\n\nnmf_output_folder &lt;- \"\" # Folder to store the results.\nsample_index &lt;- 1 # This will select the sample out of unique(sample$orig.ident). Modify this parameter as you run it on the cluster.\n\n\ntumor_clusters &lt;- c() # Vector with the clusters that form the tumor bulk.\nsample.tumor &lt;- sample[, sample$New_NMF_labelling %in% tumor_clusters]\n\n# Center the genes over malignant cells.\nsample.tumor &lt;- Seurat::ScaleData(sample.tumor)\n\nnmf.list &lt;- BiocGenerics::lapply(unique(sample.tumor$orig.ident)[sample_index],\n                                   function(samp){\n                                       message(samp)\n\n                                       # Subset the tumor population pertaining to the sample.\n                                       tum &lt;- sample.tumor[, sample.tumor$orig.ident == samp]\n\n                                       # Re-center the genes for this sample.\n                                       tum &lt;- Seurat::ScaleData(tum)\n\n                                       # Extract the count matrix.\n                                       cts &lt;- tum@assays$SCT@scale.data\n\n                                       # Set negative values to 0.\n                                       cts[cts &lt; 0] &lt;- 0\n\n                                       # Remove rows without expression in this sample.\n                                       cts &lt;- cts[rowSums(cts) &gt; 0, ]\n\n                                       # Compute NMF for different K (i.e: signatures).\n                                       # From 2 to 10 NMF signatures.\n                                       k &lt;- 2:10\n                                       nrun &lt;- 10\n                                       seed &lt;- 777 # Let's have some luck :P.\n\n                                       # Run NMF.\n                                       message(sprintf(\"Computing NMF for sample: %s\", samp))\n\n                                           nmf &lt;- NMF::nmf(x = cts,\n                                                           rank = k,\n                                                           nrun = nrun,\n                                                           seed = seed,\n                                                           method = \"snmf/r\",\n                                                           .options = \"p4v\")\n                                           # Save the results.\n                                           save(list = c(\"cts\", \"nmf\"),\n                                                file = paste0(nmf_output_folder, \"_\", samp, \"_nmf2to10\", \".RData\"))\n\n                                   })\n\n\n\n# Generate further directories for the results.\nnmf_heatmap_summary &lt;- sprintf(\"%s/signature_summary/\", nmf_output_folder)\nnmf_feature_plots &lt;- sprintf(\"%s/feature_plots/\", nmf_output_folder)\nnmf_signature_heatmaps &lt;- sprintf(\"%s/signature_heatmaps/\", nmf_output_folder)\nnmf_go_kegg &lt;- sprintf(\"%s/signature_GO_KEGG/\", nmf_output_folder)\nnmf_top30 &lt;- sprintf(\"%s/top30_genes_per_signature/\", nmf_output_folder)\nnmf_metaclusters &lt;- sprintf(\"%s/metaclusters/\", nmf_output_folder)\n\ndir.create(nmf_heatmap_summary, recursive = T)\ndir.create(nmf_feature_plots, recursive = T)\ndir.create(nmf_signature_heatmaps, recursive = T)\ndir.create(nmf_go_kegg, recursive = T)\ndir.create(nmf_top30, recursive = T)\ndir.create(nmf_metaclusters, recursive = T)\n\n\n# Remove MT genes, as being a snRNAseq experiment they are prone to appear later on as meta-signatures.\n# Retrieve MT genes.\nmitochondrial_genes &lt;- rownames(tumor_scaled)[grepl(\"^MT\", rownames(tumor_scaled))]\n# Filter out ribosomal genes.\ntumor_scaled &lt;- tumor_scaled[!(rownames(tumor_scaled) %in% mitochondrial_genes), ]\n\n# Read in the individual NMF signatures.\nlf &lt;- list.files(nmf_output_folder,\n                         pattern = \"nmf2to10.R*\",\n                         full.names = TRUE)\nnmf.list &lt;- BiocGenerics::lapply(lf, function(x){\n    load(x)\n    nmf\n})\n\nfi.names &lt;- lf &lt;- list.files(nmf_output_folder,\n                                     pattern = \"nmf2to10.R*\",\n                                     full.names = FALSE)\nfi.names &lt;- BiocGenerics::sapply(fi.names, function(x) strsplit(x, \"_nmf\")[[1]][1])\nfi.names &lt;- BiocGenerics::sapply(fi.names, function(x) strsplit(x, \"^_\")[[1]][2])\nnames(nmf.list) &lt;- fi.names\n\n\nmessage(\"Analyzing NMF signatures from k = 2 until k = 10.\")\ntimes &lt;- 0\nonly_one_k &lt;- FALSE # Check if only NMF was computed for only one value of K.\nfor (k in seq(2, 10)){\n    message(sprintf(\"Using k = %s\", k))\n    message(\"...\")\n    times &lt;- times + 1\n    # Start a report.\n    nmf_heatmap_summary_out &lt;- sprintf(\"%s/k_%s/\", nmf_heatmap_summary, k)\n    dir.create(nmf_heatmap_summary_out, recursive = T)\n\n    grDevices::pdf(sprintf(\"%s/%s_nmf%s.heatmap.pdf\", nmf_heatmap_summary, sample_name, k),\n                   width = 6,\n                   height = 6)\n    graphics::par(mar = c(4, 4, 4, 4))\n\n    # Initialize empty lists to store data.\n    list.cor &lt;- list()\n    list.top30 &lt;- list()\n    for (i in names(nmf.list)){\n        if (only_one_k == FALSE){\n            X.nmf &lt;- nmf.list[[i]][[\"fit\"]][[times]]\n        } else if (only_one_k == TRUE){\n            X.nmf &lt;- nmf.list[[i]]@fit\n        }\n\n        # Basis (metagenes).\n        X.nmf.basis &lt;- NMF::basis(X.nmf)\n\n        # Exclude mitochondrial genes.\n        X.nmf.basis &lt;- X.nmf.basis[!(rownames(X.nmf.basis) %in% rownames(X.nmf.basis)[grepl(\"^MT\", rownames(X.nmf.basis))]), ]\n\n        colnames(X.nmf.basis) &lt;- paste0(\"k\", seq(ncol(X.nmf.basis)))\n        X.nmf.basis.hc1 &lt;- stats::hclust(stats::dist(X.nmf.basis), method = \"average\")\n\n        # Plot heatmap.\n        heatmap(X.nmf.basis,\n                Rowv = stats::as.dendrogram(X.nmf.basis.hc1),\n                Colv = NA,\n                zlim = c(0, max(X.nmf.basis)),\n                scale = \"n\",\n                col = grDevices::grey.colors(1000, 1, 0),\n                useRaster = TRUE,\n                labRow = FALSE,\n                main = paste0(i, \", base\"))\n\n        # Coef.\n        X.nmf.coef &lt;- NMF::coef(X.nmf)\n        rownames(X.nmf.coef) &lt;- paste0(\"k\", seq(nrow(X.nmf.coef)))\n        X.nmf.coef.hc1 &lt;- stats::hclust(stats::dist(X.nmf.coef), method = \"average\")\n        X.nmf.coef.hc2 &lt;- stats::hclust(stats::dist(t(X.nmf.coef)), method = \"average\")\n        heatmap(X.nmf.coef[rev(seq(nrow(X.nmf.coef))), ],\n                Rowv = NA,\n                Colv = stats::as.dendrogram(X.nmf.coef.hc2),\n                zlim=c(0, max(X.nmf.coef)),\n                scale=\"n\",\n                col = grDevices::grey.colors(1000, 1, 0),\n                useRaster=FALSE,\n                labCol=FALSE,\n                main=paste0(i, \", coef\"))\n\n        # Top genes, just use basis.\n        X.nmf.basis.cor &lt;- t(X.nmf.basis)\n        list.cor[[i]] &lt;- X.nmf.basis.cor\n\n        X.nmf.basis.top30 &lt;- apply(X.nmf.basis.cor, 1, function(x) colnames(X.nmf.basis.cor)[order(x, decreasing = TRUE)[1:30]])\n        list.top30[[i]] &lt;- X.nmf.basis.top30\n\n        Y &lt;- tumor_scaled[as.vector(X.nmf.basis.top30), intersect(colnames(X.nmf.coef), colnames(tumor_scaled))] #\n        Y &lt;- Y - rowMeans(Y)  # re-center\n        Y.hc &lt;- stats::as.dendrogram(stats::hclust(stats::as.dist(1 - stats::cor(Y)), method = \"ward.D\"))\n        #Y.hc &lt;- stats::reorder(Y.hc, wts = colMeans(tumor_scaled[ribosomal_genes, ])-colMeans(tumor_scaled[c(x1, x2), ]), agglo.FUN = mean)\n        #Z &lt;- as.matrix(scaleMinMax(Y , -6, 6))\n        Z &lt;- as.matrix(scale(Y))\n        heatmap(Z[rev(seq(nrow(Z))), ],\n                Rowv = NA,\n                Colv = as.dendrogram(Y.hc),\n                scale = \"n\",\n                zlim = c(0, 1),\n                useRaster = TRUE,\n                cexRow = 0.5,\n                cexCol = 0.1,\n                add.expr = graphics::abline(h = head(cumsum(rep(nrow(X.nmf.basis.top30),\n                                                                        ncol(X.nmf.basis.top30))), -1) + 0.5), main=paste0(i, \", \", paste0(dim(Z), collapse=\"x\")))\n    }\n    grDevices::dev.off()\n    save(list = c(\"list.top30\", \"list.cor\", \"nmf.list\"),\n         file = paste0(nmf_top30, \"all_samples_nmf\", k, \"_signatures.RData\"))\n    list.top30.cbind &lt;- do.call(cbind, list.top30)\n    colnames(list.top30.cbind) &lt;- unlist(BiocGenerics::lapply(names(list.top30), function(i){paste0(i, \".\", seq(ncol(list.top30[[i]])))}))\n\n    write.table(list.top30.cbind,\n                file = paste0(nmf_top30, \"all_samples_nmf\", k, \"_signatures.txt\"),\n                sep = \"\\t\",\n                quote = FALSE)\n}\n\n# Define 2 custom functions.\n\n# Define 2 functions.\n## (supposed) input for \"scoreSignature\":\n## X.center - centered expression matrix for all tumor cells\n## X.mean - mean expression for each gene across all tumor cells\n## s - signature genes\n\n# Function from Volker Hovestadt.\nscoreSignature &lt;- function(X.center, X.mean, signature, n = 100, verbose = F) {\n    if(verbose) {\n        message(\"Number of cells: \", ncol(X.center))\n        message(\"Number of genes: \", nrow(X.center))\n        message(\"Number of genes in signature: \", length(signature))\n        message(\"...\\n\\n\")\n    }\n    # Compute the signature score: A score per cell for the top 30 genes in this signature.\n    s.score &lt;- colMeans(# Compute the mean per column of the output so that you have 1 score per gene.\n        do.call(rbind, # Concatenate the output row by row (gene by gene).\n                BiocGenerics::lapply(signature, # Apply this function to each gene in the list.\n                                     function(gene) {\n                                         ## X.mean[gene] - X.mean =&gt; Substracts the median expression of the genes to the expression of the queried gene.\n                                         ## abs(X.mean[gene] - X.mean) ==&gt; Have it as absolute values.\n                                         ## sort(abs(X.mean[gene] - X.mean)) ==&gt; sort the values in ascending order.\n                                         ## names(sort(abs(X.mean[gene] - X.mean)) ==&gt; keep only the names of the sorted genes in ascending order with the lowest difference in expression values.\n                                         ## names(sort(abs(X.mean[gene] - X.mean))[2:(n+1)]) Keep only the 2 to 101 genes (100 in totol) as control set (the 1st is the queried gene).\n                                         g.n &lt;- names(sort(abs(X.mean[gene] - X.mean))[2:(n+1)])\n                                         ## X.center[gene, ] =&gt; The expression values of the queried gene in each cell.\n                                         ## X.center[g.n, ] =&gt; The mean expression values of the control set in each cell.\n                                         ## X.center[gene, ] - colMeans(X.center[g.n, ]) =&gt; Difference in expression between queried gene and the control set per cell.\n                                         X.center[gene, ] - colMeans(X.center[g.n, ])\n                                     }\n                ) # Therefore, this outputs a vector of the difference in expression values between the gene and the control set per cell.\n        ) # Therefore, the outputs a matrix where columns are cells and rows are each of the queried genes.\n        # Each row will contain the difference of expression between each queried gene and the control set, per cells.\n    ) # Finally, this outputs the mean score of all genes belonging to the signature per cell.\n    # In other words, it is the  difference expression values between each gene belonging to the signature\n    # and the control set of genes, which is defined as the top 100 most similar genes in expression values between each queried\n    # gene and the rest of the genes in the centered expression matrix for all tumor cells, averaged for each cell.\n    # s.score = named vector with names = each cell and value = signature score for the cells.\n    return(s.score)\n}\n\n# Adaptation from Volker Hovestadt function.\n# Pretty much the same contept as scoreSignature but with a twist in the end. Instead of doing colMeans to get the average score for each cell for all of the genes in the signature.\n# rowMeans to get the averaged score for each gene for all of the cells in the dataset provided.\nscoreGene &lt;- function(X.center, X.mean, signature, n = 100, verbose = F) {\n    if(verbose) {\n        message(\"Number of cells: \", ncol(X.center))\n        message(\"Number of genes: \", nrow(X.center))\n        message(\"Number of genes in signature: \", length(signature))\n        message(\"...\\n\\n\")\n    }\n    s.score &lt;- rowMeans(do.call(rbind, lapply(signature, function(gene) {\n        g.n &lt;- names(sort(abs(X.mean[gene] - X.mean))[2:(n+1)])\n        X.center[gene, ] - colMeans(X.center[g.n, ])\n    })))\n    return(s.score)\n}\n\n# The following code creates a list of heatmaps that will help you decide for which value of N (number of NMF signatures) is best.\n# This is decided based on the number and quality of the groups in the correlation plot.\n\n# List placeholder for plot outputs.\nlist_plots &lt;- list()\nlist_nmf_signatures_heatmaps &lt;- list()\n\nfor (k in seq(2,10)){\n    # Read in signatures.\n    print(\"Reading signatures.\")\n    message(paste0(\"Using k = \", k))\n    nmf.sign &lt;- read.table(paste0(nmf_top30, \"all_samples_nmf\", k, \"_signatures.txt\"), sep = \"\\t\")\n\n    # Calculate the scores for each signature in each cell.\n    X.mean &lt;- rowMeans(tumor_scaled) # Mean expression level of the scale.data dataset of the tumor bulk.\n    sign.scores &lt;- apply(nmf.sign, 2, function(signature){scoreSignature(X.center = tumor_scaled,\n                                                                         X.mean = X.mean,\n                                                                         signature)})\n\n    # Correlate/Cluster signatures over all scores.\n    corr &lt;- stats::cor(sign.scores)\n    range &lt;- max(abs(corr))\n\n    # Compute the heatmap.\n    h &lt;- pheatmap::pheatmap(corr,\n                            color = grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(n = 7, name = \"RdBu\")))(100),\n                            breaks = seq(-range, range, length.out = 100),\n                            show_colnames = F,\n                            treeheight_col = 0)\n\n    # Store the heatmap.\n    list_nmf_signatures_heatmaps[[paste0(\"nmf\", k)]] &lt;- h\n}\n\n# Modify this values accordingly\nind_k &lt;- 10 # Final k for individual signatures to use.\nmeta_k &lt;- 4 # Number of meta-clusters to derive from the signatures generated with ind_k.\n\nnmf.sign &lt;- read.table(paste0(nmf_top30, \"all_samples_nmf\", ind_k, \"_signatures.txt\"), sep = \"\\t\")\nX.mean &lt;- rowMeans(tumor_scaled)\nsign.scores &lt;- apply(nmf.sign, 2, function(signature){scoreSignature(X.center = tumor_scaled,\n                                                                     X.mean = X.mean,\n                                                                     s = signature)})\n\n# Correlate/Cluster signatures over all scores.\ncorr &lt;- stats::cor(sign.scores)\nrange &lt;- max(abs(corr))\n\n\n\nh &lt;- pheatmap::pheatmap(corr,\n                        color = grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(n = 7, name = \"RdBu\")))(100),\n                        breaks = seq(-range, range, length.out = 100),\n                        show_colnames = F,\n                        treeheight_col = 0,\n                        cutree_rows = meta_k,\n                        cutree_cols = meta_k)\n\n# Colors for the metasignature annotation.\nann_colors &lt;- colortools::wheel(\"steelblue\", meta_k)\nnames(ann_colors) &lt;- BiocGenerics::sapply(as.character(seq(1, meta_k)), function(x){paste0(\"Metasignature_\", x)})\n\n# Colors for the sample annotation.\nsamp_colors &lt;- colortools::wheel(\"navyblue\", length(unique(sample.tumor$orig.ident)))\nnames(samp_colors) &lt;- unique(sample.tumor$orig.ident)\n\n# Colors for the grade annotation.\nsubtype_colors &lt;- c(\"#195A70\", \"#702F19\")\nnames(subtype_colors) &lt;- c(\"2\", \"3\")\n\n# List containing all colors.\ncolors &lt;- list(\"Metasignature\" = ann_colors,\n               \"Origin\" = samp_colors,\n               \"Grade\" = subtype_colors)\n\n# Workaround to modify the names.\nmetaclust &lt;- stats::cutree(h$tree_row, k = meta_k)\nmetaclust.s &lt;- as.character(BiocGenerics::sapply(metaclust, function(x){paste0(\"Metasignature_\", x)}))\nnames(metaclust.s) &lt;- names(metaclust)\nmetaclust &lt;- metaclust.s\n\n# Annotation values for the sample of origin.\norigin &lt;- BiocGenerics::sapply(colnames(corr), function(x){substring(x, 1, nchar(x)-2)})\norigin &lt;- BiocGenerics::sapply(origin, function(x){stringr::str_replace_all(x, \"[.]\", \"-\")})\norigin &lt;- BiocGenerics::sapply(origin, function(x){stringr::str_replace_all(x, \"-$\", \"\")})\n\n# Annotation vlaues for the grade.\nsubgroup &lt;- origin\ngrade_2 &lt;- unique(sample.tumor[, sample.tumor$grade == \"2\"]$orig.ident)\ngrade_3 &lt;- unique(sample.tumor[, sample.tumor$grade == \"3\"]$orig.ident)\n\norigin &lt;- factor(origin)\n\nsubgroup[subgroup %in% grade_2] &lt;- 2\nsubgroup[subgroup %in% grade_3] &lt;- 3\n\ncellwidth &lt;- 10\ncellheight &lt;- 10\n\n# First visualization of the correlation heatmap with annotations.\nh.anno &lt;- pheatmap::pheatmap(corr,\n                             color = grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(n = 7, name = \"RdBu\")))(100),\n                             breaks = seq(-range, range, length.out = 100),\n                             show_colnames = F,\n                             treeheight_col = 0,\n                             annotation_col = data.frame(\"Metasignature\" = metaclust,\n                                                         \"Origin\" = origin,\n                                                         \"Subtype\" = subgroup),\n                             annotation_colors = colors,\n                             cellwidth = cellwidth,\n                             cellheight = cellheight)\n\n# Copy  to modify the names. This can also be done to subset only given metasignatures if needed (hence, the .small naming).\nmetaclust_small &lt;- metaclust\n\n# Recompute the correlation.\ncorr.small &lt;- stats::cor(sign.scores[, names(metaclust_small)])\nrange.small &lt;- max(abs(corr.small))\n\n# Rename groups if needed.\nnames_sign &lt;- names(metaclust_small)\nassign_sign &lt;- as.character(metaclust_small)\n# Rename the signatures accordingly.\nassign_sign[assign_sign %in% c(\"Metasignature_3\", \"Metasignature_5\")] &lt;- \"Metasignature_1\" # Rename several metasignatures at once.\nassign_sign[assign_sign == \"Metasignature_6\"] &lt;- \"Metasignature_3\" # Rename individual metasignatures at one.\n# Regenerate the metaclust_small object.\nnames(assign_sign) &lt;- names_sign\nmetaclust_small &lt;- as.factor(assign_sign)\n\n# Recompute annotation. Same process as before.\nann_colors_small &lt;- colortools::wheel(\"steelblue\", length(levels(metaclust_small)))\nnames(ann_colors_small) &lt;- levels(metaclust_small)\n\n\norigin_small &lt;- BiocGenerics::sapply(colnames(corr.small), function(x){substring(x, 1, nchar(x)-2)})\norigin_small  &lt;- BiocGenerics::sapply(origin_small, function(x){stringr::str_replace_all(x, \"[.]\", \"-\")})\norigin_small &lt;- BiocGenerics::sapply(origin_small, function(x){stringr::str_replace_all(x, \"-$\", \"\")})\n\nsubgroup_small &lt;- origin_small\ngrade_2 &lt;- unique(sample.tumor[, sample.tumor$grade == \"2\"]$orig.ident)\ngrade_3 &lt;- unique(sample.tumor[, sample.tumor$grade == \"3\"]$orig.ident)\n\norigin_small &lt;- factor(origin_small)\n\nsubgroup_small[subgroup_small %in% grade_2] &lt;- 2\nsubgroup_small[subgroup_small %in% grade_3] &lt;- 3\n\n\nsamp_colors &lt;- colortools::wheel(\"navyblue\", length(unique(sample.tumor$orig.ident)))\nnames(samp_colors) &lt;- unique(sample.tumor$orig.ident)\n\ncolors_small &lt;- list(\"Metasignature\" = ann_colors_small,\n                     \"Origin\" = samp_colors,\n                     \"Subtype\" = subtype_colors)\n\n# Final visualization with the annotation fixed. It should look pretty neat.\nh.small &lt;- pheatmap::pheatmap(corr.small,\n                              color = grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(n = 7, name = \"RdBu\")))(100),\n                              breaks = seq(-range.small, range.small, length.out = 100),\n                              show_colnames = F,\n                              treeheight_col = 0,annotation_col = data.frame(\"Metasignature\" = metaclust_small,\n                                                          \"Origin\" = origin_small,\n                                                          \"Subtype\" = subgroup_small),\n                              annotation_colors = colors_small,\n                              cellwidth = 10,\n                              cellheight = 10)\n\n\n# If the previous visualization is good, we can proceed with the metasignature assignment.\nmetaclust &lt;- metaclust_small # Assign the good one.\n\n# Compute a metasignature score for each of the metasignatures for each of the cells.\navg.sc.cell &lt;- as.data.frame(BiocGenerics::sapply(as.character(levels(metaclust)), function(c) {rowMeans(sign.scores[,which(metaclust == c), drop = FALSE])}))\n\n# Add the scores as metadata.\nfor (mc in colnames(avg.sc.cell)){\n    scores &lt;- avg.sc.cell[, mc]\n    names(scores) &lt;- rownames(avg.sc.cell)\n    sample.tumor[[mc]] &lt;- scores\n}\n\n# Assign to each cell the maximum score out of the different computed metasignatures.\n# PLEASE NOTE: while this might give you a hint towards the different populations in the tumor bulk, the assignment might not be perfect.\n# What if a cells is almost equally scored for several metasignatures? Use this as a first look, but not as a definitive result.\n# For this, we recommend the use of the top 30 genes per metasignature paired with enrichment scores (shown afterwards).\nsample.tumor$metaclust &lt;- BiocGenerics::sapply(apply(avg.sc.cell, 1, which.max), function(x){paste0(\"Metasignature_\", x)})\nsample.tumor$metaclust &lt;- as.character(sample.tumor$metaclust)\n\n\n # Compute the top 30 scoring genes per each metasignature\n final.sign &lt;- list()\n for (mc in colnames(avg.sc.cell)){\n     # c here is the FUNCTION to combine VALUES into a VECTOR.\n     ## nmf.sign[which(metaclust == mc) =&gt; retrieve the signatures (top 30 genes) from nmf.sign that belong to the meta-signature with the scores per cell for those signatures.\n     ## do.call(c, nmf.sign[which(metaclust == mc)])) =&gt; Generate a vector with the genes in each signature.\n     ## unique(do.call(c, nmf.sign[which(metaclust == mc)])) =&gt; Avoid repeting genes.\n     ## Therefore, sign is a vector of the unique genes present in all of the signatures that form the meta-signature.\n     sign &lt;- unique(do.call(c, nmf.sign[which(metaclust == mc)]))\n     # Compute the gene scores for each gene for all the cells that were assigned to a given metacluster.\n     gene.score &lt;- scoreGene(tumor_scaled[, which(sample.tumor$metaclust == mc)], X.mean, sign)\n     #expr &lt;- rowMeans(Ec[sign, which(tumor.subs$metaclust == x)])\n     top.genes &lt;- sign[order(gene.score, decreasing = T)[1:30]]\n     # Include the list of top.genes in the final signature list.\n     final.sign[[mc]] &lt;- top.genes\n }\n\n# Make sure to save both the metaclust and final.sign object.\nsaveRDS(metaclust, \"\") # Modify the path accordingly.\nsaveRDS(final.sign, \"\") # Modify the path accordingly.\n\n# With the top 30 scoring genes per MS, one can do multiple downstream analysis to try to infer the properties of the metasignatures."
  },
  {
    "objectID": "analysis/analysis_009_permutation_testing.html",
    "href": "analysis/analysis_009_permutation_testing.html",
    "title": "Permutation testing",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n#' Retrieve statistically enriched cells for a list of genes in gradient-like enrichment cases.\n#'\n#' Designed for 10X datasets. The following analysis aims to find a way to statistically select the cells that are truly enriched in a list of marker genes.\n#' For this, a permutation analysis approach is followed, in which we compute a null distribution by shuffling the expression values\n#' of the genes queried for enrichment. Therefore, this disrupts the equation for the enrichment scores, since they are, in short,\n#' the result of the difference in means between the expression values of the genes queried (which we disrupted) and the control\n#' selected randomly by the function. This is done until we have one million values, which would act as the null distribution.\n#' Once we have a null distribution and an empirical one, we can assess how extreme our values in the empirical distribution are with\n#' respect to the values in the null distribution, being the p-value the proportion of values in the null distribution that are higher\n#' than the given value from the empirical distribution you are querying. These p-values are, then, adjusted for multiple testing, selecting\n#' a FDR cutoff of 0.05/n, being n the total number of lists of marker genes we are going to query to the same cells and use altogether\n#' to define a labeling (for instance, if we query two lists for the same tumor bulk, it would be 0.05/2). This is doing to avoid\n#' over inflation of the alpha error. Special thanks to Martin Sils for double checking the statistical part of the function.\n#'\n#' Estimated running time: 15 minutes.\n#'\n#' @param sample Seurat object.\n#' @param input_gene_list Named list of marker genes. Can contain multiple lists, the important point here is that each list has to be named.\n#' @param compute_enrichment Whether to compute the enrichment scores for the requested list of genes using \\link[Seurat]{AddModuleScore}.\n#' @param FDR_cutoff FDR cutoff to apply (ranging from 0 to 1).\n#' @param idents.use Identities to include in the analysis.\n#' @param group.by Variable you want the cells to be colored for in the output DimPlot.\n#' @param colors.use Vector of named HEX values to color the cells. It has to match the number of unique values in either `Seurat::Idents(sample)` or the group.by variable.\n#' @param verbose Defaults to TRUE. It will provide different print statements. Progress bars can not be suppressed by this.\n#' @return A list containing the plots and the surpassed cells, together with the p-value matrix.\n#' @noRd\n#' @examples\n#' \\dontrun{\n#' TBD\n#' }\ndo_GradientSelection &lt;- function(sample,\n                                 input_gene_list,\n                                 assay = \"SCT\",\n                                 slot = \"data\",\n                                 group.by = NULL,\n                                 colors.use = NULL,\n                                 FDR_cutoff = 0.05 / length(names(input_gene_list)),\n                                 verbose = T,\n                                 nbin = 24,\n                                 ctrl = 100,\n                                 font.size = 14,\n                                 font.type = \"sans\",\n                                 legend.position = \"bottom\",\n                                 use_viridis = TRUE,\n                                 viridis_color_map = \"G\",\n                                 viridis_direction = 1,\n                                 sequential.palette = \"YlGnBu\",\n                                 sequential_direction = -1){\n\n  # Checks for packages.\n  #check_suggests(function_name = \"do_GradientSelection\")\n\n  # Check if the sample provided is a Seurat object.\n  #check_Seurat(sample = sample)\n\n  # Define pipe operator internally.\n  `%&gt;%` &lt;- magrittr::`%&gt;%`\n\n\n  # If the user has provided a color list.\n  if (!is.null(colors.use)){\n    #check_colors(colors.use)\n  }\n\n  if (is.null(group.by)){\n    sample$group.by &lt;- Seurat::Idents(sample)\n    group.by &lt;- \"group.by\"\n  }\n\n  list.out &lt;- list()\n  if (isTRUE(verbose)){message(paste(\"Computing enrichment scores...\"))}\n  out &lt;- SCpubr::do_EnrichmentHeatmap(sample = sample,\n                                      input_gene_list = input_gene_list,\n                                      flavor = \"Seurat\",\n                                      nbin = nbin,\n                                      ctrl = ctrl,\n                                      return_object = TRUE,\n                                      use_viridis = FALSE,\n                                      sequential_direction = 1)\n  list.out[[\"Enrichment_Heatmap\"]] &lt;- out$Heatmap\n\n  for (name in names(input_gene_list)){\n    if (isTRUE(verbose)){message(paste(\"Running permutation testing for list:\", name))}\n\n    # Retrieve empirical distribution.\n    test.dist &lt;- out$Object@meta.data[, name, drop = FALSE]\n    vect &lt;- test.dist[, 1]\n    names(vect) &lt;- rownames(test.dist)\n    test.dist &lt;- vect\n    list.out[[name]][[\"Data\"]][[\"Empirical_Distribution\"]] &lt;- test.dist\n    # Compute Null distribution\n    if (isTRUE(verbose)){message(\"Computing permutations...\")}\n    # We want a null distribution with at least 1.000.000 permutations.\n    wanted_permutations &lt;- 1000000\n    number_cells &lt;- ncol(sample)\n    nruns &lt;- trunc(wanted_permutations / number_cells) + 1\n\n    null.dist &lt;- data.frame(row.names = colnames(sample))\n    message(\"Computing iterations...\")\n    for (i in seq_len(nruns)){\n      message(i)\n      # Set seed in every iteration.\n      set.seed(i)\n\n      genes.query &lt;- input_gene_list[[name]]\n      # First, create a replacement object.\n      sample.null &lt;- sample\n      # Get the normalized data assay (sparse matrix).\n      data.use &lt;- Seurat::GetAssayData(object = sample.null,\n                                       assay = assay,\n                                       slot = slot)\n      row.order &lt;- rownames(data.use) # We want to preserve the original order of the matrix.\n\n      # Subset out the matrix we do not want to reshuffle.\n      data.keep &lt;- data.use[-which(rownames(data.use) %in% genes.query), ] # Remove the input genes from the matrix.\n\n      # Get the subset for reshuffle.\n      data.to.shuffle &lt;- data.use[which(rownames(data.use) %in% genes.query), ]\n      # For each gene in the list of markers.\n      df.new &lt;- list()\n      for (gene in genes.query){\n        # Get the scores.\n        expression.scores &lt;- data.to.shuffle[gene, ]\n        # Permute the scores for all cells for that given gene.\n        shuffled.scores &lt;- sample(expression.scores, length(expression.scores))\n        # As the cell names get shuffled as well, we have to change them back to the original order.\n        names(shuffled.scores) &lt;- names(expression.scores)\n        df.new[[gene]] &lt;- shuffled.scores\n      }\n      data.to.shuffle &lt;- Matrix::as.matrix(t(sapply(df.new, unlist)))\n      data.use &lt;- rbind(data.keep, data.to.shuffle) # Perform a rowbind of the two matrices (instead of directly modifying the first one, which takes forever to do)\n      data.use &lt;- data.use[row.order, ] # Reorder back the matrix.\n      # Set the new matrix as the Assay data from which the enrichment scores will be computed on.\n      sample.null &lt;- Seurat::SetAssayData(sample.null, assay = assay, slot = slot, new.data = data.use)\n      # Compute enrichment scores, which will be the null distribution of the iteration.\n      sample.null &lt;- SCpubr:::compute_enrichment_scores(sample = sample.null,\n                                                        input_gene_list = input_gene_list[name],\n                                                        assay = assay)\n      # Retrieve teh null distribution.\n      null.dist[[i]] &lt;- sample.null[[]][, name]\n    }\n\n    # Assign the cell names back to the output matrix.\n    rownames(null.dist) &lt;- colnames(sample)\n    list.out[[name]][[\"Data\"]][[\"Null_Dist_Iteration_Vectors\"]] &lt;- null.dist\n    # Prepare the data for plotting.\n    data.plot &lt;- as.data.frame(null.dist) %&gt;% # Make the matrix into tidiverse accepted object.\n      dplyr::mutate(Empirical = test.dist) %&gt;% # Add the empirical distribution to the matrix of AddModuleScore() iterations.\n      tidyr::pivot_longer(dplyr::everything(), names_to = \"Distribution\", values_to = \"Enrichment\") %&gt;%\n      dplyr::mutate(Distribution = ifelse(Distribution == \"Empirical\", \"Empirical\", \"Null\")) # Assign any name in Distribution that is not \"Empirical\" into \"Null\". By default, non-labelled df columns are named V1, V2...\n    list.out[[name]][[\"Data\"]][[\"Distributions\"]] &lt;- data.plot\n\n    # Visualize the density plot of both distributions.\n\n    p.dist &lt;- data.plot %&gt;%\n      ggplot2::ggplot(ggplot2::aes(x = .data$Enrichment,\n                                   y = ..density..,\n                                   color = .data$Distribution,\n                                   fill = .data$Distribution)) +\n      ggplot2::geom_density(alpha = 0.5) +\n      ggplot2::scale_fill_manual(values = rev(RColorBrewer::brewer.pal(n = 11, name = \"RdBu\")[c(1, 11)])) +\n      ggplot2::scale_color_manual(values = rev(RColorBrewer::brewer.pal(n = 11, name = \"RdBu\")[c(1, 11)])) +\n      ggplot2::xlab(\"Enrichment scores\") +\n      ggplot2::ylab(\"Density\") +\n      ggplot2::labs(title = paste0(name, \" | Null vs Empirical distributions\"),\n                    caption = \"P-value is, for a given cell and its empirical enrichment score,\\n the proportion of values in the null distribution higher than it.\") +\n      ggplot2::guides(fill = ggplot2::guide_legend(title = \"Distribution\",\n                                                   title.position = \"top\",\n                                                   title.hjust = 0.5)) +\n      ggplot2::theme_minimal(base_size = font.size) +\n      ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                        face = \"bold\"),\n                     axis.line.x = ggplot2::element_line(color = \"black\"),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_text(color = \"black\",\n                                                         face = \"bold\"),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     axis.ticks = ggplot2::element_line(color = \"black\"),\n                     panel.grid.major = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                     plot.subtitle = ggplot2::element_text(hjust = 0),\n                     plot.caption = ggplot2::element_text(hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = font.type),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"bold\"),\n                     legend.position = legend.position,\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text =ggplot2::element_text(color = \"black\", face = \"bold\"))\n\n    list.out[[name]][[\"Plots\"]][[\"Distirbution_plot\"]] &lt;- p.dist\n\n    # Generate the p-values for each enrichment score in the empirical distribution.\n    num_permutations &lt;- sum(data.plot$Distribution == \"Null\")\n\n    null_dist_values &lt;- data.plot %&gt;% # Gather the null distribution.\n      dplyr::filter(Distribution == \"Null\") %&gt;% # Filter only the values for the NULL.\n      dplyr::select(Enrichment)\n    null_dist_values &lt;- null_dist_values$Enrichment\n\n    if (verbose){message(\"Computing p-values.\")}\n    p.value.vector &lt;- c() # Will store all the p-values and will become a column of dist.data.\n    # This might also take 10 minutes, since the vector is of 1 million data points to be suuuuuuper exact on the null distribution side.\n    p.value.vector &lt;- unlist(pbapply::pblapply(test.dist, function(x){\n      greater_values &lt;- sum(null_dist_values &gt; x)\n      p.value &lt;- (greater_values + 1) / (num_permutations + 1) #https://pubmed.ncbi.nlm.nih.gov/21044043/\n      names(p.value) &lt;- names(x) # Assign the cell name to the p-value.\n      p.value.vector &lt;- c(p.value.vector, p.value) # Add the p-value to the output vector.\n    }))\n\n    # Generate a reporting matrix for the given permutation test.\n    dist.data &lt;- tidyr::tibble(Cell = names(test.dist),\n                               Empirical = test.dist,\n                               p.value = p.value.vector)\n\n    # FDR correction.\n    if (isTRUE(verbose)) {message(paste0(\"Using the FDR cutoff of: \", FDR_cutoff))}\n    dist.data &lt;- dist.data %&gt;%\n      dplyr::arrange(.data$p.value) %&gt;% # Order by ascending p-value.\n      dplyr::mutate(p.value.adj = stats::p.adjust(.data$p.value, method = \"BH\")) %&gt;% # Adjust for multiple testing and produce q-values.\n      dplyr::mutate(significant = ifelse(.data$p.value.adj &lt;= FDR_cutoff, TRUE, FALSE))\n    list.out[[name]][[\"Data\"]][[\"PlotData\"]] &lt;- dist.data\n    list.out[[name]][[\"Data\"]][[\"Null_Distribution\"]] &lt;- null_dist_values\n\n    # Visualizations.\n    # UMAP coloring the cells that surpassed the FDR correction.\n    surpassing_cells &lt;- dist.data %&gt;%\n      dplyr::filter(.data$significant == TRUE) %&gt;%\n      dplyr::pull(.data$Cell)\n    list.out[[name]][[\"Data\"]][[\"Satatistically_Enriched_Cells\"]] &lt;- surpassing_cells\n    p.umap &lt;- SCpubr::do_FeaturePlot(out$Object,\n                                     features = name,\n                                     use_viridis = use_viridis,\n                                     viridis_color_map = viridis_color_map,\n                                     viridis_direction = viridis_direction,\n                                     sequential.palette = sequential.palette,\n                                     sequential_direction = sequential_direction,\n                                     legend.position = legend.position,\n                                     font.size = font.size,\n                                     font.type = font.type)\n    list.out[[name]][[\"Plots\"]][[\"Enrichment\"]] &lt;- p.umap\n    if (length(surpassing_cells) &gt; 0){\n\n      p.selection &lt;-SCpubr::do_DimPlot(sample,\n                                       cells.highlight = surpassing_cells,\n                                       plot.caption = paste(\"Selected cells for gene list: \",\n                                                            name,\n                                                            \" | Enriched cells: \",\n                                                            sum(dist.data$p.value.adj &lt; FDR_cutoff),\n                                                            \"| FDR used: \",\n                                                            FDR_cutoff,\n                                                            \" | Enrichment score cutoff:\",\n                                                            round(min(dist.data$Empirical[sum(dist.data$p.value.adj &lt; FDR_cutoff)], na.rm = TRUE), 3),\n                                                            \" | Number comparisons: \",\n                                                            length(names(input_gene_list))))\n\n      list.out[[name]][[\"Plots\"]][[\"Selection\"]] &lt;- p.selection\n    }\n  }\n  return(list.out)\n}"
  },
  {
    "objectID": "analysis/analysis_010_progeny.html",
    "href": "analysis/analysis_010_progeny.html",
    "title": "Pathway and TF activity analysis",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# ------------------------------------------------------------------\n# 10 - PROGENY ANALYSIS\n# ------------------------------------------------------------------\n\n# Retrieve the merged LGG: OD + AS dataset.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/datasets/integrated_LGGs.rds\")\n\n# And the labels from OD and AS.\nlabels.astro &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/datasets/labels_primary_AS.rds\")\nlabels.oligo &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/datasets/labels_primary_OD.rds\")\nlabels.use &lt;- c(labels.astro, labels.oligo)\nsample$relabelling &lt;- labels.use\n\n# Subset for tumor cells.\nsample &lt;- sample[, sample$relabelling %in% c(\"Astro-like\", \"RA\", \"OPC-like\", \"Gradient\", \"Cycling\")]\n\n# Since our datasets are quite large, it is not possible to run them at once in R.\n# Therefore, we generate chunks and then combine the scores back to a single matrix.\n# Will contain the results of the chunks.\ndorothea_vector &lt;- list()\nprogeny_vector &lt;- list()\n\n\n# Retrieve prior-knowledge networks.\ndorothea_network &lt;- decoupleR::get_dorothea(organism = \"human\",\n                                            levels = c(\"A\", \"B\", \"C\"))\n\nprogeny_network &lt;- decoupleR::get_progeny(organism = \"human\")\n\n# This for loop is tailored to our dataset.\n# Chunks of 10000 cells.\nfor (i in 0:11){\n  values &lt;- c((10000 * i) + 1, (10000 * i) + 10000)\n  if (i == 11){\n    values[2] &lt;- 119424 # Max cells.\n  }\n  values &lt;- seq(from = values[1], to = values[2], by = 1)\n  \n  # Subset sample.\n  sample.use &lt;- sample[, colnames(sample)[values]]\n  \n  # Run dorothea.\n  activities &lt;- decoupleR::run_wmean(mat = as.matrix(sample.use@assays[[\"SCT\"]]@data),\n                                     network = dorothea_network,\n                                     .source = \"source\",\n                                     .targe = \"target\",\n                                     .mor = \"mor\",\n                                     times = 100,\n                                     minsize = 5)\n  dorothea_vector[[paste0(\"Iteration_\", i)]] &lt;- activities\n\n  # Run progeny.\n  activities &lt;- decoupleR::run_wmean(mat = as.matrix(sample.use@assays[[\"SCT\"]]@data),\n                                     network = progeny_network,\n                                     .source = \"source\",\n                                     .targe = \"target\",\n                                     .mor = \"weight\",\n                                     times = 100,\n                                     minsize = 5)\n  progeny_vector[[paste0(\"Iteration_\", i)]] &lt;- activities\n}\n\n# Save results.\ndorothea_activities &lt;- rbind(dorothea_vector$Iteration_0,\n                             dorothea_vector$Iteration_1,\n                             dorothea_vector$Iteration_2,\n                             dorothea_vector$Iteration_3,\n                             dorothea_vector$Iteration_4,\n                             dorothea_vector$Iteration_5,\n                             dorothea_vector$Iteration_6,\n                             dorothea_vector$Iteration_7,\n                             dorothea_vector$Iteration_8,\n                             dorothea_vector$Iteration_9,\n                             dorothea_vector$Iteration_10,\n                             dorothea_vector$Iteration_11)\nsaveRDS(dorothea_activities, \"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/main/TF_Pathway_analysis/primary_dorothea.rds\")\n\n\n# Retrieve prior knowledge network.\n\nmessage(\"Saving Progeny results.\")\nprogeny_activities &lt;- rbind(progeny_vector$Iteration_0,\n                            progeny_vector$Iteration_1,\n                            progeny_vector$Iteration_2,\n                            progeny_vector$Iteration_3,\n                            progeny_vector$Iteration_4,\n                            progeny_vector$Iteration_5,\n                            progeny_vector$Iteration_6,\n                            progeny_vector$Iteration_7,\n                            progeny_vector$Iteration_8,\n                            progeny_vector$Iteration_9,\n                            progeny_vector$Iteration_10,\n                            progeny_vector$Iteration_11)\nsaveRDS(progeny_activities, \"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/main/TF_Pathway_analysis/primary_progeny.rds\")"
  },
  {
    "objectID": "analysis/analysis_012_diffusion.html",
    "href": "analysis/analysis_012_diffusion.html",
    "title": "Diffusion maps",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# ------------------------------------------------------------------\n# 12 - DIFFUSION MAPS\n# ------------------------------------------------------------------\n\n# Load dataset with OD + AS cells.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/datasets/integrated_LGGs.rds\")\n\n# Subset for the tumor cells.\nsample &lt;- sample[, sample$relabelling %in% c(\"Astro-like\", \"RA\", \"OPC-like\", \"Gradient\", \"Cycling\")]\n\n# Load markers from Mario Suva's publication.\nmarkers.suva &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\nmarkers &lt;- list()\nmarkers$Stemness_Program &lt;- markers.suva$Stemness_Program\nmarkers$Oligo_Program &lt;- markers.suva$Oligo_Program\nmarkers$Astro_Program &lt;- markers.suva$Astro_Program\n\n# Pull the genes into a vector.\nmarkers.use &lt;- unlist(markers) %&gt;% unname() %&gt;% unique()\n\n# Subset the genes present in the assay.\nmarkers.use &lt;- markers.use[markers.use %in% rownames(sample)]\n\n# Reduce the count matrix to only these genes.\nsample &lt;- sample[markers.use, ]\n\n# Transform from Seurat to SCE.\nsample &lt;- Seurat::as.SingleCellExperiment(sample,\n                                          assay = \"SCT\")\n\ndiff.map &lt;- destiny::DiffusionMap(sample, verbose = T)"
  },
  {
    "objectID": "analysis/analysis_ligand_receptor.html",
    "href": "analysis/analysis_ligand_receptor.html",
    "title": "LR analysis",
    "section": "",
    "text": "Code\n# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# 1. Object cpdb_microgliaAstrocytoma_AstrolikeAstrocytoma.rds:\n# \n# 1.1.Subset Astrocytoma from microglia object Clusters_microglia_primary_annotated.rds -&gt; RNA assay -&gt; logNorm()\n# 1.2.Subset Astro-Like from OE0145-IDH_integrated_astrocytoma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds -&gt; RNA assay -&gt; logNorm()\n# 1.3.Merge objects 1.1 and 1.2: cpdb_microgliaAstrocytoma_AstrolikeAstrocytoma.rds\n\nrm(list = ls())\nlibrary(Seurat)\nlibrary(here)\nlibrary(glue)\nlibrary(dplyr)\n\n\nsource(\"paths.R\")\n\nseurat &lt;-\"{sc_data}/OE0145-IDH_integrated_astrocytoma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_astr &lt;- labs_ls$AS %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"final_annot\" = \".\")\n\n# Add them to the object\nseurat@meta.data &lt;- seurat@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_astr, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nIdents(seurat) &lt;- \"final_annot\"\n\nseurat &lt;- subset(seurat, idents = \"Astro-like\")\nseurat@active.assay &lt;- \"RNA\"\nseurat@assays$SCT &lt;- NULL\n\nmicroglia &lt;-\"{microglia_data}/microglia_combined_to_use.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\n\nIdents(microglia) &lt;- \"sample\"\nmicroglia &lt;- subset(microglia, idents = \"primary_astro\")\n\nseurat &lt;- DietSeurat(\n  seurat,\n  counts = TRUE,\n  data = TRUE,\n  scale.data = FALSE,\n  features = NULL,\n  assays = NULL,\n  dimreducs = NULL,\n  graphs = NULL,\n  misc = TRUE\n)\nseurat &lt;- NormalizeData(seurat)\n\nmicroglia &lt;- DietSeurat(\n  microglia,\n  counts = TRUE,\n  data = TRUE,\n  scale.data = FALSE,\n  features = NULL,\n  assays = NULL,\n  dimreducs = NULL,\n  graphs = NULL,\n  misc = TRUE\n)\nmicroglia &lt;- NormalizeData(microglia)\n\n\ncpdb_microgliaAstrocytoma_AstrolikeAstrocytoma &lt;- merge(seurat, y = microglia, add.cell.ids = c(\"AstroLike\", \"microg\"))\n\nsaveRDS(cpdb_microgliaAstrocytoma_AstrolikeAstrocytoma,glue(here(\"Dropbox/Glioma_review_analysis/Liana/results/cpdb_microgliaAstrocytoma_AstrolikeAstrocytoma.rds\")))\n\n# 2. Object cpdb_microgliaAstrocytoma_OPClikeAstrocytoma.rds\n# \n# 2.1.Subset Astrocytoma from microglia object Clusters_microglia_primary_annotated.rds -&gt; RNA assay -&gt; logNorm()\n# 2.2.Subset OPC-Like from OE0145-IDH_integrated_astrocytoma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds -&gt; RNA assay -&gt; logNorm()\n# 2.3.Merge objects 2.1 and 2.2: cpdb_microgliaAstrocytoma_OPClikeAstrocytoma.rds\n\n\nrm(list = ls())\nlibrary(Seurat)\nlibrary(here)\nlibrary(glue)\nlibrary(dplyr)\n\nsource(\"paths.R\")\n\nseurat &lt;-\"{sc_data}/OE0145-IDH_integrated_astrocytoma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_astr &lt;- labs_ls$AS %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"final_annot\" = \".\")\n\n# Add them to the object\nseurat@meta.data &lt;- seurat@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_astr, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nIdents(seurat) &lt;- \"final_annot\"\n\nseurat &lt;- subset(seurat, idents = \"OPC-like\")\nseurat@active.assay &lt;- \"RNA\"\nseurat@assays$SCT &lt;- NULL\n\nmicroglia &lt;-\"{microglia_data}/microglia_combined_to_use.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nIdents(microglia) &lt;- \"sample\"\nmicroglia &lt;- subset(microglia, idents = \"primary_astro\")\n\nseurat &lt;- DietSeurat(\n  seurat,\n  counts = TRUE,\n  data = TRUE,\n  scale.data = FALSE,\n  features = NULL,\n  assays = NULL,\n  dimreducs = NULL,\n  graphs = NULL,\n  misc = TRUE\n)\nseurat &lt;- NormalizeData(seurat)\n\nmicroglia &lt;- DietSeurat(\n  microglia,\n  counts = TRUE,\n  data = TRUE,\n  scale.data = FALSE,\n  features = NULL,\n  assays = NULL,\n  dimreducs = NULL,\n  graphs = NULL,\n  misc = TRUE\n)\nmicroglia &lt;- NormalizeData(microglia)\n\ncpdb_microgliaAstrocytoma_OPClikeAstrocytoma &lt;- merge(seurat, y = microglia, add.cell.ids = c(\"OPCLike\", \"microg\"))\n\nsaveRDS(cpdb_microgliaAstrocytoma_OPClikeAstrocytoma,glue(here(\"Dropbox/Glioma_review_analysis/Liana/results/cpdb_microgliaAstrocytoma_OPClikeAstrocytoma.rds\")))\n\n# 3. Object cpdb_microgliaOligodendroglioma_AstrolikeOligodendroglioma.rds:\n# \n# 3.1.Subset Oligodendroglioma from microglia object Clusters_microglia_primary_annotated.rds -&gt; RNA assay -&gt; logNorm()\n# 3.2.Subset Astro-Like from OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds -&gt; RNA assay -&gt; logNorm()\n# 3.3.Merge objects 3.1 and 3.2: cpdb_microgliaOligodendroglioma_AstrolikeOligodendroglioma.rds\n\n\nrm(list = ls())\nlibrary(Seurat)\nlibrary(here)\nlibrary(glue)\nlibrary(dplyr)\n\nsource(\"paths.R\")\n\nseurat &lt;-\"{sc_data}/OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_astr &lt;- labs_ls$OD %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"final_annot\" = \".\")\n\n# Add them to the object\nseurat@meta.data &lt;- seurat@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_astr, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nIdents(seurat) &lt;- \"final_annot\"\n\nseurat &lt;- subset(seurat, idents = \"Astro-like\")\nseurat@active.assay &lt;- \"RNA\"\nseurat@assays$SCT &lt;- NULL\n\nmicroglia &lt;-\"{microglia_data}/microglia_combined_to_use.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\n\nIdents(microglia) &lt;- \"sample\"\nmicroglia &lt;- subset(microglia, idents = \"primary_oligo\")\n\nseurat &lt;- DietSeurat(\n  seurat,\n  counts = TRUE,\n  data = TRUE,\n  scale.data = FALSE,\n  features = NULL,\n  assays = NULL,\n  dimreducs = NULL,\n  graphs = NULL,\n  misc = TRUE\n)\nseurat &lt;- NormalizeData(seurat)\n\nmicroglia &lt;- DietSeurat(\n  microglia,\n  counts = TRUE,\n  data = TRUE,\n  scale.data = FALSE,\n  features = NULL,\n  assays = NULL,\n  dimreducs = NULL,\n  graphs = NULL,\n  misc = TRUE\n)\nmicroglia &lt;- NormalizeData(microglia)\n\n\ncpdb_microgliaOligodendroglioma_AstrolikeOligodendroglioma &lt;- merge(seurat, y = microglia, add.cell.ids = c(\"AstroLike\", \"microg\"))\n\nsaveRDS(cpdb_microgliaOligodendroglioma_AstrolikeOligodendroglioma,glue(here(\"Dropbox/Glioma_review_analysis/Liana/results/cpdb_microgliaOligodendroglioma_AstrolikeOligodendroglioma.rds\")))\n\n\n# 4. Object cpdb_microgliaOligodendroglioma_OPClikeOligodendroglioma.rds\n# \n# 4.1.Subset Oligodendroglioma from microglia object Clusters_microglia_primary_annotated.rds -&gt; RNA assay -&gt; logNorm()\n# 4.2.Subset OPC-Like from OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds -&gt; RNA assay -&gt; logNorm()\n# 4.3.Merge objects 4.1 and 4.2: cpdb_microgliaOligodendroglioma_OPClikeOligodendroglioma.rds\n\nrm(list = ls())\nlibrary(Seurat)\nlibrary(here)\nlibrary(glue)\nlibrary(dplyr)\n\nsource(\"paths.R\")\n\nseurat &lt;-\"{sc_data}/OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_astr &lt;- labs_ls$OD %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"final_annot\" = \".\")\n\n# Add them to the object\nseurat@meta.data &lt;- seurat@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_astr, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nIdents(seurat) &lt;- \"final_annot\"\n\nseurat &lt;- subset(seurat, idents = \"OPC-like\")\nseurat@active.assay &lt;- \"RNA\"\nseurat@assays$SCT &lt;- NULL\n\nmicroglia &lt;-\"{microglia_data}/microglia_combined_to_use.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nIdents(microglia) &lt;- \"sample\"\nmicroglia &lt;- subset(microglia, idents = \"primary_oligo\")\n\nseurat &lt;- DietSeurat(\n  seurat,\n  counts = TRUE,\n  data = TRUE,\n  scale.data = FALSE,\n  features = NULL,\n  assays = NULL,\n  dimreducs = NULL,\n  graphs = NULL,\n  misc = TRUE\n)\nseurat &lt;- NormalizeData(seurat)\n\nmicroglia &lt;- DietSeurat(\n  microglia,\n  counts = TRUE,\n  data = TRUE,\n  scale.data = FALSE,\n  features = NULL,\n  assays = NULL,\n  dimreducs = NULL,\n  graphs = NULL,\n  misc = TRUE\n)\nmicroglia &lt;- NormalizeData(microglia)\n\ncpdb_microgliaOligodendroglioma_OPClikeOligodendroglioma &lt;- merge(seurat, y = microglia, add.cell.ids = c(\"OPCLike\", \"microg\"))\n\nsaveRDS(cpdb_microgliaOligodendroglioma_OPClikeOligodendroglioma,glue(here(\"Dropbox/Glioma_review_analysis/Liana/results/cpdb_microgliaOligodendroglioma_OPClikeOligodendroglioma.rds\")))\n\n## Introduction\n##In this R markdown we are going to carry out a Ligand-Receptor analysis using `Liana` - *LIgand-receptor ANalysis frAmework*. You can see the GitHub repository [here](https://github.com/saezlab/liana/) and the vignette [here](https://saezlab.github.io/liana/articles/liana_tutorial.html). Later we will combine the results with `NicheNet` to identify pathways affected by these interactions as shown [here](https://saezlab.github.io/liana/articles/liana_nichenet.html).\n\nrm(list=ls())\nlibrary(Seurat)\nlibrary(ggpubr)\nlibrary(cowplot)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(stringr)\n# BiocManager::install(\"OmnipathR\")\n# remotes::install_github('saezlab/liana')\nlibrary(liana)\n# For R version &lt;4.1.0\n# urlPackage &lt;- \"https://cran.r-project.org/src/contrib/Archive/randomForest/randomForest_4.6-14.tar.gz\"\n# install.packages(urlPackage, repos=NULL, type=\"source\") \n# remotes::install_github('saeyslab/nichenetr')\nlibrary(nichenetr)\nlibrary(ggrepel)\nlibrary(igraph)\nlibrary(SCpubr)\n\n## Load data\n# We are going to load the entire dataset for comparision Astro Like - microglia Astrocytoma*\n\npath = \"/Users/Inma/Dropbox/Glioma_review_analysis/Liana/Data_Prep/\"\nse_obj &lt;- paste0(path, \"cpdb_microgliaAstrocytoma_AstrolikeAstrocytoma.rds\")%&gt;%\n  readRDS(file = .)\n\n# Create new Seurat object with updated gene names\nc_mtrx &lt;- se_obj@assays$RNA@counts\n\nse_obj[[\"Cells\"]] = Cells(se_obj)\nmetadata &lt;- as.data.frame(se_obj@meta.data[,c(\"Cells\",\"final_annot\")]) \ncolnames(metadata) = c(\"Cell\",\"cell_type\")\n\nmetadata$cell_type &lt;- str_replace_all(metadata$cell_type,\n                                       pattern = \" \",\n                                       replacement = \"_\")\nmetadata$cell_type &lt;- str_replace_all(metadata$cell_type,\n                                      pattern = \"-\",\n                                      replacement = \"_\")\nmetadata$Cell &lt;- str_replace_all(metadata$Cell,\n                                      pattern = \"-\",\n                                      replacement = \"_\")\n\n# Create new se_obj\nse &lt;- Seurat::CreateSeuratObject(\n  counts = c_mtrx,\n  meta.data = metadata) %&gt;%\n  Seurat::NormalizeData()\nrm(se_obj)\ngc()\n# set cell identity to cell type\nIdents(se) &lt;- se$cell_type\ntable(Idents(se))\n\n# filtering out cells with 0 counts across all ligands and receptors\n# As recommended in this [issue](https://github.com/saezlab/liana/issues/18)\n\ncells &lt;- colSums(se@assays$RNA@data) &gt; 0\ntable(cells)\nse &lt;- se[, cells]\ntable(Idents(se))\n\n### Run LIANA\n# And then we can execute LIANA using default parameters. After LIANA execution, we employ the function `liana_aggregate()` to summarize the output of different methods and to obtain a single score for each interaction.\n\npath=\"/Users/Inma/Dropbox/Glioma_review_analysis/Liana/results/\"\nresult=\"liana_res_microgliaAstrocytoma_AstrolikeAstrocytoma.rds\"\ntable=\"liana_table_microgliaAstrocytoma_AstrolikeAstrocytoma.rds\"\n\n# Run Liana, if this step is already done, run the next chunck\nconsensus_df &lt;- liana::select_resource(\"Consensus\")[[1]]\ndf1 &lt;- consensus_df %&gt;% dplyr::filter(target_genesymbol == \"CSF1R\"& source_genesymbol == \"CSF1_IL34\")\ndf1_csf1 &lt;- df1 %&gt;% mutate(source_genesymbol = \"CSF1\")\ndf1_il34 &lt;- df1 %&gt;% mutate(source_genesymbol = \"IL34\")\nconsensus_new &lt;- bind_rows(list(consensus_df, df1_csf1, df1_il34))\n\n\n# liana Wrap\nliana_res &lt;-\n    liana_wrap(\n       se,\n       method = c(\"natmi\", \"connectome\", \"logfc\", \"sca\", \"cellphonedb\"),\n        resource='custom', return_all = TRUE,\n        external_resource = consensus_new\n    ) \n\nsaveRDS(liana_res, file = glue::glue(path, result))\n\nliana_res &lt;- readRDS(glue::glue(path, result))\n\nliana_df &lt;- liana_res %&gt;%\n    liana_aggregate()\n\nliana_df &lt;- liana_df %&gt;%\n  left_join(\n    liana_res[[\"cellphonedb\"]],\n    by = c(\n      \"source\", \"target\",\n      \"ligand.complex\", \"receptor.complex\"))\n\n\nsaveRDS(liana_df, file = glue::glue(path, table))\n\n\n## Load data\n# We are going to load the entire dataset for comparision of microglia Oligodendroglioma and OPC like Oligodendroglioma*\n\npath = \"/Users/Inma/Dropbox/Glioma_review_analysis/Liana/Data_Prep/\"\nse_obj &lt;- paste0(path, \"cpdb_microgliaOligodendroglioma_AstrolikeOligodendroglioma.rds\")%&gt;%\n  readRDS(file = .)\n\nc_mtrx &lt;- se_obj@assays$RNA@counts\n\nse_obj[[\"Cells\"]] = Cells(se_obj)\nmetadata &lt;- as.data.frame(se_obj@meta.data[,c(\"Cells\",\"final_annot\")]) \ncolnames(metadata) = c(\"Cell\",\"cell_type\")\n\nmetadata$cell_type &lt;- str_replace_all(metadata$cell_type,\n                                       pattern = \" \",\n                                       replacement = \"_\")\nmetadata$cell_type &lt;- str_replace_all(metadata$cell_type,\n                                      pattern = \"-\",\n                                      replacement = \"_\")\nmetadata$Cell &lt;- str_replace_all(metadata$Cell,\n                                      pattern = \"-\",\n                                      replacement = \"_\")\n\n# Create new se_obj\nse &lt;- Seurat::CreateSeuratObject(\n  counts = c_mtrx,\n  meta.data = metadata) %&gt;%\n  Seurat::NormalizeData()\nrm(se_obj)\ngc()\n# set cell identity to cell type\nIdents(se) &lt;- se$cell_type\ntable(Idents(se))\n\n#filtering out cells with 0 counts across all ligands and receptors\n#As recommended in this [issue](https://github.com/saezlab/liana/issues/18)\n\ncells &lt;- colSums(se@assays$RNA@data) &gt; 0\ntable(cells)\nse &lt;- se[, cells]\ntable(Idents(se))\n\n### Run LIANA\n# And then we can execute LIANA using default parameters. After LIANA execution, we employ the function `liana_aggregate()` to summarize the output of different methods and to obtain a single score for each interaction.\n\n\npath=\"/Users/Inma/Dropbox/Glioma_review_analysis/Liana/results/\"\nresult=\"liana_res_microgliaOligodendroglioma_AstrolikeOligodendroglioma.rds\"\ntable=\"liana_table_microgliaOligodendroglioma_AstrolikeOligodendroglioma.rds\"\n\nconsensus_df &lt;- liana::select_resource(\"Consensus\")[[1]]\ndf1 &lt;- consensus_df %&gt;% dplyr::filter(target_genesymbol == \"CSF1R\"& source_genesymbol == \"CSF1_IL34\")\ndf1_csf1 &lt;- df1 %&gt;% mutate(source_genesymbol = \"CSF1\")\ndf1_il34 &lt;- df1 %&gt;% mutate(source_genesymbol = \"IL34\")\nconsensus_new &lt;- bind_rows(list(consensus_df, df1_csf1, df1_il34))\n\n\n# liana Wrap\nliana_res &lt;-\n    liana_wrap(\n       se,\n       method = c(\"natmi\", \"connectome\", \"logfc\", \"sca\", \"cellphonedb\"),\n        resource='custom', return_all = TRUE,\n        external_resource = consensus_new\n    ) \n\nsaveRDS(liana_res, file = glue::glue(path, result))\n\nliana_res &lt;- readRDS(glue::glue(path, result))\n\nliana_df &lt;- liana_res %&gt;%\n    liana_aggregate()\n\nliana_df &lt;- liana_df %&gt;%\n  left_join(\n    liana_res[[\"cellphonedb\"]],\n    by = c(\n      \"source\", \"target\",\n      \"ligand.complex\", \"receptor.complex\"))\n\n\nsaveRDS(liana_df, file = glue::glue(path, table))\n\n## Load data\n# We are going to load the entire dataset for comparision of microglia Oligodendroglioma and OPC like Oligodendroglioma*\npath = \"/Users/Inma/Dropbox/Glioma_review_analysis/Liana/Data_Prep/\"\nse_obj &lt;- paste0(path, \"cpdb_microgliaAstrocytoma_OPClikeAstrocytoma.rds\")%&gt;%\n  readRDS(file = .)\n\nc_mtrx &lt;- se_obj@assays$RNA@counts\n\nse_obj[[\"Cells\"]] = Cells(se_obj)\nmetadata &lt;- as.data.frame(se_obj@meta.data[,c(\"Cells\",\"final_annot\")]) \ncolnames(metadata) = c(\"Cell\",\"cell_type\")\n\nmetadata$cell_type &lt;- str_replace_all(metadata$cell_type,\n                                       pattern = \" \",\n                                       replacement = \"_\")\nmetadata$cell_type &lt;- str_replace_all(metadata$cell_type,\n                                      pattern = \"-\",\n                                      replacement = \"_\")\nmetadata$Cell &lt;- str_replace_all(metadata$Cell,\n                                      pattern = \"-\",\n                                      replacement = \"_\")\n\n# Create new se_obj\nse &lt;- Seurat::CreateSeuratObject(\n  counts = c_mtrx,\n  meta.data = metadata) %&gt;%\n  Seurat::NormalizeData()\nrm(se_obj)\ngc()\n# set cell identity to cell type\nIdents(se) &lt;- se$cell_type\ntable(Idents(se))\n\n# filtering out cells with 0 counts across all ligands and receptors\n# As recommended in this [issue](https://github.com/saezlab/liana/issues/18)\n\ncells &lt;- colSums(se@assays$RNA@data) &gt; 0\ntable(cells)\nse &lt;- se[, cells]\ntable(Idents(se))\n\n### Run LIANA\n# And then we can execute LIANA using default parameters. After LIANA execution, we employ the function `liana_aggregate()` to summarize the output of different methods and to obtain a single score for each interaction.\n\nconsensus_df &lt;- liana::select_resource(\"Consensus\")[[1]]\ndf1 &lt;- consensus_df %&gt;% dplyr::filter(target_genesymbol == \"CSF1R\"& source_genesymbol == \"CSF1_IL34\")\ndf1_csf1 &lt;- df1 %&gt;% mutate(source_genesymbol = \"CSF1\")\ndf1_il34 &lt;- df1 %&gt;% mutate(source_genesymbol = \"IL34\")\nconsensus_new &lt;- bind_rows(list(consensus_df, df1_csf1, df1_il34))\n\n\n# liana Wrap\nliana_res &lt;-\n    liana_wrap(\n       se,\n       method = c(\"natmi\", \"connectome\", \"logfc\", \"sca\", \"cellphonedb\"),\n        resource='custom', return_all = TRUE,\n        external_resource = consensus_new\n    ) \nsaveRDS(liana_res, file = glue::glue(path, result))\n\nliana_res &lt;- readRDS(glue::glue(path, result))\n\nliana_df &lt;- liana_res %&gt;%\n    liana_aggregate()\n\nliana_df &lt;- liana_df %&gt;%\n  left_join(\n    liana_res[[\"cellphonedb\"]],\n    by = c(\n      \"source\", \"target\",\n      \"ligand.complex\", \"receptor.complex\"))\n\n\nsaveRDS(liana_df, file = glue::glue(path, table))\n\n## Load data\n# We are going to load the entire dataset for comparision of microglia Oligodendroglioma and OPC like Oligodendroglioma*\n\npath = \"/Users/Inma/Dropbox/Glioma_review_analysis/Liana/Data_Prep/\"\nse_obj &lt;- paste0(path, \"cpdb_microgliaOligodendroglioma_OPClikeOligodendroglioma.rds\")%&gt;%\n  readRDS(file = .)\n\n# Create new Seurat object with updated gene names\nc_mtrx &lt;- se_obj@assays$RNA@counts\n\nse_obj[[\"Cells\"]] = Cells(se_obj)\nmetadata &lt;- as.data.frame(se_obj@meta.data[,c(\"Cells\",\"final_annot\")]) \ncolnames(metadata) = c(\"Cell\",\"cell_type\")\n\nmetadata$cell_type &lt;- str_replace_all(metadata$cell_type,\n                                       pattern = \" \",\n                                       replacement = \"_\")\nmetadata$cell_type &lt;- str_replace_all(metadata$cell_type,\n                                      pattern = \"-\",\n                                      replacement = \"_\")\nmetadata$Cell &lt;- str_replace_all(metadata$Cell,\n                                      pattern = \"-\",\n                                      replacement = \"_\")\n\n# Create new se_obj\nse &lt;- Seurat::CreateSeuratObject(\n  counts = c_mtrx,\n  meta.data = metadata) %&gt;%\n  Seurat::NormalizeData()\nrm(se_obj)\ngc()\n# set cell identity to cell type\nIdents(se) &lt;- se$cell_type\ntable(Idents(se))\n\n# filtering out cells with 0 counts across all ligands and receptors\n# As recommended in this [issue](https://github.com/saezlab/liana/issues/18)\ncells &lt;- colSums(se@assays$RNA@data) &gt; 0\ntable(cells)\nse &lt;- se[, cells]\ntable(Idents(se))\n\n### Run LIANA\n# And then we can execute LIANA using default parameters. After LIANA execution, we employ the function `liana_aggregate()` to summarize the output of different methods and to obtain a single score for each interaction.\n\npath=\"/Users/Inma/Dropbox/Glioma_review_analysis/Liana/results/\"\nresult=\"liana_res_microgliaOligodendroglioma_OPClikeOligodendroglioma.rds\"\ntable=\"liana_table_microgliaOligodendroglioma_OPClikeOligodendroglioma.rds\"\n\nconsensus_df &lt;- liana::select_resource(\"Consensus\")[[1]]\ndf1 &lt;- consensus_df %&gt;% dplyr::filter(target_genesymbol == \"CSF1R\"& source_genesymbol == \"CSF1_IL34\")\ndf1_csf1 &lt;- df1 %&gt;% mutate(source_genesymbol = \"CSF1\")\ndf1_il34 &lt;- df1 %&gt;% mutate(source_genesymbol = \"IL34\")\nconsensus_new &lt;- bind_rows(list(consensus_df, df1_csf1, df1_il34))\n\n\n# liana Wrap\nliana_res &lt;-\n    liana_wrap(\n       se,\n       method = c(\"natmi\", \"connectome\", \"logfc\", \"sca\", \"cellphonedb\"),\n        resource='custom', return_all = TRUE,\n        external_resource = consensus_new\n    ) \nsaveRDS(liana_res, file = glue::glue(path, result))\n\nliana_res &lt;- readRDS(glue::glue(path, result))\n\nliana_df &lt;- liana_res %&gt;%\n    liana_aggregate()\n\nliana_df &lt;- liana_df %&gt;%\n  left_join(\n    liana_res[[\"cellphonedb\"]],\n    by = c(\n      \"source\", \"target\",\n      \"ligand.complex\", \"receptor.complex\"))\n\n\nsaveRDS(liana_df, file = glue::glue(path, table))"
  },
  {
    "objectID": "analysis/analysis_013_ATAC_QC.html",
    "href": "analysis/analysis_013_ATAC_QC.html",
    "title": "Quality control",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n##Input:\n\n# Peak files output of CellRanger\n# Code heavily based on Signac's vignette: https://satijalab.org/signac/articles/merging.html\n# Generate the following objects.\n\n# Vector containig all the sample IDs.\natac_samples &lt;- c(\"sample_a\",\n                  \"sample_b\",\n                  \"sample_c\")\n\n\n# List containing as names the IDs in atac_samples and as values the full path to the peaks file.\npeak.list &lt;- list(\"sample_a\" = \"full_path_to_peaks_file\",\n                  \"sample_b\" = \"full_path_to_peaks_file\",\n                  \"sample_c\" = \"full_path_to_peaks_file\")\n\n# Generate a list with the peak objects.\npeak.out &lt;- list()\nfor (s.name in atac_samples){\n  db &lt;- generate_database(sprintf(\"/icgc/dkfzlsdf/analysis/OE0145_projects/idh_gliomas/scripts/main/06_scana/config_files/%s_config.yml\", s.name))\n  peaks &lt;- read.table(file = peak.list[[s.name]],\n                      col.names = c(\"chr\", \"start\", \"end\"))\n  peak.out[[s.name]] &lt;- peaks\n}\n\n# Convert peaks into GRanges (Adapt for the number of samples you have).\ngr.1 &lt;- GenomicRanges::makeGRangesFromDataFrame(peak.out$`sample_a`)\ngr.2 &lt;- GenomicRanges::makeGRangesFromDataFrame(peak.out$`sample_b`)\ngr.3 &lt;- GenomicRanges::makeGRangesFromDataFrame(peak.out$`sample_c`)\n\n# Put them back to a vector.\nreduce.vector &lt;- c(gr.1, gr.2, gr.3, gr.4, gr.5, gr.6, gr.7, gr.8, gr.9, gr.10, gr.11)\n\n# Create an unified set of peaks to quantify in each dataset.\ncombined.peaks &lt;- GenomicRanges::reduce(x = reduce.vector)\n\n\n# Generate a list for the fragment files location.\nfragment.paths &lt;- list(\"sample_a\" = \"full_path_to_fragments_file\",\n                       \"sample_b\" = \"full_path_to_fragments_file\",\n                       \"sample_c\" = \"full_path_to_fragments_file\")\n\n# Generate a list for the metadata files location.\nmetadata.paths &lt;- list(\"sample_a\" = \"full_path_to_metadata_file\",\n                       \"sample_b\" = \"full_path_to_metadata_file\",\n                       \"sample_c\" = \"full_path_to_metadata_file\")\n\n# Generate a list to store the fragment objects.\nfragment.list &lt;- list() # Will contain the framgent objects.\nmd.list &lt;- list() # Will contain the metadata objects.\nfor(s.name in atac_samples){\n  md &lt;- read.table(file = metadata.paths[[s.name]],\n                   stringsAsFactors = FALSE,\n                   sep = \",\",\n                   header = TRUE,\n                   row.names = 1,)[-1, ]\n  # Filter low count cells.\n  md &lt;- md[md$passed_filters &gt; 500, ]\n  md.list[[s.name]] &lt;- md\n  \n  # Create fragment object.\n  frag.md &lt;- Signac::CreateFragmentObject(path = fragment.paths[[s.name]],\n                                          cells = rownames(md))\n  fragment.list[[s.name]] &lt;- frag.md\n}\n\n\n# Generate count matrices and store them in a list.\ncount.list &lt;- list()\nfor(s.name in atac_samples){\n  ct &lt;- Signac::FeatureMatrix(fragments = fragment.list[[s.name]],\n                              features = combined.peaks,\n                              cells = rownames(md.list[[s.name]]))\n  count.list[[s.name]] &lt;- ct\n}\n\n\n# Generate a list that contains the signac objects.\nsample.list &lt;- list()\n\n# Generate an annotation object to include to the Signac object. \nGenomeInfoDb::seqlevelsStyle(EnsDb.Hsapiens.v86) &lt;- \"UCSC\"\nannotation &lt;- GetGRangesFromEnsDb(EnsDb.Hsapiens.v86)\nSignac::genome(annotation) &lt;- \"hg38\"\n\nfor(s.name in samples.use){\n  s.assay &lt;- Signac::CreateChromatinAssay(count.list[[s.name]],\n                                          fragments = fragment.list[[s.name]],\n                                          genome = \"hg38\",\n                                          annotation = annotation)\n  s &lt;- Seurat::CreateSeuratObject(s.assay,\n                                  assay = \"ATAC\",\n                                  meta.data = md.list[[s.name]],\n                                  project = s.name)\n  \n  sample.list[[s.name]] &lt;- s\n}\n\n# Generate a merged sample.\n# To merge, you need to select a \"reference\" object upon which you merge the others. \nref_id &lt;- \"sample_a\"\nsample &lt;- merge(x = sample.list[[ref_id]],\n                y = sample.list[!(names(sample.list) %in% ref_id)],\n                add.cell.ids = c(ref_id, names(sample.list)[!(names(sample.list) %in% ref_id)]))\n# Reassign the annotation just in case. \nSignac::Annotation(sample) &lt;- annotation\n\n# Define QC cutoffs.\nreference_organism &lt;- \"h.sapiens\"\n# QC cutoff: lower peak region fragments.\nlower_peak_region_fragments_cutoff = 3000\n# QC cutoff: higher peak region fragments.\nhigher_peak_region_fragments_cutoff = 20000\n# QC cutoff: percentage of reads in peaks (higher than).\npercentage_reads_in_peaks_cutoff = 15\n# QC cutoff: blacklist ratio (lower than).\nblacklist_ratio_cutoff = 0.05\n# QC cutoff: nucleosome signal cutoff (lower than).\nnucleosome_signal_cutoff = 10\n# QC cutoff: TSS enrichment score cutoff (higher than).\nTSS_enrichment_score_cutoff = 2\n\n\n\n# Calculate the chromosome binding pattern. Stored as \"nucleosome_signal\" column. # Computes it for chr1.\nsample &lt;- Signac::NucleosomeSignal(object = sample)\n\n# Compute TSS enrichment.\nsample &lt;- Signac::TSSEnrichment(sample, fast = FALSE)\n\n# Compute the percentage of reads in peaks.\nsample$percentage_reads_in_peaks &lt;- sample$peak_region_fragments / sample$passed_filters * 100\n\n# Compute ratio of reads in blacklist sites.\nsample$blacklist_ratio &lt;- sample$blacklist_region_fragments / sample$peak_region_fragments\n\n# Classify in different nucleosome groups.\nsample$nucleosome_group &lt;- ifelse(sample$nucleosome_signal &gt; 4, 'NS &gt; 4', 'NS &lt; 4')\n\n# Assign cells to high or low TSS enrichment.\nsample$high_tss &lt;- ifelse(sample$TSS.enrichment &gt; 2, \"High\", \"Low\")\n\n\n# Compute the QC logical vectors.\npeak_lower_cutoff &lt;- sample$peak_region_fragments &gt; lower_peak_region_fragments_cutoff\npeak_higher_cutoff &lt;- sample$peak_region_fragments &lt; higher_peak_region_fragments_cutoff\npercentage_reads_in_peaks_cutoff &lt;- sample$percentage_reads_in_peaks &gt; percentage_reads_in_peaks_cutoff\nblacklist_ratio_cutoff &lt;- sample$blacklist_ratio &lt; blacklist_ratio_cutoff\nnucleosome_signal_cutoff &lt;- sample$nucleosome_signal &lt; nucleosome_signal_cutoff\ntss_cutoff &lt;- sample$TSS.enrichment &gt; TSS_enrichment_score_cutoff\n\n# Combine them.\nmask &lt;- peak_lower_cutoff & peak_higher_cutoff & percentage_reads_in_peaks_cutoff & blacklist_ratio_cutoff & nucleosome_signal_cutoff & tss_cutoff\n\n# Subset the sample. \nsample &lt;- sample[, which(mask)]\n\n# Normalize.\nsample &lt;- Signac::RunTFIDF(sample)\n\n# Find top peaks (in our case, we use q0 to select all of them).\nsample &lt;- Signac::FindTopFeatures(sample, min.cutoff = \"q0\")\n\n# Run SVD.\nsample &lt;- Signac::RunSVD(object = sample,\n                         assay = \"ATAC\",\n                         reduction.key = \"LSI_\",\n                         reduction.name = \"lsi\")\n\n# Check the LSI components.\nSignac::DepthCor(sample) # If the component 1 is at -1, exclude it.\nfirst_comp &lt;- 2 # Set to 1 if component 1 is not at -1.\n\n\n# Compute UMAP.\nsample &lt;- Seurat::RunUMAP(object = sample,\n                          reduction = \"lsi\",\n                          dims = first_comp:30)\n\n# Find neighbors.\nsample &lt;- Seurat::FindNeighbors(object = sample,\n                                reduction = \"lsi\",\n                                dims = first_comp:30)\n\n# Find clusters.\nsample &lt;- Seurat::FindClusters(object = sample,\n                               verbose = FALSE,\n                               algorithm = 1)\n\n# Compute activity matrix.\ngene.activities &lt;- Signac::GeneActivity(object = sample)\n\n# Add the activity matrix to the Seurat object as a new assay, and normalize it.\nsample[[\"RNA\"]] &lt;- Seurat::CreateAssayObject(counts = gene.activities)\n\n# Normalize new assay data - treating the Activity assay as if it was a scRNAseq experiment.\nsample &lt;- Seurat::SCTransform(object = sample,\n                              assay = \"RNA\",\n                              new.assay.name = \"SCT\")\n\n\n\n# Transfer labels from true scRNAseq object to the activity assay from scATACseq object. \n# This assumes you have a corresponding scRNAseq experiment.\n\n# Load snRNAseq dataset.\nsample.rna &lt;- readRDS(\"full_path_to_scRNAseq_object\")\n\n# Rename gene activity assay to ACTIVITY.\nsample &lt;- SeuratObject::RenameAssays(sample, SCT = \"ACTIVITY\")\n\n# Find anchors between datasets.\ntransfer.anchors &lt;- Seurat::FindTransferAnchors(reference = sample.rna, # Seurat object to use as reference.\n                                                query = sample,    # Seurat object to use as querey.\n                                                features = Seurat::VariableFeatures(object = sample.rna), # Features to use for Dimensional Reduction.\n                                                reference.assay = \"SCT\", # Assay to use as reference.\n                                                query.assay = \"ACTIVITY\", # Assay to use as query.\n                                                reduction = \"cca\") # Dimensional reduction to use when finding anchors.\n\n# Transfer cluster labels from snRNAseq dataset.\ncelltype.predictions &lt;- Seurat::TransferData(anchorset = transfer.anchors,\n                                             refdata = sample.rna$cluster_names, # Data to transfer (cluster names).\n                                             weight.reduction = sample[[\"lsi\"]],\n                                             dims = 1:15) # Dimensional reduction to use.\n\n# Add the predictions as metadata.\nsample &lt;- Seurat::AddMetaData(sample, metadata = celltype.predictions) # Predictions stored in \"predicted.id\" metadata column.\n\n# Generate an integrated object removing sample-specific effects..\nSeurat::DefaultAssay(sample) &lt;- \"ATAC\"\nSeurat::Idents(sample) &lt;- sample$predicted.id # Set the new identities.\n\n# Run Harmony. \nsample.integrated &lt;- harmony::RunHarmony(object = sample,\n                                         group.by.vars = 'orig.ident',\n                                         reduction = 'lsi',\n                                         assay.use = 'ATAC',\n                                         project.dim = FALSE)\n# Recompute UMAP.\nsample.integrated &lt;- Seurat::RunUMAP(sample.integrated, reduction = \"harmony\", dims = first_comp:30)\n\n\n\n\n##Output:\n\n#OE0145-IDH_integrated_astrocytoma_peaks_activity_chromvar\n#OE0145-IDH_integrated_oligodendroglioma_peaks_activity_chromvar\n#QC analysis - supplementary figures"
  },
  {
    "objectID": "analysis/analysis_014_ATAC.html",
    "href": "analysis/analysis_014_ATAC.html",
    "title": "Downstream analyses",
    "section": "",
    "text": "Code\n## Inmaculada Hernandez Lopez\n## inmaculada.hernandez-lopez@ukr.de\n## LIT -  Leibniz-Institute für Immunotherapie\n\n## Paula Soler \n## paula.soler@cnag.crg.eu\n## CNAG-CRG Barcelona\n\n## Tutorial: https://satijalab.org/signac/articles/pbmc_vignette.html#integrating-with-scrna-seq-data-1\n\n################################################################################################################\n\n## Steps:\n    #A. Oligodendroglioma\n      #A1. Integrating with scRNA-seq data: label transfer\n      #A2. Motif Analysis\n\n      \n    #B. Astrocytoma\n      #B1. Re-RUN ATAC integrated object astrocytes with less dimensions to avoid microglia split in astrocytoma\n      #B2. Integrating with scRNA-seq data: label transfer\n      #B3. Motif Analysis\n      \n\n################################################################################################################\n\nrm(list = ls())\n\nlibrary(Seurat)\nlibrary(Signac)\nlibrary(chromVARmotifs)\nlibrary(BSgenome.Hsapiens.UCSC.hg38)\nlibrary(ggpubr)\nlibrary(ggplot2)\nlibrary(TFBSTools)\nlibrary(patchwork)\nlibrary(chromVAR)\nlibrary(motifmatchr)\nlibrary(data.table)\nlibrary(chromVARmotifs)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(tidyr)\nlibrary(pheatmap)\nlibrary(factoextra)\nlibrary(corrplot)\nlibrary(plyr)\nlibrary(SCpubr)\nlibrary(chromVAR)\nlibrary(tidyverse)\n\n\n#-------------------------------------------------------------------------------\n#A. Oligodendroglioma\n      #A1. Integrating with scRNA-seq data: label transfer\n#-------------------------------------------------------------------------------\n\nseurat &lt;- readRDS(\"OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\")\nlabel &lt;- readRDS(\"labels.rds\")\nlabel &lt;- label$OD\n\nseurat$transferred_labels &lt;- label\ntable(seurat$transferred_labels)\nIdents(seurat) &lt;- \"transferred_labels\"\nseurat &lt;- subset(seurat, idents = c(\"Gradient\",\"Excluded\"), invert = TRUE)\n\nseurat@active.assay &lt;- \"SCT\"\nseurat@assays$RNA &lt;- NULL\n\nIdents(seurat) &lt;- \"transferred_labels\"\n\npeaks &lt;- readRDS(\"OE0145-IDH_integrated_oligodendroglioma_peaks_activity_chromvar?dl=0\")\n\npeaks@active.assay &lt;- \"ACTIVITY\"\npeaks@assays$ATAC &lt;- NULL\npeaks@assays$RNA &lt;- NULL\npeaks@assays$chromvar &lt;- NULL\n\ntransfer.anchors &lt;- FindTransferAnchors(\n  reference = seurat,\n  query = peaks,\n  normalization.method = \"SCT\",\n  reduction = 'cca',\n  recompute.residuals = FALSE\n)\n\nsaveRDS(transfer.anchors, file = \"new_transfer.anchors_oligodendroglioma.rds\")\n\n\npredicted.labels &lt;- TransferData(\n  anchorset = transfer.anchors,\n  refdata = seurat$transferred_labels,\n  weight.reduction = peaks[['lsi']],\n  dims = 2:30\n)\n\n\npeaks &lt;- AddMetaData(object = peaks, metadata = predicted.labels)\n\npeaks[[\"Cells\"]] &lt;- Cells(peaks)\nannotation_ATAC_oligo &lt;- as.vector(peaks@meta.data[,c(\"predicted.id\")])\nnames(annotation_ATAC_oligo) &lt;- peaks$Cells\nsaveRDS(annotation_ATAC_oligo, file = \"new_annotation_ATAC_oligo_primary.rds\")\n\n\n#-------------------------------------------------------------------------------\n#A. Oligodendroglioma\n      #A2. Motif Analysis\n#-------------------------------------------------------------------------------\n\n\nseurat &lt;- readRDS(\"OE0145-IDH_integrated_oligodendroglioma_peaks_activity_chromvar?dl=0\")\nlabel &lt;- readRDS(\"new_annotation_ATAC_oligo_primary.rds\")\nseurat$predicted.id &lt;- label\n\ndata(\"human_pwms_v1\")\nlength(human_pwms_v1)\n\nseurat &lt;- AddMotifs(\n  object = seurat,\n  genome = BSgenome.Hsapiens.UCSC.hg38,\n  pfm = human_pwms_v1\n)\n\nseurat &lt;- RunChromVAR(\n  object = seurat,\n  genome = BSgenome.Hsapiens.UCSC.hg38\n)\n\nsaveRDS(seurat, \"new_OE0145-IDH_integrated_oligodendroglioma_peaks_activity_chromvar_IHL.rds\")\n\n\n  path_to_object &lt;- \"\"\n  tumor &lt;- \"oligodendroglioma\"\n  \n  # Paths\n  path_to_obj &lt;- paste0(\n    here::here(path_to_object),\"new_OE0145-IDH_integrated_\",\n    tumor,\"_peaks_activity_chromvar_IHL.rds\",\n    sep = \"\"\n  )\n  \n  color_palette &lt;-  c(\"#fed439\",\"#709ae1\",\"#4caf50\",\"#d2af81\",\n                      \"#d5e4a2\",\"#9c27b0\",\"#f05c3b\",\"#46732e\",\n                      \"#71d0f5\",\"#370335\",\"#075149\",\"#c80813\",\n                      \"#91331f\",\"#1a9993\",\"#fd8cc1\")\n  \n  path_to_save &lt;- paste0(here::here(path_to_object),\"new_OE0145-IDH_integrated_\",\n                         tumor,\"_motifs_ChromVar_FC0_adjpvalue0.1.xls\",\n                         sep = \"\")\n  \n  \n  seurat &lt;- readRDS(path_to_obj)\n  DefaultAssay(seurat) &lt;- 'chromvar'\n  Idents(seurat) &lt;- seurat$predicted.id\n  seurat &lt;- subset(seurat, idents = c(\"Astro-like\", \"OPC-like\",\"Gradient\",\"RA\"))\n  \n  da_regions &lt;- FindAllMarkers(\n    object = seurat,\n    only.pos = TRUE,\n    min.pct = 0.1,\n  )\n  \n  \n  da_regions_selected &lt;- (da_regions[da_regions$p_val_adj &lt; 0.05 & da_regions$avg_log2FC &gt; 0, ])\n\n  \n  motif_name_entire &lt;- da_regions_selected %&gt;% separate(gene, \n                                                        c(\"Part1\", \"Part2\",\"Part3\",\n                                                          \"Part4\",\"Part5\"), sep=\"-\")\n  \n  da_regions_selected$motif_name &lt;- motif_name_entire$Part3\n  \n  da_regions_selected_sorted &lt;- da_regions_selected[with(da_regions_selected,\n                                                         order(cluster, -avg_log2FC)), ]\n  \n  da_regions_selected_sorted$rank &lt;- ave(da_regions_selected_sorted$avg_log2FC,\n                                         da_regions_selected_sorted$cluster, FUN = seq_along)\n  \n  da_regions_selected_sorted_prepared &lt;- da_regions_selected_sorted %&gt;% \n    group_by(cluster) %&gt;% \n    top_n(20,-rank)\n  \n  output &lt;- split(da_regions_selected_sorted, da_regions_selected_sorted$cluster)\n  wb &lt;- createWorkbook()\n  \n  for (i in 1:length(output)) {\n    addWorksheet(wb, sheetName=names(output[i]))\n    writeData(wb, sheet=names(output[i]), x=output[[i]]) # Note [[]]\n  }\n  \n  saveWorkbook(wb, file=path_to_save,  overwrite = TRUE)\n  \n#-------------------------------------------------------------------------------\n  #B. Astrocytoma\n#-------------------------------------------------------------------------------\nrm(list = ls())\n\nlibrary(Seurat)\nlibrary(Signac)\nlibrary(chromVARmotifs)\nlibrary(BSgenome.Hsapiens.UCSC.hg38)\nlibrary(ggpubr)\nlibrary(ggplot2)\nlibrary(TFBSTools)\nlibrary(patchwork)\nlibrary(chromVAR)\nlibrary(motifmatchr)\nlibrary(ggpubr)\nlibrary(data.table)\nlibrary(chromVARmotifs)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(readxl)\nlibrary(openxlsx)\nlibrary(tidyr)\nlibrary(pheatmap)\nlibrary(factoextra)\nlibrary(corrplot)\nlibrary(plyr)\n\n#-------------------------------------------------------------------------------\n##B. Astrocytoma\n    ##B1. Re-RUN ATAC integrated object astrocytes with less dimensions to avoid \n    ##microglia split in astrocytoma\n#-------------------------------------------------------------------------------\npeaks &lt;- readRDS(\"OE0145-IDH_integrated_astrocytoma_peaks_activity_chromvar.rds\")\npeaks@active.assay &lt;- \"ATAC\"\npeaks@assays$chromvar &lt;- NULL\n\npeaks &lt;- Seurat::RunUMAP(object = peaks,\n                         reduction = \"harmony\",\n                         dims = 2:10)\n\n# Find neighbors.\nprint(\"Compute clusters.\")\npeaks &lt;- Seurat::FindNeighbors(object = peaks,\n                               reduction = \"harmony\",\n                               dims = 2:10)\n\n\n\n# Find clusters. Using algorithm = 3 (SLM algorithm) according to Signac's vignette.\npeaks &lt;- Seurat::FindClusters(object = peaks,\n                              verbose = FALSE,\n                              algorithm = 3)\n\nIdents(peaks) &lt;- \"predicted.id\"\nsaveRDS(peaks,\"OE0145-IDH_integrated_astrocytoma_peaks_activity_newIHL.rds\")\n\n#-------------------------------------------------------------------------------\n##B. Astrocytoma\n        ##B2. Integrating with scRNA-seq data: label transfer\n#-------------------------------------------------------------------------------\nseurat &lt;- readRDS(\"OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\")\nlabel &lt;- readRDS(\"labels.rds\")\nlabel &lt;- label$OD\n\n\nseurat$transferred_labels &lt;- label\ntable(seurat$transferred_labels)\nIdents(seurat) &lt;- \"transferred_labels\"\nseurat &lt;- subset(seurat, idents = c(\"Gradient\",\"Excluded\"), invert = TRUE)\n\nseurat@active.assay &lt;- \"SCT\"\nseurat@assays$RNA &lt;- NULL\n\nIdents(seurat) &lt;- \"transferred_labels\"\n\npeaks &lt;- readRDS(\"OE0145-IDH_integrated_astrocytoma_peaks_activity_newIHL.rds\")\n\npeaks@active.assay &lt;- \"ACTIVITY\"\npeaks@assays$ATAC &lt;- NULL\npeaks@assays$RNA &lt;- NULL\npeaks@assays$chromvar &lt;- NULL\n\ntransfer.anchors &lt;- FindTransferAnchors(\n  reference = seurat,\n  query = peaks,\n  normalization.method = \"SCT\",\n  #k.filter = 200,\n  #dims = 2:30,\n  reduction = 'cca',\n  recompute.residuals = FALSE\n)\n\nsaveRDS(transfer.anchors, file = \"new_transfer.anchors_astrocytoma.rds\")\n\n\npredicted.labels &lt;- TransferData(\n  anchorset = transfer.anchors,\n  refdata = seurat$transferred_labels,\n  weight.reduction = peaks[['lsi']],\n  dims = 2:30\n)\n\n\npeaks &lt;- AddMetaData(object = peaks, metadata = predicted.labels)\n\npeaks[[\"Cells\"]] &lt;- Cells(peaks)\nannotation_ATAC_astro &lt;- as.vector(peaks@meta.data[,c(\"predicted.id\")])\nnames(annotation_ATAC_astro) &lt;- peaks$Cells\nsaveRDS(annotation_ATAC_astro, file = \"new_annotation_ATAC_astro_primary.rds\")\n\n#-------------------------------------------------------------------------------\n#B. Astrocytoma\n     #B3. Motif Analysis\n#------------------------------------------------------------------------------\n\nseurat &lt;- readRDS(\"OE0145-IDH_integrated_astrocytoma_peaks_activity_newIHL.rds\")\n\nlabel &lt;- readRDS(\"new_annotation_ATAC_astro_primary.rds\")\n\nseurat$predicted.id &lt;- label\n\ndata(\"human_pwms_v1\")\nlength(human_pwms_v1)\n\nseurat &lt;- AddMotifs(\n  object = seurat,\n  genome = BSgenome.Hsapiens.UCSC.hg38,\n  pfm = human_pwms_v1\n)\n\nseurat &lt;- RunChromVAR(\n  object = seurat,\n  genome = BSgenome.Hsapiens.UCSC.hg38\n)\n\nsaveRDS(seurat, \"new_OE0145-IDH_integrated_astrocytoma_peaks_activity_chromvar_IHL.rds\")\n\n\npath_to_object &lt;- \"\"\ntumor &lt;- \"astrocytoma\"\n\n# Paths\npath_to_obj &lt;- paste0(\n  here::here(path_to_object),\"OE0145-IDH_integrated_\",\n  tumor,\"_peaks_activity_chromvar_IHL.rds\",\n  sep = \"\"\n)\n\npath_to_save &lt;- paste0(here::here(path_to_object),\"new_OE0145-IDH_integrated_\",\n                       tumor,\"_motifs_ChromVar_FC0_adjpvalue0.1.xls\",\n                       sep = \"\")\n\n\nseurat &lt;- readRDS(path_to_obj)\nseurat = DietSeurat(seurat, assays = \"chromvar\")\nIdents(seurat) &lt;- seurat$predicted.id\nseurat &lt;- subset(seurat, idents = c(\"Astro-like\", \"OPC-like\",\"RA\"))\nseurat$predicted.id &lt;- factor(x = seurat$predicted.id, levels =  c(\"Astro-like\", \"OPC-like\",\"RA\"))\n\nda_regions &lt;- FindAllMarkers(\n  object = seurat,\n  only.pos = TRUE,\n  min.pct = 0.1\n)\n\n\nda_regions_selected &lt;- (da_regions[da_regions$p_val_adj &lt; 0.05 & da_regions$avg_log2FC &gt; 0, ])\n\n\nmotif_name_entire &lt;- da_regions_selected %&gt;% separate(gene, \n                                                      c(\"Part1\", \"Part2\",\"Part3\",\n                                                        \"Part4\",\"Part5\"), sep=\"-\")\n\nda_regions_selected$motif_name &lt;- motif_name_entire$Part3\n\nda_regions_selected_sorted &lt;- da_regions_selected[with(da_regions_selected,\n                                                       order(cluster, -avg_log2FC)), ]\n\nda_regions_selected_sorted$rank &lt;- ave(da_regions_selected_sorted$avg_log2FC,\n                                       da_regions_selected_sorted$cluster, FUN = seq_along)\n\nda_regions_selected_sorted_prepared &lt;- da_regions_selected_sorted %&gt;% \n  group_by(cluster) %&gt;% \n  top_n(20,-rank)\n\noutput &lt;- split(da_regions_selected_sorted, da_regions_selected_sorted$cluster)\nwb &lt;- createWorkbook()\n\nfor (i in 1:length(output)) {\n  addWorksheet(wb, sheetName=names(output[i]))\n  writeData(wb, sheet=names(output[i]), x=output[[i]]) # Note [[]]\n}\n\nsaveWorkbook(wb, file=path_to_save,  overwrite = TRUE)"
  },
  {
    "objectID": "analysis/analysis_deconvolution_oligo.html",
    "href": "analysis/analysis_deconvolution_oligo.html",
    "title": "Deconvoulution OD Pseudobulk + TCGA + CGGA",
    "section": "",
    "text": "Code\n# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# PSEUDOBULK\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(devtools)\n# install_github(\"https://github.com/MarcElosua/SPOTlight\", ref = \"bioc_rcpp\")\nlibrary(SPOTlight)\nlibrary(SingleCellExperiment)\nlibrary(here)\nlibrary(glue)\n\nsource(here(\"paths.R\"))\n\nolig &lt;- \"{sc_data}/OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\n# Remove SCT since we don't need it anymore\nhvg &lt;- VariableFeatures(olig)\nDefaultAssay(olig) &lt;- \"RNA\"\nolig[[\"SCT\"]] &lt;- NULL\n\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_oligo &lt;- labs_ls$OD %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"new_annot\" = \".\")\n\n# Add them to the object\nolig@meta.data &lt;- olig@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_oligo, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nDimPlot(\n    olig,\n    group.by = c(\"new_annot\", \"Subclusters\", \"NMF_labelling\"),\n    raster = FALSE,\n    ncol = 2)\n\nwith(olig@meta.data, table(new_annot, Subclusters))\n\n# Remove excluded cells\nolig &lt;- olig[, olig$new_annot != \"Excluded\"]\n\n# DefaultAssay(olig) &lt;- \"RNA\"\npseudo_ls &lt;- lapply(unique(olig$orig.ident), function(i) {\n    tmp &lt;- olig[, olig$orig.ident == i]@assays$RNA@counts\n    as.matrix(rowSums(tmp))\n})\n\nolig_pseudobulk &lt;- Reduce(cbind, pseudo_ls)\n# Remove all genes that are 0\nolig_pseudobulk &lt;- olig_pseudobulk[rowSums(olig_pseudobulk) &gt; 0, ]\ncolnames(olig_pseudobulk) &lt;- unique(olig$orig.ident)\n\nct_proportion &lt;- olig@meta.data %&gt;%\n    dplyr::count(orig.ident, new_annot) %&gt;%\n    dplyr::group_by(orig.ident) %&gt;%\n    dplyr::mutate(freq = n / sum(n)) %&gt;%\n    data.frame()\n\ntable(olig$Subclusters)\n\ntable(olig$NMF_labelling)\n\ntable(olig$Subclusters, olig$NMF_labelling)\n\n# Load marker genes from MuSiC_inma_olig_pseudobulk\nmgs &lt;- \"{sc_data}/mgs_olig.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\nmgenes &lt;- unique(mgs$gene)\n\nfeats &lt;- union(hvg, mgenes)\ngc()\n\nsp_deconv &lt;- SPOTlight(\n    x = olig,\n    y = olig_pseudobulk,\n    groups = as.character(olig$new_annot),\n    mgs = mgs,\n    gene_id = \"gene\",\n    group_id = \"cluster\",\n    weight_id = \"avg_log2FC\",\n    hvg = hvg\n)\n\n\"{sc_data}/spotlight_deconv_olig_pseudobulk.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_deconv,\n      file = .)\n\nlibrary(colorBlindness)\nsp_pred &lt;- sp_deconv[[\"mat\"]]\nsp_pred_long &lt;- sp_pred %&gt;%\n    data.frame(check.names = FALSE) %&gt;%\n    tibble::rownames_to_column(\"ID\") %&gt;%\n    pivot_longer(\n        cols = -ID,\n        names_to = \"cell_type\",\n        values_to = \"proportion\")\n\n# Color palette for these cell types\ncpalette &lt;- colorBlindness::paletteMartin[1:ncol(sp_pred)]\nnames(cpalette) &lt;- colnames(sp_pred)\n\n# Visualization of proportions\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = ID, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(\n        values = cpalette) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nsp_pred_long %&gt;%\n    filter(cell_type == \"RA\") %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = forcats::fct_reorder(ID, -proportion), y = proportion, fill = cell_type)) +\n    scale_fill_manual(values = cpalette) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# ct_proportion$new_annot &lt;- str_replace(ct_proportion$new_annot, \"-\", \".\")\ndf &lt;- sp_pred_long %&gt;%\n    left_join(ct_proportion, by = c(\"ID\" = \"orig.ident\", \"cell_type\" = \"new_annot\")) %&gt;%\n    mutate(freq = if_else(is.na(freq), 0, freq))\n\n\"{sc_data}/spotlight_deconv_olig_pseudobulk_long.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n        object = df,\n        file = .)\n\nggplot(df) +\n    geom_point(aes(x = freq, y = proportion, color = ID)) +\n    geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"red\") +\n    facet_wrap( ~ cell_type, scales = \"free\") +\n    labs(x = \"Ground-Truth Proportions\", y = \"Predicted Proportions\") +\n    scale_color_brewer(palette = \"Dark2\") +\n    theme_minimal()\n\n# TCGA\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(devtools)\n# install_github(\"https://github.com/MarcElosua/SPOTlight\", ref = \"bioc_rcpp\")\nlibrary(SPOTlight)\nlibrary(SingleCellExperiment)\nlibrary(here)\nlibrary(glue)\n\nsource(here(\"paths.R\"))\n\nolig &lt;- \"{sc_data}/OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nhvg &lt;- VariableFeatures(olig)\n# Remove SCT since we don't need it anymore\nDefaultAssay(olig) &lt;- \"RNA\"\nolig[[\"SCT\"]] &lt;- NULL\n\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_oligo &lt;- labs_ls$OD %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"new_annot\" = \".\")\n\n# Add them to the object\nolig@meta.data &lt;- olig@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_oligo, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nDimPlot(\n    olig,\n    group.by = c(\"new_annot\", \"Subclusters\", \"NMF_labelling\"),\n    raster = FALSE,\n    ncol = 2)\n\n\nwith(olig@meta.data, table(new_annot, Subclusters))\n\n# Remove excluded cells\nolig &lt;- olig[, olig$new_annot != \"Excluded\"]\ntable(olig$Subclusters)\ntable(olig$NMF_labelling)\n\ntable(olig$Subclusters, olig$NMF_labelling)\n\n# Load marker genes from MuSiC_inma_olig_pseudobulk\nmgs &lt;- \"{sc_data}/mgs_olig.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\nmgenes &lt;- unique(mgs$gene)\n\nfeats &lt;- union(hvg, mgenes)\ngc()\n\n\nlibrary(SummarizedExperiment)\nolig_bulk &lt;- \"{tcga_data}/primary/Oligodendroglioma_bulkRNA_TCGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\ncdata &lt;- \"{tcga_data}/TCGA_metadata.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\n# Subset to Oligo\ncdata &lt;- cdata %&gt;%\n    filter(file_name %in% colnames(olig_bulk)) %&gt;%\n    tibble::rownames_to_column(\"TCGA_id\") %&gt;%\n    tibble::column_to_rownames(\"file_name\") %&gt;%\n    DataFrame()\n\nse &lt;- SummarizedExperiment(\n    assays = list(\"counts\" = as.matrix(olig_bulk)),\n    colData = cdata[colnames(olig_bulk), ])\n\n\n# quickly check the millions of fragments that could be mapped by Salmon to the genes\nse[[\"depth_M\"]] &lt;- round( colSums(olig_bulk) / 1e6, 1 )\n\ncolData(se) %&gt;%\n    data.frame() %&gt;%\n    ggplot() +\n    geom_col(aes(x = forcats::fct_reorder(TCGA_id, -depth_M), y = depth_M, fill = tumor_type)) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 90))\n\nlibrary(org.Hs.eg.db)\n\n# Using the org.Hs.eg.db we set up mapping info - if you look at the documentation you\n# can also obtain other keytypes\nens_genes &lt;- str_split(string = rownames(olig_bulk), pattern = \"\\\\.\", simplify = TRUE)[, 1]\nannots &lt;- select(\n    org.Hs.eg.db,\n    keys = ens_genes,\n    columns = \"SYMBOL\",\n    keytype = \"ENSEMBL\")\n\n# Check which Symbols are mapping to multiple ensemble IDs\nsymb_dup &lt;- annots %&gt;%\n    dplyr::count(SYMBOL) %&gt;%\n    filter(n &gt; 1 & ! is.na(SYMBOL)) %&gt;%\n    pull(\"SYMBOL\")\nsym_to_ens_dup &lt;- annots %&gt;% dplyr::filter(SYMBOL %in% symb_dup) %&gt;% pull(ENSEMBL)\n\n## \nens_to_symb_dup &lt;- annots %&gt;%\n    dplyr::count(ENSEMBL) %&gt;%\n    filter(n &gt; 1) %&gt;%\n    pull(\"ENSEMBL\")\n\n# Check which ensemble IDs don't map to any symbol\nens_na &lt;- annots %&gt;% dplyr::filter(is.na(SYMBOL)) %&gt;% pull(ENSEMBL)\n\nens_rm &lt;- Reduce(union, list(sym_to_ens_dup, ens_to_symb_dup, ens_na))\n\nolig_bulk &lt;- olig_bulk[which(!ens_genes %in% ens_rm), ]\n\nsymb &lt;- str_split(string = rownames(olig_bulk), pattern = \"\\\\.\", simplify = TRUE)[, 1] %&gt;%\n    data.frame(\"ENSEMBL\" = .) %&gt;%\n    left_join(annots, by = \"ENSEMBL\") %&gt;%\n    pull(SYMBOL)\n\n# replace ensemble ID with symbol\n# ens_check &lt;- symb %&gt;% dplyr::count(ENSEMBL) %&gt;% dplyr::filter(n &gt; 1) %&gt;% pull(\"ENSEMBL\")\n\nrownames(olig_bulk) &lt;- symb\n# Remove uninformative genes\nolig_bulk &lt;- olig_bulk[rowSums(olig_bulk) &gt; 0, ]\n\n\nsp_deconv &lt;- SPOTlight(\n    x = olig,\n    y = as.matrix(olig_bulk),\n    groups = as.character(olig$new_annot),\n    mgs = mgs,\n    gene_id = \"gene\",\n    group_id = \"cluster\",\n    weight_id = \"avg_log2FC\",\n    hvg = hvg\n)\n\n\"{sc_data}/spotlight_deconv_olig_TCGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_deconv,\n      file = .)\n\nlibrary(colorBlindness)\n\ncdata$ID &lt;- rownames(cdata)\nsp_pred &lt;- sp_deconv[[\"mat\"]]\nsp_pred_long &lt;- sp_pred %&gt;%\n    data.frame(check.names = FALSE) %&gt;%\n    tibble::rownames_to_column(\"ID\") %&gt;%\n    pivot_longer(\n        cols = -ID,\n        names_to = \"cell_type\",\n        values_to = \"proportion\") %&gt;%\n    left_join(data.frame(cdata), by = \"ID\")\n\n# Color palette for these cell types\ncpalette &lt;- colorBlindness::paletteMartin[1:ncol(sp_pred)]\nnames(cpalette) &lt;- colnames(sp_pred)\n\n# Visualization of proportions\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = TCGA_id, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(\n        values = cpalette) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nx_ord &lt;- sp_pred_long %&gt;%\n    dplyr::filter(cell_type == \"RA\") %&gt;%\n    arrange(desc(proportion)) %&gt;%\n    pull(TCGA_id)\n    \n\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = TCGA_id, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(values = cpalette) +\n    scale_x_discrete(limits = x_ord) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nsp_pred_long %&gt;%\n    filter(cell_type == \"RA\") %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = forcats::fct_reorder(TCGA_id, -proportion), y = proportion, fill = cell_type)) +\n    scale_fill_manual(values = cpalette) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\"{sc_data}/spotlight_deconv_olig_TCGA_RA_proportion.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_pred_long,\n      file = .)\n\n# CGGA\n\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(devtools)\n# install_github(\"https://github.com/MarcElosua/SPOTlight\", ref = \"bioc_rcpp\")\nlibrary(SPOTlight)\nlibrary(SingleCellExperiment)\nlibrary(here)\nlibrary(glue)\n\n\nsource(here(\"paths.R\"))\n\nolig &lt;- \"{sc_data}/OE0145-IDH_integrated_oligodendroglioma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nhvg &lt;- VariableFeatures(olig)\n# Remove SCT since we don't need it anymore\nDefaultAssay(olig) &lt;- \"RNA\"\nolig[[\"SCT\"]] &lt;- NULL\n\n# lab_astro &lt;- readRDS(\"~/Downloads/labels_astro_primary.rds\")\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_oligo &lt;- labs_ls$OD %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"new_annot\" = \".\")\n\n# Add them to the object\nolig@meta.data &lt;- olig@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_oligo, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nDimPlot(\n    olig,\n    group.by = c(\"new_annot\", \"Subclusters\", \"NMF_labelling\"),\n    raster = FALSE,\n    ncol = 2)\n\nwith(olig@meta.data, table(new_annot, Subclusters))\n\n# Remove excluded cells\nolig &lt;- olig[, olig$new_annot != \"Excluded\"]\n\ntable(olig$Subclusters)\n\ntable(olig$NMF_labelling)\n\ntable(olig$Subclusters, olig$NMF_labelling)\n\n# Load marker genes from MuSiC_inma_olig_pseudobulk\nmgs &lt;- \"{sc_data}/mgs_olig.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\nmgenes &lt;- unique(mgs$gene)\n\nfeats &lt;- union(hvg, mgenes)\ngc()\n\nlibrary(SummarizedExperiment)\nolig_bulk &lt;- \"{cgga_data}/primary/Oligodendroglioma_primary_bulkRNA_CGGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\ncdata &lt;- \"{cgga_data}/metadata_CGGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\n# Subset to Oligo\ncdata &lt;- cdata %&gt;%\n    filter(CGGA_ID %in% colnames(olig_bulk)) %&gt;%\n    tibble::rownames_to_column(\"CGGA_id\") %&gt;%\n    tibble::column_to_rownames(\"CGGA_ID\") %&gt;%\n    DataFrame()\ncdata$ID &lt;- rownames(cdata)\ncdata$CGGA_id &lt;- NULL\n\nse &lt;- SummarizedExperiment(\n    assays = list(\"counts\" = as.matrix(olig_bulk)),\n    colData = cdata[colnames(olig_bulk), ])\n\n# quickly check the millions of fragments that could be mapped by Salmon to the genes\nse[[\"depth_M\"]] &lt;- round( colSums(olig_bulk) / 1e6, 1 )\n\ncolData(se) %&gt;%\n    data.frame() %&gt;%\n    ggplot() +\n    geom_col(aes(x = forcats::fct_reorder(ID, -depth_M), y = depth_M, fill = PRS_type)) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 90))\n\n\n# Remove uninformative genes\nolig_bulk &lt;- olig_bulk[rowSums(olig_bulk) &gt; 0, ]\n\nsp_deconv &lt;- SPOTlight(\n    x = olig,\n    y = as.matrix(olig_bulk),\n    groups = as.character(olig$new_annot),\n    mgs = mgs,\n    gene_id = \"gene\",\n    group_id = \"cluster\",\n    weight_id = \"avg_log2FC\",\n    hvg = hvg\n)\n\n\"{sc_data}/spotlight_deconv_olig_CGGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_deconv,\n      file = .)\n\nlibrary(colorBlindness)\n\ncdata$ID &lt;- rownames(cdata)\nsp_pred &lt;- sp_deconv[[\"mat\"]]\nsp_pred_long &lt;- sp_pred %&gt;%\n    data.frame(check.names = FALSE) %&gt;%\n    tibble::rownames_to_column(\"ID\") %&gt;%\n    pivot_longer(\n        cols = -ID,\n        names_to = \"cell_type\",\n        values_to = \"proportion\") %&gt;%\n    left_join(data.frame(cdata), by = \"ID\")\n\n# Color palette for these cell types\ncpalette &lt;- colorBlindness::paletteMartin[1:ncol(sp_pred)]\nnames(cpalette) &lt;- colnames(sp_pred)\n\n# Visualization of proportions\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = ID, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(\n        values = cpalette) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nx_ord &lt;- sp_pred_long %&gt;%\n    dplyr::filter(cell_type == \"RA\") %&gt;%\n    arrange(desc(proportion)) %&gt;%\n    pull(ID)\n    \n\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = ID, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(values = cpalette) +\n    scale_x_discrete(limits = x_ord) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nsp_pred_long %&gt;%\n    filter(cell_type == \"RA\") %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = forcats::fct_reorder(ID, -proportion), y = proportion, fill = cell_type)) +\n    scale_fill_manual(values = cpalette) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\"{sc_data}/spotlight_deconv_olig_CGGA_RA_proportion.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_pred_long,\n      file = .)"
  },
  {
    "objectID": "analysis/analysis_deconvolution_astro.html",
    "href": "analysis/analysis_deconvolution_astro.html",
    "title": "Deconvoulution AS Pseudobulk + TCGA + CGGA",
    "section": "",
    "text": "Code\n# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# PSEUDOBULK\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(devtools)\n# install_github(\"https://github.com/MarcElosua/SPOTlight\", ref = \"bioc_rcpp\")\nlibrary(SPOTlight)\nlibrary(SingleCellExperiment)\nlibrary(here)\nlibrary(glue)\n\nsource(here(\"paths.R\"))\n\nastr &lt;- \"{sc_data}/OE0145-IDH_integrated_astrocytoma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\n# Remove SCT since we don't need it anymore\nhvg &lt;- VariableFeatures(astr)\nDefaultAssay(astr) &lt;- \"RNA\"\nastr[[\"SCT\"]] &lt;- NULL\n\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_astr &lt;- labs_ls$AS %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"new_annot\" = \".\")\n\n# Add them to the object\nastr@meta.data &lt;- astr@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_astr, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nDimPlot(\n    astr,\n    group.by = c(\"new_annot\", \"Subclusters\", \"NMF_labelling\"),\n    raster = FALSE,\n    ncol = 2)\n\nwith(astr@meta.data, table(new_annot, Subclusters))\n\n# subcluster & new_annot are the same annotation column\n\n# Remove excluded cells\nastr &lt;- astr[, astr$new_annot != \"Excluded\"]\n\n# DefaultAssay(astr) &lt;- \"RNA\"\npseudo_ls &lt;- lapply(unique(astr$orig.ident), function(i) {\n    tmp &lt;- astr[, astr$orig.ident == i]@assays$RNA@counts\n    as.matrix(rowSums(tmp))\n})\n\nastr_pseudobulk &lt;- Reduce(cbind, pseudo_ls)\n# Remove all genes that are 0\nastr_pseudobulk &lt;- astr_pseudobulk[rowSums(astr_pseudobulk) &gt; 0, ]\ncolnames(astr_pseudobulk) &lt;- unique(astr$orig.ident)\n\nct_proportion &lt;- astr@meta.data %&gt;%\n    dplyr::count(orig.ident, new_annot) %&gt;%\n    dplyr::group_by(orig.ident) %&gt;%\n    dplyr::mutate(freq = n / sum(n)) %&gt;%\n    data.frame()\n\ntable(astr$Subclusters)\n\ntable(astr$NMF_labelling)\n\ntable(astr$Subclusters, astr$NMF_labelling)\n\n# Load marker genes from MuSiC_inma_astr_pseudobulk\nmgs &lt;- \"{sc_data}/mgs_astr.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\nmgenes &lt;- unique(mgs$gene)\n\nfeats &lt;- union(hvg, mgenes)\ngc()\n\nsp_deconv &lt;- SPOTlight(\n    x = astr,\n    y = astr_pseudobulk,\n    groups = as.character(astr$new_annot),\n    mgs = mgs,\n    gene_id = \"gene\",\n    group_id = \"cluster\",\n    weight_id = \"avg_log2FC\",\n    hvg = hvg\n)\n\n\"{sc_data}/spotlight_deconv_astr_pseudobulk.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_deconv,\n      file = .)\n\nlibrary(colorBlindness)\nsp_pred &lt;- sp_deconv[[\"mat\"]]\nsp_pred_long &lt;- sp_pred %&gt;%\n    data.frame(check.names = FALSE) %&gt;%\n    tibble::rownames_to_column(\"ID\") %&gt;%\n    pivot_longer(\n        cols = -ID,\n        names_to = \"cell_type\",\n        values_to = \"proportion\")\n\n# Color palette for these cell types\ncpalette &lt;- colorBlindness::paletteMartin[1:ncol(sp_pred)]\nnames(cpalette) &lt;- colnames(sp_pred)\n\n# Visualization of proportions\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = ID, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(\n        values = cpalette) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nsp_pred_long %&gt;%\n    filter(cell_type == \"RA\") %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = forcats::fct_reorder(ID, -proportion), y = proportion, fill = cell_type)) +\n    scale_fill_manual(values = cpalette) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# ct_proportion$new_annot &lt;- str_replace(ct_proportion$new_annot, \"-\", \".\")\ndf &lt;- sp_pred_long %&gt;%\n    left_join(ct_proportion, by = c(\"ID\" = \"orig.ident\", \"cell_type\" = \"new_annot\")) %&gt;%\n    mutate(freq = if_else(is.na(freq), 0, freq))\n\n\"{sc_data}/spotlight_deconv_astr_pseudobulk_long.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n        object = df,\n        file = .)\n\nggplot(df) +\n    geom_point(aes(x = freq, y = proportion, color = ID)) +\n    geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"red\") +\n    facet_wrap( ~ cell_type, scales = \"free\") +\n    labs(x = \"Ground-Truth Proportions\", y = \"Predicted Proportions\") +\n    scale_color_brewer(palette = \"Dark2\") +\n    theme_minimal()\n\n# TCGA\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(devtools)\n# install_github(\"https://github.com/MarcElosua/SPOTlight\", ref = \"bioc_rcpp\")\nlibrary(SPOTlight)\nlibrary(SingleCellExperiment)\nlibrary(here)\nlibrary(glue)\n\nsource(here(\"paths.R\"))\n\nastr &lt;- \"{sc_data}/OE0145-IDH_integrated_astrocytoma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nhvg &lt;- VariableFeatures(astr)\n# Remove SCT since we don't need it anymore\nDefaultAssay(astr) &lt;- \"RNA\"\nastr[[\"SCT\"]] &lt;- NULL\n\n# lab_astro &lt;- readRDS(\"~/Downloads/labels_astro_primary.rds\")\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_astr &lt;- labs_ls$AS %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"new_annot\" = \".\")\n\n# Add them to the object\nastr@meta.data &lt;- astr@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_astr, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nDimPlot(\n    astr,\n    group.by = c(\"new_annot\", \"Subclusters\", \"NMF_labelling\"),\n    raster = FALSE,\n    ncol = 2)\n\nwith(astr@meta.data, table(new_annot, Subclusters))\n\n# Remove excluded cells\nastr &lt;- astr[, astr$new_annot != \"Excluded\"]\n\ntable(astr$Subclusters)\n\ntable(astr$NMF_labelling)\n\ntable(astr$Subclusters, astr$NMF_labelling)\n\n# Load marker genes from MuSiC_inma_astr_pseudobulk\nmgs &lt;- \"{sc_data}/mgs_astr.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\nmgenes &lt;- unique(mgs$gene)\n\nfeats &lt;- union(hvg, mgenes)\ngc()\n\nlibrary(SummarizedExperiment)\nastr_bulk &lt;- \"{tcga_data}/primary/Astrocytoma_bulkRNA_TCGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\ncdata &lt;- \"{tcga_data}/TCGA_metadata.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\n# Subset to Astro\ncdata &lt;- cdata %&gt;%\n    filter(file_name %in% colnames(astr_bulk)) %&gt;%\n    tibble::rownames_to_column(\"TCGA_id\") %&gt;%\n    tibble::column_to_rownames(\"file_name\") %&gt;%\n    DataFrame()\n\nse &lt;- SummarizedExperiment(\n    assays = list(\"counts\" = as.matrix(astr_bulk)),\n    colData = cdata[colnames(astr_bulk), ])\n\n\n# quickly check the millions of fragments that could be mapped by Salmon to the genes\nse[[\"depth_M\"]] &lt;- round( colSums(astr_bulk) / 1e6, 1 )\n\ncolData(se) %&gt;%\n    data.frame() %&gt;%\n    ggplot() +\n    geom_col(aes(x = forcats::fct_reorder(TCGA_id, -depth_M), y = depth_M, fill = tumor_type)) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 90))\n\nlibrary(org.Hs.eg.db)\n\n# Using the org.Hs.eg.db we set up mapping info - if you look at the documentation you\n# can also obtain other keytypes\nens_genes &lt;- str_split(string = rownames(astr_bulk), pattern = \"\\\\.\", simplify = TRUE)[, 1]\nannots &lt;- select(\n    org.Hs.eg.db,\n    keys = ens_genes,\n    columns = \"SYMBOL\",\n    keytype = \"ENSEMBL\")\n\n# Check which Symbols are mapping to multiple ensemble IDs\nsymb_dup &lt;- annots %&gt;%\n    dplyr::count(SYMBOL) %&gt;%\n    filter(n &gt; 1 & ! is.na(SYMBOL)) %&gt;%\n    pull(\"SYMBOL\")\nsym_to_ens_dup &lt;- annots %&gt;% dplyr::filter(SYMBOL %in% symb_dup) %&gt;% pull(ENSEMBL)\n\n## \nens_to_symb_dup &lt;- annots %&gt;%\n    dplyr::count(ENSEMBL) %&gt;%\n    filter(n &gt; 1) %&gt;%\n    pull(\"ENSEMBL\")\n\n# Check which ensemble IDs don't map to any symbol\nens_na &lt;- annots %&gt;% dplyr::filter(is.na(SYMBOL)) %&gt;% pull(ENSEMBL)\n\nens_rm &lt;- Reduce(union, list(sym_to_ens_dup, ens_to_symb_dup, ens_na))\n\nastr_bulk &lt;- astr_bulk[which(!ens_genes %in% ens_rm), ]\n\nsymb &lt;- str_split(string = rownames(astr_bulk), pattern = \"\\\\.\", simplify = TRUE)[, 1] %&gt;%\n    data.frame(\"ENSEMBL\" = .) %&gt;%\n    left_join(annots, by = \"ENSEMBL\") %&gt;%\n    pull(SYMBOL)\n\n# replace ensemble ID with symbol\n# ens_check &lt;- symb %&gt;% dplyr::count(ENSEMBL) %&gt;% dplyr::filter(n &gt; 1) %&gt;% pull(\"ENSEMBL\")\n\nrownames(astr_bulk) &lt;- symb\n# Remove uninformative genes\nastr_bulk &lt;- astr_bulk[rowSums(astr_bulk) &gt; 0, ]\n\nsp_deconv &lt;- SPOTlight(\n    x = astr,\n    y = as.matrix(astr_bulk),\n    groups = as.character(astr$new_annot),\n    mgs = mgs,\n    gene_id = \"gene\",\n    group_id = \"cluster\",\n    weight_id = \"avg_log2FC\",\n    hvg = hvg\n)\n\n\"{sc_data}/spotlight_deconv_astr_TCGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_deconv,\n      file = .)\n\nlibrary(colorBlindness)\n\ncdata$ID &lt;- rownames(cdata)\nsp_pred &lt;- sp_deconv[[\"mat\"]]\nsp_pred_long &lt;- sp_pred %&gt;%\n    data.frame(check.names = FALSE) %&gt;%\n    tibble::rownames_to_column(\"ID\") %&gt;%\n    pivot_longer(\n        cols = -ID,\n        names_to = \"cell_type\",\n        values_to = \"proportion\") %&gt;%\n    left_join(data.frame(cdata), by = \"ID\")\n\n# Color palette for these cell types\ncpalette &lt;- colorBlindness::paletteMartin[1:ncol(sp_pred)]\nnames(cpalette) &lt;- colnames(sp_pred)\n\n# Visualization of proportions\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = TCGA_id, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(\n        values = cpalette) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nx_ord &lt;- sp_pred_long %&gt;%\n    dplyr::filter(cell_type == \"RA\") %&gt;%\n    arrange(desc(proportion)) %&gt;%\n    pull(TCGA_id)\n    \n\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = TCGA_id, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(values = cpalette) +\n    scale_x_discrete(limits = x_ord) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nsp_pred_long %&gt;%\n    filter(cell_type == \"RA\") %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = forcats::fct_reorder(TCGA_id, -proportion), y = proportion, fill = cell_type)) +\n    scale_fill_manual(values = cpalette) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\"{sc_data}/spotlight_deconv_astr_TCGA_RA_proportion.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_pred_long,\n      file = .)\n\n\n# CGGA\n\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(devtools)\n# install_github(\"https://github.com/MarcElosua/SPOTlight\", ref = \"bioc_rcpp\")\nlibrary(SPOTlight)\nlibrary(SingleCellExperiment)\nlibrary(here)\nlibrary(glue)\n\nsource(here(\"paths.R\"))\n\nastr &lt;- \"{sc_data}/OE0145-IDH_integrated_astrocytoma_NMF_labelled_with_metacell_mapping_and_1p_scores_newlabel.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n\nhvg &lt;- VariableFeatures(astr)\n# Remove SCT since we don't need it anymore\nDefaultAssay(astr) &lt;- \"RNA\"\nastr[[\"SCT\"]] &lt;- NULL\n\n# lab_astro &lt;- readRDS(\"~/Downloads/labels_astro_primary.rds\")\nlabs_ls &lt;- \"{sc_data}/labels.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS()\n    \nlab_astr &lt;- labs_ls$AS %&gt;%\n    data.frame() %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    dplyr::rename(\"new_annot\" = \".\")\n\n# Add them to the object\nastr@meta.data &lt;- astr@meta.data %&gt;%\n    tibble::rownames_to_column(\"bc\") %&gt;%\n    left_join(lab_astr, by = \"bc\") %&gt;%\n    tibble::column_to_rownames(\"bc\")\n\nDimPlot(\n    astr,\n    group.by = c(\"new_annot\", \"Subclusters\", \"NMF_labelling\"),\n    raster = FALSE,\n    ncol = 2)\n\nwith(astr@meta.data, table(new_annot, Subclusters))\n\n# Remove excluded cells\nastr &lt;- astr[, astr$new_annot != \"Excluded\"]\n\ntable(astr$Subclusters)\n\ntable(astr$NMF_labelling)\n\ntable(astr$Subclusters, astr$NMF_labelling)\n\n# Load marker genes from MuSiC_inma_astr_pseudobulk\nmgs &lt;- \"{sc_data}/mgs_astr.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\nmgenes &lt;- unique(mgs$gene)\n\nfeats &lt;- union(hvg, mgenes)\ngc()\n\nlibrary(SummarizedExperiment)\nastr_bulk &lt;- \"{cgga_data}/primary/Astrocytoma_primary_bulkRNA_CGGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\ncdata &lt;- \"{cgga_data}/metadata_CGGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    readRDS(file = )\n\n# Subset to Astro\ncdata &lt;- cdata %&gt;%\n    filter(CGGA_ID %in% colnames(astr_bulk)) %&gt;%\n    tibble::rownames_to_column(\"CGGA_id\") %&gt;%\n    tibble::column_to_rownames(\"CGGA_ID\") %&gt;%\n    DataFrame()\ncdata$ID &lt;- rownames(cdata)\ncdata$CGGA_id &lt;- NULL\n\nse &lt;- SummarizedExperiment(\n    assays = list(\"counts\" = as.matrix(astr_bulk)),\n    colData = cdata[colnames(astr_bulk), ])\n\n# quickly check the millions of fragments that could be mapped by Salmon to the genes\nse[[\"depth_M\"]] &lt;- round( colSums(astr_bulk) / 1e6, 1 )\n\ncolData(se) %&gt;%\n    data.frame() %&gt;%\n    ggplot() +\n    geom_col(aes(x = forcats::fct_reorder(ID, -depth_M), y = depth_M, fill = PRS_type)) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 90))\n\n# Remove uninformative genes\nastr_bulk &lt;- astr_bulk[rowSums(astr_bulk) &gt; 0, ]\n\nsp_deconv &lt;- SPOTlight(\n    x = astr,\n    y = as.matrix(astr_bulk),\n    groups = as.character(astr$new_annot),\n    mgs = mgs,\n    gene_id = \"gene\",\n    group_id = \"cluster\",\n    weight_id = \"avg_log2FC\",\n    hvg = hvg\n)\n\n\"{sc_data}/spotlight_deconv_astr_CGGA.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_deconv,\n      file = .)\n\nlibrary(colorBlindness)\n\ncdata$ID &lt;- rownames(cdata)\nsp_pred &lt;- sp_deconv[[\"mat\"]]\nsp_pred_long &lt;- sp_pred %&gt;%\n    data.frame(check.names = FALSE) %&gt;%\n    tibble::rownames_to_column(\"ID\") %&gt;%\n    pivot_longer(\n        cols = -ID,\n        names_to = \"cell_type\",\n        values_to = \"proportion\") %&gt;%\n    left_join(data.frame(cdata), by = \"ID\")\n\n# Color palette for these cell types\ncpalette &lt;- colorBlindness::paletteMartin[1:ncol(sp_pred)]\nnames(cpalette) &lt;- colnames(sp_pred)\n\n# Visualization of proportions\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = ID, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(\n        values = cpalette) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nx_ord &lt;- sp_pred_long %&gt;%\n    dplyr::filter(cell_type == \"RA\") %&gt;%\n    arrange(desc(proportion)) %&gt;%\n    pull(ID)\n    \n\nsp_pred_long %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = ID, y = proportion, fill = cell_type),\n        position = \"fill\") +\n    scale_fill_manual(values = cpalette) +\n    scale_x_discrete(limits = x_ord) +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nsp_pred_long %&gt;%\n    filter(cell_type == \"RA\") %&gt;%\n    ggplot() +\n    geom_col(\n        aes(x = forcats::fct_reorder(ID, -proportion), y = proportion, fill = cell_type)) +\n    scale_fill_manual(values = cpalette) +\n    theme_minimal() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\"{sc_data}/spotlight_deconv_astr_CGGA_RA_proportion.rds\" %&gt;%\n    glue() %&gt;%\n    here() %&gt;%\n    saveRDS(\n      object = sp_pred_long,\n      file = .)"
  },
  {
    "objectID": "analysis/analysis_microglia_deconvolution.html",
    "href": "analysis/analysis_microglia_deconvolution.html",
    "title": "Microglia deconvolution",
    "section": "",
    "text": "Code####################################################\n### Deconvolution TCGA-LGG with 'microglia' data ###\n####################################################\n\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(SPOTlight)\nlibrary(SingleCellExperiment)\nlibrary(SpatialExperiment)\nlibrary(scater)\nlibrary(scran)\n\nlibrary(Seurat)\nlibrary(dplyr)\nlibrary(DESeq2)\nlibrary(tidyr)\nlibrary(harmony)\nlibrary(cowplot)\n\n\n## 1- SINCLE CELL DATA ##\n\n# single cell RNA counts\nmicroglia_combined_to_use &lt;- readRDS(\"/Users/an/Documents/JC_projects/microglia/microglia_combined_to_use.rds\")\n\n# marker genes from Imma\nmicroglia_primary &lt;- readRDS(\"/Users/an/Documents/JC_projects/microglia/microglia_primary.rds\")\nmgs &lt;- microglia_primary\n\n\n# Recompute HVG excluding Ribosomal and mitochondrial\n\nmtx &lt;- microglia_combined_to_use@assays$RNA@counts\n# remove ribosomal and mitochondrial genes\nmtx &lt;- mtx[stringr::str_detect(rownames(mtx), \"^RP[L|S]|^MT-\", negate = TRUE), ]\n\nsc &lt;- CreateSeuratObject(counts = mtx, meta.data = microglia_combined_to_use@meta.data)\nsc &lt;- Seurat::NormalizeData(sc, verbose = FALSE) %&gt;%\n  Seurat::FindVariableFeatures(selection.method = \"vst\", nfeatures = 3000)\n\n# hvg top 3000\nhvg &lt;- VariableFeatures(sc)\n\n\n### Subset SC object so all the cells from the same cell type to come from the same batch\n\n# subset most representative sample(s)\nmicroglia_combined_to_use@meta.data$cell_id &lt;- rownames(microglia_combined_to_use@meta.data)\n\nns &lt;- with(microglia_combined_to_use@meta.data, table(cell_id, labelling)) \nns &lt;- as.matrix(unclass(ns))\nm &lt;- 100 # Max cells per cell type\n# Extract cell barcodes\nmeta &lt;- microglia_combined_to_use@meta.data\n\nid &lt;- lapply(colnames(ns), function(nm) {\n  x &lt;- ns[, nm]\n  # Initialize variables\n  n &lt;- 0    # N of cells\n  s &lt;- c()  # Gem IDs\n  b &lt;- c()  # Cell barcodes\n  while (n &lt; m & length(x) &gt; 0) {\n    # select gem id with the most cells\n    i &lt;- names(sort(x, decreasing = TRUE))[[1]]\n    # Add gem id to vector s\n    s &lt;- c(s, i)\n    # Add number of cells per cell type to n\n    n &lt;- n + x[[i]]\n    # Remove gem id from x to move on to the next\n    x &lt;- x[names(x) != i]\n    # extract barcode\n    barcode &lt;- rownames(meta[meta[, \"cell_id\"] == i &\n                               meta[, \"labelling\"] == nm, ])\n    # make sure it adds up to m\n    # print(barcode)\n    if ((length(b) + length(barcode)) &gt; m) {\n      barcode &lt;- sample(x = barcode, size = m - length(b), replace = FALSE)\n    }\n    b &lt;- c(b, barcode)  # Cell barcodes\n  }\n  return(b)\n})\n\nsc_sub &lt;- microglia_combined_to_use[, unlist(id)]\ntable(sc_sub@meta.data$labelling) \n\ngc()\n\n\n\n## 2- TCGA-LGG DATA COLLECTION AND SELECTION ##\n\n# # TCGA RNA-seq data download:\n\n# library(TCGAbiolinks)\n# \n# query &lt;- GDCquery(\n#   project = \"TCGA-LGG\",\n#   data.category = \"Gene expression\",\n#   data.type = \"Gene expression quantification\",\n#   platform = \"Illumina HiSeq\", \n#   file.type  = \"normalized_results\",\n#   experimental.strategy = \"RNA-Seq\",\n#   legacy = TRUE\n# )\n# GDCdownload(\n#   query = query, \n#   method = \"api\", \n#   files.per.chunk = 10\n# )\n# data &lt;- GDCprepare(query = query)\n\n# data_LGG &lt;- data\n# save(data_LGG,file=\"/Users/an/Documents/JC_projects/microglia/TCGA_RNA_data_LGG.RData\")\n\n\n# Data downloaded from TCGA: (with the script hided before) \nload(\"/Users/an/Documents/JC_projects/microglia/TCGA_RNA_data_LGG.RData\")\n\n\n# Selection of the same list of patients Imma had:\n\n# tables TCGA patients (from Imma)\nastro_proportion &lt;- read.csv(\"/Users/an/Documents/JC_projects/tcga_survival/astro_proportion.csv\",header=TRUE)\noligo_proportion &lt;- read.csv(\"/Users/an/Documents/JC_projects/tcga_survival/oligo_proportion.csv\",header=TRUE)\n\n# list of patients\nastro_patients &lt;- astro_proportion$ID.y\noligo_patients &lt;- oligo_proportion$ID.y\n\nall_patients &lt;- c(astro_patients,oligo_patients) # to select the same patients \n\n# subset expression data\ndata_LGG_subset &lt;- data_LGG[,which(data_LGG@colData$patient %in% all_patients)]\n\n\n\n# For some patients there are more than one RNA sample: \nduplicated_patients &lt;- unique(data_LGG_subset@colData$patient[which(duplicated(data_LGG_subset@colData$patient))]) # 12 patients\n\nmetadata_duplis &lt;- as.data.frame(data_LGG_subset@colData[which(data_LGG_subset@colData$patient %in% duplicated_patients), 1:59])\n\nfor(patient in duplicated_patients){\n  print(patient)\n  print(metadata_duplis[which(metadata_duplis$patient == patient),])\n  print(\"\")\n  print(\"----------------------------------------\")\n  print(\"\")\n  print(\"\")\n}\n\n# Select the \"Primary solid Tumor\"\nselected_barcodes &lt;- c(\"TCGA-DU-6397-01A-11R-1708-07\",\n              \"TCGA-DU-5872-01A-11R-1708-07\",\n              \"TCGA-TQ-A7RV-01A-21R-A34F-07\",\n              \"TCGA-DU-7304-01A-12R-2090-07\",\n              \"TCGA-FG-A4MT-01A-11R-A26U-07\",\n              \"TCGA-TQ-A7RK-01A-11R-A33Z-07\",\n              \"TCGA-DU-5870-01A-11R-1708-07\",\n              \"TCGA-DU-6407-01A-13R-1708-07\",\n              \"TCGA-FG-5965-01B-11R-1896-07\",\n              \"TCGA-TQ-A8XE-01A-11R-A36H-07\",\n              \"TCGA-DH-A669-01A-12R-A31N-07\",\n              \"TCGA-TM-A7CF-01A-11R-A32Q-07\")\n\n\n# TCGA RNAseq data subset unique samples, 418 in total:\ndata_LGG_subset_unique &lt;- data_LGG_subset[,-which(data_LGG_subset@colData$patient %in% duplicated_patients & ! data_LGG_subset@colData$barcode %in% selected_barcodes)]\n\n\ncounts_expr_lgg &lt;- as.data.frame(assay(data_LGG_subset_unique))\n\ncounts_expr_lgg_matrix &lt;- as.matrix(counts_expr_lgg)\n\n\n\n## 3- RUN SPOTLIGHT ##\n\nres &lt;- SPOTlight(\n  x = sc_sub,\n  y = counts_expr_lgg_matrix,\n  groups = as.character(sc_sub$labelling), \n  mgs = mgs,\n  hvg = hvg,\n  weight_id = \"avg_log2FC\",\n  group_id = \"cluster\",\n  gene_id = \"gene\")\n\nsave(res, file=paste0(\"/Users/an/Documents/JC_projects/microglia/res_spotlight_tcga_LGG_mgsImma_hvgComputed.RData\"))\n\n\n\n## 4- PLOT TOPIC PROFILES ##\n\npdf(file=paste0(\"/Users/an/Documents/JC_projects/microglia/plot_TopicProfiles_tcga_LGG_mgsImma_hvgComputed.pdf\"),heigh=8,width=8)\nplotTopicProfiles(\n  x = res$NMF,\n  y = sc_sub$labelling, \n  facet = FALSE,\n  min_prop = 0.01,\n  ncol = 1) +\n  theme(aspect.ratio = 1)\ndev.off()\n\n\n## 5- PLOT HEATMAP WITH THE PROPORTIONS OF THE 10 CELL CATEGORIES, ANNOTATED IF THE SAMPLE IS ASTRO OR OLIGO  ##\n\nlibrary(grid)\nlibrary(ComplexHeatmap)\n\ninput_data &lt;- as.matrix(res$mat)\n\n#annotation astro and oligo\nout_mat &lt;- res$mat\npatients &lt;- rownames(out_mat)\n\nout_df &lt;- as.data.frame(out_mat)\nout_df$patient_id &lt;- patients\n\nout_df$group &lt;- rep(NA,nrow(out_df))\nout_df[which(out_df$patient_id %in% astro_patients),\"group\"] &lt;- \"ASTRO\"\nout_df[which(out_df$patient_id %in% oligo_patients),\"group\"] &lt;- \"OLIGO\"\n\nas.data.frame(table(out_df$group))\n# Var1 Freq\n# 1 ASTRO  249\n# 2 OLIGO  169\n\nrow_ha = rowAnnotation(group = out_df$group)\n\nheatmap &lt;- Heatmap(as.matrix(res$mat),\n                   row_names_gp = gpar(fontsize = 2),\n                   column_names_gp = gpar(fontsize = 8),\n                   cluster_rows = TRUE,cluster_columns=TRUE,\n                   right_annotation = row_ha) #top_annotation = column_ha\n\n\nht = draw(heatmap)\npdf(paste0(\"/Users/an/Documents/JC_projects/microglia/heatmap_deconv_tcga_LGG_mgsImma_hvgComputed.pdf\"),heigh=15,width=8)\nht\ndev.off()\n\n\n\n# Heatmap only OLIGO:\n\ndata_oligo &lt;- res$mat[which(rownames(res$mat) %in% oligo_patients),]\n\nheatmap_res &lt;- Heatmap(as.matrix(data_oligo),\n                       row_names_gp = gpar(fontsize = 4),\n                       column_names_gp = gpar(fontsize = 10),\n                       cluster_rows = TRUE,#cluster_columns = FALSE,\n                       heatmap_legend_param = list(title = \"proportion\",legend_height = unit(4, \"cm\"),\n                                                   title_position = \"lefttop-rot\")\n)\n\nht = draw(heatmap_res)\npdf(paste0(\"/Users/an/Documents/JC_projects/microglia/heatmap_deconv_tcga_LGG_mgsImma_hvgComputed_only_OLIGO.pdf\"),heigh=15,width=8)\nht\ndev.off()\n\n\n# Heatmap only ASTRO:\n\ndata_astro &lt;- res$mat[which(rownames(res$mat) %in% astro_patients),]\n\nheatmap_res &lt;- Heatmap(as.matrix(data_astro),\n                       row_names_gp = gpar(fontsize = 4),\n                       column_names_gp = gpar(fontsize = 10),\n                       cluster_rows = TRUE,#cluster_columns = FALSE,\n                       heatmap_legend_param = list(title = \"proportion\",legend_height = unit(4, \"cm\"),\n                                                   title_position = \"lefttop-rot\")\n)\n\nht = draw(heatmap_res)\npdf(paste0(\"/Users/an/Documents/JC_projects/microglia/heatmap_deconv_tcga_LGG_mgsImma_hvgComputed_only_ASTRO.pdf\"),heigh=15,width=8)\nht\ndev.off()\n\n\n\n\n## 6- BOXPLOTS PROPORTION PER CELL CATEGORY ASTRO VS OLIGO ##\n\nlibrary(ggpubr)\n\nout_deconv &lt;- res$mat\nout_deconv_melted &lt;- melt(out_deconv)\ncolnames(out_deconv_melted) &lt;- c(\"patient_id\",\"cluster\",\"value\")\nout_deconv_melted$group &lt;- rep(NA,nrow(out_deconv_melted))\nout_deconv_melted[which(out_deconv_melted$patient_id %in% astro_patients),\"group\"] &lt;- \"ASTRO\"\nout_deconv_melted[which(out_deconv_melted$patient_id %in% oligo_patients),\"group\"] &lt;- \"OLIGO\"\n\nclusters &lt;- as.character(unique(out_deconv_melted$cluster))\n\nfor(cluster in clusters){\n  print(cluster)\n  subset &lt;- out_deconv_melted[which(out_deconv_melted$cluster==cluster),]\n  cellname &lt;- gsub(\" \",\"_\",cluster)\n  cellname &lt;- gsub(\"-\",\"_\",cellname)\n  cellname &lt;- gsub(\"+\",\"\",cellname,fixed=TRUE)\n  \n  plot &lt;- ggplot(subset, aes(y = value,x=group, fill=group)) +\n    geom_violin() +\n    #geom_violin(color=col_cells[which(names(col_cells) == cluster)],trim=FALSE) +\n    scale_fill_manual(values=c(\"ASTRO\"=\"lightsalmon\",\"OLIGO\"=\"mediumaquamarine\")) +\n    geom_boxplot(color=\"black\",width=0.1) + \n    ylab(paste0(\"Proportion of \",cluster,\" cluster\")) +\n    xlab(\"\") +\n    #ggtitle(paste0(cluster)) +\n    stat_compare_means(size=6,label.x = 1.3) +\n    #ylim(0,100) +\n    theme(axis.text.x = element_text(size=20, hjust=0.5,vjust=0.5,face=\"bold\"),\n          axis.text.y = element_text(size=18, hjust=1, vjust = 0.5),\n          axis.title.x = element_text(size=22, face= \"bold\"),\n          axis.title.y = element_text(size=22, face= \"bold\"),\n          legend.title = element_text(size = 12, face=\"bold\"),\n          strip.text.x = element_text(size=18, color=\"black\",face=\"bold\"),\n          plot.title = element_text(hjust = 0.5, face=\"bold\",size=25),\n          legend.text = element_text(size = 12), legend.position = \"none\")\n  \n  ggsave(plot, file=paste0(\"/Users/an/Documents/JC_projects/microglia/boxplots/comparison_deconv_astro_oligo_\",cellname,\"_violin.pdf\"), width=15,height=20, units = \"cm\",limitsize = FALSE)\n  \n  plot &lt;- ggplot(subset, aes(y = value,x=group, fill=group)) +\n    #geom_violin() +\n    #geom_violin(color=col_cells[which(names(col_cells) == cluster)],trim=FALSE) +\n    scale_fill_manual(values=c(\"ASTRO\"=\"lightsalmon\",\"OLIGO\"=\"mediumaquamarine\")) +\n    geom_boxplot(color=\"black\",width=0.5) + \n    ylab(paste0(\"Proportion of \",cluster)) +\n    xlab(\"\") +\n    #ggtitle(paste0(cluster)) +\n    stat_compare_means(size=6,label.x = 1.3) +\n    #ylim(0,100) +\n    theme(axis.text.x = element_text(size=20, hjust=0.5,vjust=0.5,face=\"bold\"),\n          axis.text.y = element_text(size=18, hjust=1, vjust = 0.5),\n          axis.title.x = element_text(size=22, face= \"bold\"),\n          axis.title.y = element_text(size=22, face= \"bold\"),\n          legend.title = element_text(size = 12, face=\"bold\"),\n          strip.text.x = element_text(size=18, color=\"black\",face=\"bold\"),\n          plot.title = element_text(hjust = 0.5, face=\"bold\",size=25),\n          legend.text = element_text(size = 12), legend.position = \"none\")\n  \n  ggsave(plot, file=paste0(\"/Users/an/Documents/JC_projects/microglia/boxplots/comparison_deconv_astro_oligo_\",cellname,\"_boxplot.pdf\"), width=20,height=20, units = \"cm\",limitsize = FALSE)\n  \n  \n  \n}"
  },
  {
    "objectID": "viz/figures_figure_1A.html",
    "href": "viz/figures_figure_1A.html",
    "title": "Figure 1A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in metadata.\nmetadata &lt;- as.data.frame(readxl::read_excel(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_samples_metadata.xlsx\"))\n\n# Process metadata.\nrownames(metadata) &lt;- metadata$Samples\nmetadata$Samples &lt;- NULL\nmetadata &lt;- metadata %&gt;% \n            dplyr::filter(Diagnosis != \"GBM-like\") %&gt;% \n            as.data.frame() %&gt;% \n            tibble::rownames_to_column(var = \"ID\") %&gt;% \n            tibble::as_tibble() %&gt;% \n            dplyr::mutate_all(.funs = function(x){ifelse(x == \"NA\", NA, x)}) %&gt;% \n            dplyr::mutate(\"snRNAseq\" = factor(.data$snRNAseq, levels = c(\"Yes\", \"No\")),\n                          \"snATACseq\" = factor(.data$snATACseq, levels = c(\"Yes\", \"No\")),\n                          \"IDH mutated\" = factor(.data$`IDH mutated`, levels = c(\"Yes\", \"No\")),\n                          \"1p/19q codeletion\" = factor(.data$`1p/19q codeletion`, levels = c(\"Yes\", \"No\")),\n                          \"MGMT methylated\" = factor(.data$`MGMT methylated`, levels = c(\"Yes\", \"No\")),\n                          \"TERT status\" = factor(.data$`TERT status`, levels = c(\"WT\", \"C228T\", \"C250T\")),\n                          \"ATRX status\" = factor(.data$`ATRX status`, levels = c(\"WT\", \"Loss\")),\n                          \"Diagnosis\" = factor(.data$Diagnosis, levels = c(\"Oligodendroglioma\", \"Astrocytoma\")),\n                          \"Grade\" = factor(.data$Grade, levels = c(\"Grade 2\", \"Grade 3\")),\n                          \"Sex\" = factor(.data$Sex, levels = c(\"Female\", \"Male\"))) %&gt;% \n            tibble::column_to_rownames(var = \"ID\") %&gt;% \n            as.data.frame()\n\n# Define colors.\nyes_no_colors &lt;- c(\"Yes\" = \"#1b4965\", \"No\" = \"#98b9cd\")\ncolors.use &lt;- list(\"snRNAseq\" = yes_no_colors,\n                   \"snATACseq\" = yes_no_colors,\n                   \"IDH mutated\" = yes_no_colors,\n                   \"1p/19q codeletion\" = yes_no_colors,\n                   \"MGMT methylated\" = yes_no_colors,\n                   \"TERT status\" = c(\"WT\" = \"#1a936f\", \"C228T\" = \"#ca6702\", \"C250T\" = \"#8c2f39\"),\n                   \"ATRX status\" = c(\"WT\" = \"#4f6d7a\", \"Loss\" = \"#99582a\"),\n                   \"Diagnosis\" = c(\"Oligodendroglioma\" = \"#3c5b8b\", \"Astrocytoma\" = \"#b38b14\"),\n                   \"Grade\" = c(\"Grade 2\" = \"#1a7d9e\", \"Grade 3\" = \"#9e1a3b\"),\n                   \"Sex\" = c(\"Male\" = \"#723d46\", \"Female\" = \"#af9d6a\"))\n\n# Plot.\np1 &lt;- SCpubr::do_MetadataPlot(from_df = TRUE,\n                              df = metadata,\n                              legend.position = \"null\",\n                              legend.ncol = 1,\n                              colors.use = colors.use,\n                              axis.text.face = \"plain\", \n                              font.size = 12, \n                              legend.font.size = 12, \n                              legend.symbol.size = 4) &\n       ggplot2::ylab(\"\")\n\np2 &lt;- SCpubr::do_MetadataPlot(from_df = TRUE,\n                              df = metadata,\n                              legend.position = \"right\",\n                              legend.ncol = 1,\n                              colors.use = colors.use,\n                              axis.text.face = \"plain\", \n                              font.size = 12, \n                              legend.font.size = 12, \n                              legend.symbol.size = 4) &\n       ggplot2::ylab(\"\")"
  },
  {
    "objectID": "viz/figures_figure_1B.html",
    "href": "viz/figures_figure_1B.html",
    "title": "Figure 1B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\n\n# Colors to use.\ncluster_cols &lt;- c(\"Oligo program\" = \"#043362\",                  \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro program\" = \"#9A031E\",                  \n                  \"Excluded\" = \"#4D6880\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"labelling\",\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2)"
  },
  {
    "objectID": "viz/figures_figure_1C.html",
    "href": "viz/figures_figure_1C.html",
    "title": "Figure 1C",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\n\ncluster_cols &lt;- c(\"Oligo program\" = \"#043362\",                  \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro program\" = \"#9A031E\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"labelling\",\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2)"
  },
  {
    "objectID": "viz/figures_figure_1D.html",
    "href": "viz/figures_figure_1D.html",
    "title": "Figure 1D",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nscale.grade &lt;- c(\"Grade 2\" = \"#1a7d9e\",\n                 \"Grade 3\" = \"#9e1a3b\",\n                 \"Grade 4\" = \"#576e12\")\n\nscale.ident &lt;- c(\"IDH_ACB_AD_540\" = \"#E07A5F\",\n                 \"IDH_ACB_AD_809\" = \"#F2CC8F\",\n                 \"IDH_ACB_AD_883\" = \"#DAA82B\",\n                 \"IDH_NCH2111\"    = \"#81B29A\",\n                 \"IDH_NCH536\"     = \"#3E745E\",\n                 \"IDH_NCH6341\"    = \"#5CADC1\",\n                 \"IDH_NCH6702\"    = \"#8B6BB8\",\n                 \"IDH_NCH781\"     = \"#3D405B\",\n                 \"IDH_ACB_AD_785\" = \"#ae2012\",\n                 \"IDH_ACB_AD_832\" = \"#ca6702\",\n                 \"IDH_ACB_AD_865\" = \"#ee9b00\",\n                 \"IDH_NCH2018\"    = \"#e9d8a6\",\n                 \"IDH_NCH2157\"    = \"#457b9d\",\n                 \"IDH_NCH2164\"    = \"#1d3557\")\n\nscale.subtype.short &lt;- c(\"AS\" = \"#b38b14\",\n                         \"OD\" = \"#3c5b8b\")\n\n# Load data.\nsample.oligo &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsign.scores &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/oligodendroglioma_sign_scores.rds\")\ncorr &lt;- stats::cor(sign.scores)\nnames(corr) &lt;- stringr::str_replace_all(colnames(corr), \"\\\\.\", \"-\")\n\n# Perform hclust.\nclust &lt;- hclust(stats::dist(corr %&gt;% as.data.frame()))\norder.use &lt;- colnames(corr)[clust$order]\n\n\ndata.use &lt;- corr %&gt;% \n            as.data.frame() %&gt;% \n            tibble::rownames_to_column(var = \"Source\") %&gt;% \n            tidyr::pivot_longer(cols = -dplyr::all_of(c(\"Source\")),\n                                names_to = \"Target\",\n                                values_to = \"Corr_score\") %&gt;% \n            dplyr::mutate(\"Corr_score\" = ifelse(.data$Corr_score == 1, NA, .data$Corr_score)) %&gt;% \n            dplyr::mutate(\"Patient\" = sapply(.data$Source, function(x){stringr::str_split(x, \"\\\\.\")[[1]][2]})) %&gt;% \n            dplyr::mutate(\"Target\" = factor(.data$Target, levels = rev(order.use)),\n                          \"Source\" = factor(.data$Source, levels = order.use))\n\n\ndata.patient &lt;- data.use %&gt;% \n                dplyr::select(-dplyr::all_of(c(\"Corr_score\", \"Target\"))) %&gt;% \n                dplyr::group_by(.data$Source) %&gt;% \n                dplyr::summarise(\"Patient\" = unique(.data$Patient)) %&gt;% \n                dplyr::mutate(\"Source\" = factor(.data$Source, levels = order.use))\n\ndata.grade &lt;- data.use %&gt;% \n              dplyr::left_join(y = {sample.oligo@meta.data %&gt;% \n                                    dplyr::select(dplyr::all_of(c(\"orig.ident\", \"grade\"))) %&gt;% \n                                    dplyr::mutate(\"Patient\" = sapply(.data$orig.ident, function(x){stringr::str_split(x, \"-\")[[1]][2]})) %&gt;% \n                                    dplyr::select(-dplyr::all_of(\"orig.ident\")) %&gt;% \n                                    tibble::as_tibble()},\n                               by = \"Patient\",\n                               relationship = \"many-to-many\") %&gt;% \n              dplyr::select(-dplyr::all_of(c(\"Patient\", \"Corr_score\", \"Target\"))) %&gt;% \n              dplyr::group_by(.data$Source) %&gt;% \n              dplyr::summarise(\"Grade\" = unique(.data$grade)) %&gt;% \n              dplyr::mutate(\"Source\" = factor(.data$Source, levels = order.use))\n\nlimits &lt;- c(min(data.use$Corr_score, na.rm = TRUE),\n            max(data.use$Corr_score, na.rm = TRUE))\n\nscale.setup &lt;- SCpubr:::compute_scales(sample = NULL,\n                                       feature = NULL,\n                                       assay = NULL,\n                                       reduction = NULL,\n                                       slot = NULL,\n                                       number.breaks = 5,\n                                       min.cutoff = NA,\n                                       max.cutoff = NA,\n                                       flavor = \"Seurat\",\n                                       enforce_symmetry = TRUE,\n                                       from_data = TRUE,\n                                       limits.use = limits)\n\np.main &lt;- data.use %&gt;% \n          ggplot2::ggplot(mapping = ggplot2::aes(x = .data$Source,\n                                                 y = .data$Target, \n                                                 fill = .data$Corr_score)) +\n          ggplot2::geom_tile(color = \"white\", linewidth = 0, na.rm = TRUE) +\n          ggplot2::scale_y_discrete(expand = c(0, 0), position = \"right\") +\n          ggplot2::scale_x_discrete(expand = c(0, 0),\n                                    position = \"top\") + \n          ggplot2::coord_equal() +\n          ggplot2::scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 11, name = \"RdBu\")),\n                                        na.value = \"grey75\",\n                                        name = \"P. Corr.\",\n                                        breaks = scale.setup$breaks,\n                                        labels = scale.setup$labels,\n                                        limits = scale.setup$limits)\n\np.main &lt;- SCpubr:::modify_continuous_legend(p = p.main,\n                                            legend.title = \"P. Corr.\",\n                                            legend.aes = \"fill\",\n                                            legend.type = \"colorbar\",\n                                            legend.position = \"bottom\",\n                                            legend.length = 6,\n                                            legend.width = 0.25,\n                                            legend.framecolor = \"grey50\",\n                                            legend.tickcolor = \"white\",\n                                            legend.framewidth = 0.2,\n                                            legend.tickwidth = 0.2)\n\n        \np.main &lt;- p.main +\n          ggplot2::theme_minimal(base_size = 12) +\n          ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_blank(),\n                         axis.ticks.x.top = ggplot2::element_blank(),\n                         axis.ticks.y.left = ggplot2::element_blank(),\n                         axis.ticks.y.right = ggplot2::element_blank(),\n                         axis.text.y.left = ggplot2::element_blank(),\n                         axis.text.y.right = ggplot2::element_blank(),\n                         axis.text.x.top = ggplot2::element_blank(),\n                         axis.text.x.bottom = ggplot2::element_blank(),\n                         axis.title.x.bottom = ggplot2::element_blank(),\n                         axis.title.x.top = ggplot2::element_blank(),\n                         axis.title.y.right = ggplot2::element_blank(),\n                         axis.title.y.left = ggplot2::element_blank(),\n                         axis.line = ggplot2::element_blank(),\n                         plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                         plot.subtitle = ggplot2::element_text(hjust = 0),\n                         plot.caption = ggplot2::element_text(hjust = 1),\n                         plot.title.position = \"plot\",\n                         panel.grid = ggplot2::element_blank(),\n                         panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 0.1),\n                         text = ggplot2::element_text(family = \"sans\"),\n                         plot.caption.position = \"plot\",\n                         legend.key.size = ggplot2::unit(0.2, 'cm'),\n                         legend.title = ggplot2::element_text(face = \"bold\", size = 12),\n                         legend.text = ggplot2::element_text(size = 12),\n                         legend.justification = \"center\",\n                         plot.margin = ggplot2::margin(t = 1, r = 10, b = 0, l = 10),\n                         panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 0.5),\n                         panel.grid.major = ggplot2::element_blank(),\n                         legend.position = \"bottom\",\n                         plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                         panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                         legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n\n\np.orig &lt;- data.patient %&gt;% \n          dplyr::mutate(\"Patient_title\" = \"Patient\") %&gt;% \n          ggplot2::ggplot(mapping = ggplot2::aes(x = .data$Source,\n                                                 y = .data$Patient_title, \n                                                 fill = .data$Patient)) +\n          ggplot2::geom_tile(color = \"white\", linewidth = 0, na.rm = TRUE) +\n          ggplot2::scale_y_discrete(expand = c(0, 0), position = \"right\") +\n          ggplot2::scale_x_discrete(expand = c(0, 0),\n                                    position = \"top\") + \n          ggplot2::coord_equal() +\n          ggplot2::scale_fill_manual(values = scale.ident) +\n          ggplot2::guides(fill = ggplot2::guide_legend(title.position = \"top\", title.hjust = 0.5, ncol = 2)) +\n          ggplot2::theme_minimal(base_size = 12) +\n          ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_blank(),\n                         axis.ticks.x.top = ggplot2::element_blank(),\n                         axis.ticks.y.left = ggplot2::element_blank(),\n                         axis.ticks.y.right = ggplot2::element_line(color = \"black\"),\n                         axis.text.y.left = ggplot2::element_blank(),\n                         axis.text.y.right = ggplot2::element_text(face = \"bold\", color = \"black\"),\n                         axis.text.x.top = ggplot2::element_blank(),\n                         axis.text.x.bottom = ggplot2::element_blank(),\n                         axis.title.x.bottom = ggplot2::element_blank(),\n                         axis.title.x.top = ggplot2::element_blank(),\n                         axis.title.y.right = ggplot2::element_blank(),\n                         axis.title.y.left = ggplot2::element_blank(),\n                         axis.line = ggplot2::element_blank(),\n                         plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                         plot.subtitle = ggplot2::element_text(hjust = 0),\n                         plot.caption = ggplot2::element_text(hjust = 1),\n                         plot.title.position = \"plot\",\n                         panel.grid = ggplot2::element_blank(),\n                         panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 0.1),\n                         text = ggplot2::element_text(family = \"sans\"),\n                         plot.caption.position = \"plot\",\n                         legend.justification = \"center\",\n                         legend.key.size = ggplot2::unit(0.2, 'cm'),\n                         legend.title = ggplot2::element_text(face = \"bold\", size = 12),\n                         legend.text = ggplot2::element_text(size = 12),\n                         plot.margin = ggplot2::margin(t = 0, r = 10, b = 0.75, l = 10),\n                         panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 0.5),\n                         panel.grid.major = ggplot2::element_blank(),\n                         legend.position = \"bottom\",\n                         plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                         panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                         legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n\n\np.grade &lt;- data.grade %&gt;% \n           dplyr::mutate(\"Grade_title\" = \"Grade\") %&gt;% \n           ggplot2::ggplot(mapping = ggplot2::aes(x = .data$Source,\n                                                  y = .data$Grade_title, \n                                                  fill = .data$Grade)) +\n           ggplot2::geom_tile(color = \"white\", linewidth = 0, na.rm = TRUE) +\n           ggplot2::scale_y_discrete(expand = c(0, 0), position = \"right\") +\n           ggplot2::scale_x_discrete(expand = c(0, 0),\n                                     position = \"top\") + \n           ggplot2::coord_equal() +\n           ggplot2::scale_fill_manual(values = scale.grade) +\n           ggplot2::guides(fill = ggplot2::guide_legend(title.position = \"top\", title.hjust = 0.5, ncol = 1)) +\n           ggplot2::theme_minimal(base_size = 12) +\n           ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_blank(),\n                          axis.ticks.x.top = ggplot2::element_blank(),\n                          axis.ticks.y.left = ggplot2::element_blank(),\n                          axis.ticks.y.right = ggplot2::element_line(color = \"black\"),\n                          axis.text.y.left = ggplot2::element_blank(),\n                          axis.text.y.right = ggplot2::element_text(face = \"bold\", color = \"black\"),\n                          axis.text.x.top = ggplot2::element_blank(),\n                          axis.text.x.bottom = ggplot2::element_blank(),\n                          axis.title.x.bottom = ggplot2::element_blank(),\n                          axis.title.x.top = ggplot2::element_blank(),\n                          axis.title.y.right = ggplot2::element_blank(),\n                          axis.title.y.left = ggplot2::element_blank(),\n                          axis.line = ggplot2::element_blank(),\n                          plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                          plot.subtitle = ggplot2::element_text(hjust = 0),\n                          plot.caption = ggplot2::element_text(hjust = 1),\n                          plot.title.position = \"plot\",\n                          panel.grid = ggplot2::element_blank(),\n                          panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 0.1),\n                          text = ggplot2::element_text(family = \"sans\"),\n                          plot.caption.position = \"plot\",\n                          legend.justification = \"center\",\n                          legend.key.size = ggplot2::unit(0.2, 'cm'),\n                          legend.title = ggplot2::element_text(face = \"bold\", size = 12),\n                          legend.text = ggplot2::element_text(size = 12),\n                          plot.margin = ggplot2::margin(t = 0, r = 10, b = 0.75, l = 10),\n                          panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 0.5),\n                          panel.grid.major = ggplot2::element_blank(),\n                          legend.position = \"bottom\",\n                          plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                          panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                          legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n\n\ndesign &lt;- \"A\n           B\n           C\"\n\np &lt;- patchwork::wrap_plots(A = p.grade,\n                           B = p.orig,\n                           C = p.main,\n                           design = design, guides = \"collect\") + \n     patchwork::plot_annotation(theme = ggplot2::theme(legend.position = \"bottom\"))"
  },
  {
    "objectID": "viz/figures_figure_1E.html",
    "href": "viz/figures_figure_1E.html",
    "title": "Figure 1E",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nscale.grade &lt;- c(\"Grade 2\" = \"#1a7d9e\",\n                 \"Grade 3\" = \"#9e1a3b\",\n                 \"Grade 4\" = \"#576e12\")\n\nscale.subtype.short &lt;- c(\"AS\" = \"#b38b14\",\n                         \"OD\" = \"#3c5b8b\")\n\nscale.ident &lt;- c(\"IDH_ACB_AD_540\" = \"#E07A5F\",\n                 \"IDH_ACB_AD_809\" = \"#F2CC8F\",\n                 \"IDH_ACB_AD_883\" = \"#DAA82B\",\n                 \"IDH_NCH2111\"    = \"#81B29A\",\n                 \"IDH_NCH536\"     = \"#3E745E\",\n                 \"IDH_NCH6341\"    = \"#5CADC1\",\n                 \"IDH_NCH6702\"    = \"#8B6BB8\",\n                 \"IDH_NCH781\"     = \"#3D405B\",\n                 \"IDH_ACB_AD_785\" = \"#ae2012\",\n                 \"IDH_ACB_AD_832\" = \"#ca6702\",\n                 \"IDH_ACB_AD_865\" = \"#ee9b00\",\n                 \"IDH_NCH2018\"    = \"#e9d8a6\",\n                 \"IDH_NCH2157\"    = \"#457b9d\",\n                 \"IDH_NCH2164\"    = \"#1d3557\")\n\n\n# Load data.\nsample.astro &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\nsign.scores &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/astrocytomas_sign_scores.rds\")\ncorr &lt;- stats::cor(sign.scores)\nnames(corr) &lt;- stringr::str_replace_all(colnames(corr), \"\\\\.\", \"-\")\n\n# Perform hclust.\nclust &lt;- hclust(stats::dist(corr %&gt;% as.data.frame()))\norder.use &lt;- colnames(corr)[clust$order]\n\n\ndata.use &lt;- corr %&gt;% \n            as.data.frame() %&gt;% \n            tibble::rownames_to_column(var = \"Source\") %&gt;% \n            tidyr::pivot_longer(cols = -dplyr::all_of(c(\"Source\")),\n                                names_to = \"Target\",\n                                values_to = \"Corr_score\") %&gt;% \n            dplyr::mutate(\"Corr_score\" = ifelse(.data$Corr_score == 1, NA, .data$Corr_score)) %&gt;% \n            dplyr::mutate(\"Patient\" = sapply(.data$Source, function(x){stringr::str_split(x, \"\\\\.\")[[1]][2]})) %&gt;% \n            dplyr::mutate(\"Target\" = factor(.data$Target, levels = rev(order.use)),\n                          \"Source\" = factor(.data$Source, levels = order.use))\n\ndata.patient &lt;- data.use %&gt;% \n                dplyr::select(-dplyr::all_of(c(\"Corr_score\", \"Target\"))) %&gt;% \n                dplyr::group_by(.data$Source) %&gt;% \n                dplyr::summarise(\"Patient\" = unique(.data$Patient)) %&gt;% \n                dplyr::mutate(\"Source\" = factor(.data$Source, levels = order.use))\n\ndata.grade &lt;- data.use %&gt;% \n              dplyr::left_join(y = {sample.astro@meta.data %&gt;% \n                                    dplyr::select(dplyr::all_of(c(\"orig.ident\", \"grade\"))) %&gt;% \n                                    dplyr::mutate(\"Patient\" = sapply(.data$orig.ident, function(x){stringr::str_split(x, \"-\")[[1]][2]})) %&gt;% \n                                    dplyr::select(-dplyr::all_of(\"orig.ident\")) %&gt;% \n                                    tibble::as_tibble()},\n                               by = \"Patient\",\n                               relationship = \"many-to-many\") %&gt;% \n              dplyr::select(-dplyr::all_of(c(\"Patient\", \"Corr_score\", \"Target\"))) %&gt;% \n              dplyr::group_by(.data$Source) %&gt;% \n              dplyr::summarise(\"Grade\" = unique(.data$grade)) %&gt;% \n              dplyr::mutate(\"Source\" = factor(.data$Source, levels = order.use))\n\nlimits &lt;- c(min(data.use$Corr_score, na.rm = TRUE),\n            max(data.use$Corr_score, na.rm = TRUE))\n\nscale.setup &lt;- SCpubr:::compute_scales(sample = NULL,\n                                       feature = NULL,\n                                       assay = NULL,\n                                       reduction = NULL,\n                                       slot = NULL,\n                                       number.breaks = 5,\n                                       min.cutoff = NA,\n                                       max.cutoff = NA,\n                                       flavor = \"Seurat\",\n                                       enforce_symmetry = TRUE,\n                                       from_data = TRUE,\n                                       limits.use = limits)\n\np.main &lt;- data.use %&gt;% \n          ggplot2::ggplot(mapping = ggplot2::aes(x = .data$Source,\n                                                 y = .data$Target, \n                                                 fill = .data$Corr_score)) +\n          ggplot2::geom_tile(color = \"white\", linewidth = 0, na.rm = TRUE) +\n          ggplot2::scale_y_discrete(expand = c(0, 0), position = \"right\") +\n          ggplot2::scale_x_discrete(expand = c(0, 0),\n                                    position = \"top\") + \n          ggplot2::coord_equal() +\n          ggplot2::scale_fill_gradientn(colors = rev(RColorBrewer::brewer.pal(n = 11, name = \"RdBu\")),\n                                        na.value = \"grey75\",\n                                        name = \"P. Corr.\",\n                                        breaks = scale.setup$breaks,\n                                        labels = scale.setup$labels,\n                                        limits = scale.setup$limits)\n\np.main &lt;- SCpubr:::modify_continuous_legend(p = p.main,\n                                            legend.title = \"P. Corr.\",\n                                            legend.aes = \"fill\",\n                                            legend.type = \"colorbar\",\n                                            legend.position = \"bottom\",\n                                            legend.length = 6,\n                                            legend.width = 0.25,\n                                            legend.framecolor = \"grey50\",\n                                            legend.tickcolor = \"white\",\n                                            legend.framewidth = 0.2,\n                                            legend.tickwidth = 0.2)\n\n        \np.main &lt;- p.main +\n          ggplot2::theme_minimal(base_size = 12) +\n          ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_blank(),\n                         axis.ticks.x.top = ggplot2::element_blank(),\n                         axis.ticks.y.left = ggplot2::element_blank(),\n                         axis.ticks.y.right = ggplot2::element_blank(),\n                         axis.text.y.left = ggplot2::element_blank(),\n                         axis.text.y.right = ggplot2::element_blank(),\n                         axis.text.x.top = ggplot2::element_blank(),\n                         axis.text.x.bottom = ggplot2::element_blank(),\n                         axis.title.x.bottom = ggplot2::element_blank(),\n                         axis.title.x.top = ggplot2::element_blank(),\n                         axis.title.y.right = ggplot2::element_blank(),\n                         axis.title.y.left = ggplot2::element_blank(),\n                         axis.line = ggplot2::element_blank(),\n                         plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                         plot.subtitle = ggplot2::element_text(hjust = 0),\n                         plot.caption = ggplot2::element_text(hjust = 1),\n                         plot.title.position = \"plot\",\n                         panel.grid = ggplot2::element_blank(),\n                         panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 0),\n                         text = ggplot2::element_text(family = \"sans\"),\n                         plot.caption.position = \"plot\",\n                         legend.key.size = ggplot2::unit(0.2, 'cm'),\n                         legend.title = ggplot2::element_text(face = \"bold\", size = 12),\n                         legend.text = ggplot2::element_text(size = 12),\n                         legend.justification = \"center\",\n                         plot.margin = ggplot2::margin(t = 1, r = 10, b = 0, l = 10),\n                         panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 0.5),\n                         panel.grid.major = ggplot2::element_blank(),\n                         legend.position = \"bottom\",\n                         plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                         panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                         legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n\n\np.orig &lt;- data.patient %&gt;% \n          dplyr::mutate(\"Patient_title\" = \"Patient\") %&gt;% \n          ggplot2::ggplot(mapping = ggplot2::aes(x = .data$Source,\n                                                 y = .data$Patient_title, \n                                                 fill = .data$Patient)) +\n          ggplot2::geom_tile(color = \"white\", linewidth = 0, na.rm = TRUE) +\n          ggplot2::scale_y_discrete(expand = c(0, 0), position = \"right\") +\n          ggplot2::scale_x_discrete(expand = c(0, 0),\n                                    position = \"top\") + \n          ggplot2::coord_equal() +\n          ggplot2::scale_fill_manual(values = scale.ident) +\n          ggplot2::guides(fill = ggplot2::guide_legend(title.position = \"top\", title.hjust = 0.5, ncol = 2)) +\n          ggplot2::theme_minimal(base_size = 12) +\n          ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_blank(),\n                         axis.ticks.x.top = ggplot2::element_blank(),\n                         axis.ticks.y.left = ggplot2::element_blank(),\n                         axis.ticks.y.right = ggplot2::element_line(color = \"black\"),\n                         axis.text.y.left = ggplot2::element_blank(),\n                         axis.text.y.right = ggplot2::element_text(face = \"bold\", color = \"black\"),\n                         axis.text.x.top = ggplot2::element_blank(),\n                         axis.text.x.bottom = ggplot2::element_blank(),\n                         axis.title.x.bottom = ggplot2::element_blank(),\n                         axis.title.x.top = ggplot2::element_blank(),\n                         axis.title.y.right = ggplot2::element_blank(),\n                         axis.title.y.left = ggplot2::element_blank(),\n                         axis.line = ggplot2::element_blank(),\n                         plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                         plot.subtitle = ggplot2::element_text(hjust = 0),\n                         plot.caption = ggplot2::element_text(hjust = 1),\n                         plot.title.position = \"plot\",\n                         panel.grid = ggplot2::element_blank(),\n                         panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 0),\n                         text = ggplot2::element_text(family = \"sans\"),\n                         plot.caption.position = \"plot\",\n                         legend.justification = \"center\",\n                         legend.key.size = ggplot2::unit(0.2, 'cm'),\n                         legend.title = ggplot2::element_text(face = \"bold\", size = 12),\n                         legend.text = ggplot2::element_text(size = 12),\n                         plot.margin = ggplot2::margin(t = 0, r = 10, b = 0.75, l = 10),\n                         panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 0.5),\n                         panel.grid.major = ggplot2::element_blank(),\n                         legend.position = \"bottom\",\n                         plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                         panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                         legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n\n\np.grade &lt;- data.grade %&gt;% \n           dplyr::mutate(\"Grade_title\" = \"Grade\") %&gt;% \n           ggplot2::ggplot(mapping = ggplot2::aes(x = .data$Source,\n                                                  y = .data$Grade_title, \n                                                  fill = .data$Grade)) +\n           ggplot2::geom_tile(color = \"white\", linewidth = 0, na.rm = TRUE) +\n           ggplot2::scale_y_discrete(expand = c(0, 0), position = \"right\") +\n           ggplot2::scale_x_discrete(expand = c(0, 0),\n                                     position = \"top\") + \n           ggplot2::coord_equal() +\n           ggplot2::scale_fill_manual(values = scale.grade) +\n           ggplot2::guides(fill = ggplot2::guide_legend(title.position = \"top\", title.hjust = 0.5, ncol = 1)) +\n           ggplot2::theme_minimal(base_size = 12) +\n           ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_blank(),\n                          axis.ticks.x.top = ggplot2::element_blank(),\n                          axis.ticks.y.left = ggplot2::element_blank(),\n                          axis.ticks.y.right = ggplot2::element_line(color = \"black\"),\n                          axis.text.y.left = ggplot2::element_blank(),\n                          axis.text.y.right = ggplot2::element_text(face = \"bold\", color = \"black\"),\n                          axis.text.x.top = ggplot2::element_blank(),\n                          axis.text.x.bottom = ggplot2::element_blank(),\n                          axis.title.x.bottom = ggplot2::element_blank(),\n                          axis.title.x.top = ggplot2::element_blank(),\n                          axis.title.y.right = ggplot2::element_blank(),\n                          axis.title.y.left = ggplot2::element_blank(),\n                          axis.line = ggplot2::element_blank(),\n                          plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                          plot.subtitle = ggplot2::element_text(hjust = 0),\n                          plot.caption = ggplot2::element_text(hjust = 1),\n                          plot.title.position = \"plot\",\n                          panel.grid = ggplot2::element_blank(),\n                          panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 0),\n                          text = ggplot2::element_text(family = \"sans\"),\n                          plot.caption.position = \"plot\",\n                          legend.justification = \"center\",\n                          legend.key.size = ggplot2::unit(0.2, 'cm'),\n                          legend.title = ggplot2::element_text(face = \"bold\", size = 12),\n                          legend.text = ggplot2::element_text(size = 12),\n                          plot.margin = ggplot2::margin(t = 0, r = 10, b = 0.75, l = 10),\n                          panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 0.5),\n                          panel.grid.major = ggplot2::element_blank(),\n                          legend.position = \"bottom\",\n                          plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                          panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                          legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n\n\ndesign &lt;- \"A\n           B\n           C\"\n\np &lt;- patchwork::wrap_plots(A = p.grade,\n                           B = p.orig,\n                           C = p.main,\n                           design = design, guides = \"collect\") + \n     patchwork::plot_annotation(theme = ggplot2::theme(legend.position = \"bottom\"))"
  },
  {
    "objectID": "viz/figures_figure_1F.html",
    "href": "viz/figures_figure_1F.html",
    "title": "Figure 1F",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Load samples.\nsample.oligo &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsample.astro &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\n\nsample.oligo$relabelling[sample.oligo$relabelling == \"RA\"] &lt;- \"RE\"\nsample.astro$relabelling[sample.astro$relabelling == \"RA\"] &lt;- \"RE\"\n\nSeurat::Idents(sample.oligo) &lt;- sample.oligo$relabelling\nSeurat::Idents(sample.astro) &lt;- sample.astro$relabelling\n\n\n# Subset tumor entities.\nsample.oligo &lt;- sample.oligo[, sample.oligo$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"Gradient\", \"RE\", \"Cycling\")]\nsample.astro &lt;- sample.astro[, sample.astro$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"Gradient\", \"RE\", \"Cycling\")]\n\n\n\nCode# Manually picked features from the NMF metaprograms.\nfeatures &lt;- list(\"Astro-like\" = c(\"NRG3\", \"ADGRV1\", \"SLC4A4\", \"SPARCL1\", \"ADCY2\"),\n                 \"Cycling\" = c(\"MKI67\", \"CENPK\", \"EZH2\", \"POLQ\", \"EGFR\"),\n                 \"OPC-like\" = c(\"OPCML\", \"DSCAM\", \"FGF12\", \"SOX6\", \"DLGAP1\"),\n                 \"RE\" = c(\"EEF2\", \"EEF1A1\", \"OLIG1\", \"ETV1\", \"RPL13\"))\n\nsample.oligo$relabelling &lt;- factor(sample.oligo$relabelling,\n                                   levels = rev(c(\"Astro-like\",\n                                                  \"Cycling\",\n                                                  \"Gradient\",\n                                                  \"OPC-like\",\n                                                  \"RE\")))\n\nsample.astro$relabelling &lt;- factor(sample.astro$relabelling,\n                                   levels = rev(c(\"Astro-like\",\n                                                  \"Cycling\",\n                                                  \"Gradient\",\n                                                  \"OPC-like\",\n                                                  \"RE\")))\np1 &lt;- SCpubr::do_DotPlot(sample.oligo,\n                         features = features,\n                         group.by = \"relabelling\",\n                         assay = \"SCT\",\n                         legend.title = \"OD | Avg. Exp.\",\n                         legend.length = 8,\n                         legend.width = 0.5,\n                         legend.framecolor = \"grey50\",\n                         legend.tickcolor = \"white\",\n                         legend.framewidth = 0.2,\n                         legend.tickwidth = 0.2,\n                         dot.scale = 10,\n                         font.size = 20,\n                         axis.text.face = \"plain\") + \n      ggplot2::ylab(\"OD\") + \n      ggplot2::theme(axis.text.x.bottom = ggplot2::element_blank(),\n                     axis.ticks.x.bottom = ggplot2::element_blank(),\n                     axis.line.x.bottom = ggplot2::element_blank(),\n                     strip.background = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 5, l = 10))\n\np2 &lt;- SCpubr::do_DotPlot(sample.astro,\n                         features = features,\n                         group.by = \"relabelling\",\n                         assay = \"SCT\",\n                         sequential.palette = \"YlOrRd\",\n                         legend.title = \"AS | Avg. Exp.\",\n                         legend.length = 8,\n                         legend.width = 0.5,\n                         legend.framecolor = \"grey50\",\n                         legend.tickcolor = \"white\",\n                         legend.framewidth = 0.2,\n                         legend.tickwidth = 0.2,\n                         dot.scale = 10,\n                         font.size = 20,\n                         axis.text.face = \"plain\") + \n      ggplot2::ylab(\"AS\") + \n      ggplot2::theme(strip.background = ggplot2::element_blank(),\n                     strip.text.x.top = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np1$guides$size$title &lt;- \"OD | Pct. Exp.\"\np2$guides$size$title &lt;- \"AS | Pct. Exp.\"\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = patchwork::guide_area(),\n                           design = \"A\n                                     B\n                                     C\",\n                           guides = \"collect\") + \n     patchwork::plot_annotation(theme = ggplot2::theme(legend.position = \"bottom\"))"
  },
  {
    "objectID": "viz/figures_figure_1G.html",
    "href": "viz/figures_figure_1G.html",
    "title": "Figure 1G",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\n\n# Colors to use.\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCode# Identities to plot.\nidents.keep &lt;- c(\"OPC-like\", \"Astro-like\", \"RE\", \"Gradient\", \"Cycling\")\n\np &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"relabelling\",\n                        idents.keep = idents.keep,\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2,\n                        na.value = \"grey50\")"
  },
  {
    "objectID": "viz/figures_figure_1H.html",
    "href": "viz/figures_figure_1H.html",
    "title": "Figure 1H",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\n\nsample$relabelling &lt;- as.character(sample$relabelling)\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCode# Identities to plot.\nidents.keep &lt;- c(\"OPC-like\", \"Astro-like\", \"RE\", \"Gradient\", \"Cycling\")\n\np &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"relabelling\",\n                        idents.keep = idents.keep,\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2,\n                        na.value = \"grey50\")"
  },
  {
    "objectID": "viz/figures_figure_1I.html",
    "href": "viz/figures_figure_1I.html",
    "title": "Figure 1I",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Load samples.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_LGGs.rds\")\n\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Cycling\" = \"#5F0F40\")\n\nidents.keep &lt;- c(\"OPC-like\", \"Astro-like\", \"RE\", \"Gradient\", \"Cycling\")\nsample &lt;- sample[, sample$relabelling %in% idents.keep]\n\n\n\nCodep0 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$subtype == \"Oligodendroglioma\"],\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         facet.by = \"subtype\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = TRUE,\n                         order.by = \"RE\",\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"OD\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10)) \n\np1 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$subtype == \"Astrocytoma\"],\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         facet.by = \"subtype\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = TRUE,\n                         order.by = \"RE\",\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"AS\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10)) \n\np2 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"relabelling\",\n                         split.by = \"grade\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         legend.title = \"\",\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5,\n                         legend.ncol = 5) +\n      ggplot2::xlab(\"Grade\") +\n      ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 30, b = 0, l = 10))\n\nlayout &lt;- paste(c(rep(\"A\", 8), rep(\"B\", 6), rep(\"C\", 2), \"D\"), collapse = \"\\n\")\n\np &lt;- patchwork::wrap_plots(A = p0,\n                           B = p1,\n                           C = p2,\n                           D = patchwork::guide_area(),\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_1L.html",
    "href": "viz/figures_figure_1L.html",
    "title": "Figure 1L",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Load samples.\ndata &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/data_1L.rds\")\n\n\n\nCodep1 &lt;- data[data$Marker == \"EEF1A1\", ] %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(y = forcats::fct_rev(.data$Type),\n                                             x = .data$Score)) + \n      ggplot2::geom_boxplot(na.rm = TRUE)  +\n      ggbeeswarm::geom_beeswarm(size = 2, \n                                color = \"black\", \n                                fill = \"white\", \n                                shape = 21, \n                                stroke = 0.5, \n                                cex = 2, \n                                na.rm = TRUE) + \n      ggsignif::geom_signif(test = \"wilcox.test\", \n                            comparisons = list(c(\"Oligodendroglioma grade 2\", \"Astrocytoma grade 2\")), \n                            map_signif_level = TRUE, \n                            margin_top = 0.25, \n                            na.rm = TRUE, \n                            size = 0.5, \n                            textsize = 8) + \n      ggplot2::labs(y = \"\", \n                    x = \"\", \n                    title = \"EEF1A1\") + \n      ggplot2::theme_minimal(base_size = 18) +\n      ggplot2::scale_x_continuous(limits = c(0, 5)) + \n      ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\",\n                                                        hjust = 0.5,\n                                                        vjust = 0),\n                     plot.subtitle = ggplot2::element_text(face = \"bold\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     plot.title.position = \"panel\",\n                     plot.caption.position = \"plot\",\n                     text = ggplot2::element_text(family = \"sans\"),\n                     legend.justification = \"center\",\n                     legend.position = \"bottom\",\n                     axis.title.x = ggplot2::element_text(color = \"black\", face = \"bold\", hjust = 0.5),\n                     axis.title.y.left = ggplot2::element_text(color = \"black\", face = \"bold\", angle = 90),\n                     axis.title.y.right = ggplot2::element_blank(),\n                     axis.text.y.left = ggplot2::element_text(color = \"black\",\n                                                               face = \"plain\"),\n                     axis.text.y.right = ggplot2::element_blank(),\n                     axis.ticks.x.bottom = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.y.right = ggplot2::element_blank(),\n                     axis.ticks.y.left = ggplot2::element_line(color = \"black\"),\n                     axis.text.x.bottom = ggplot2::element_text(color = \"black\",\n                                                         face = \"plain\",\n                                                         angle = SCpubr:::get_axis_parameters(angle = 45, flip = TRUE)[[\"angle\"]],\n                                                         hjust = SCpubr:::get_axis_parameters(angle = 45, flip = TRUE)[[\"hjust\"]],\n                                                         vjust = SCpubr:::get_axis_parameters(angle = 45, flip = TRUE)[[\"vjust\"]]),\n                     strip.text.x = ggplot2::element_text(face = \"bold\",\n                                                          color = \"black\"),\n                     strip.text.y = ggplot2::element_blank(),\n                     panel.border = ggplot2::element_rect(color = \"black\", fill = NA),\n                     panel.grid = ggplot2::element_line(color = \"grey90\", linetype = \"dotted\"),\n                     plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 0),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"black\", linetype = \"solid\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n\n\np2 &lt;- data[data$Marker == \"EEF2\", ] %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(y = forcats::fct_rev(.data$Type),\n                                             x = .data$Score)) + \n      ggplot2::geom_boxplot(na.rm = TRUE)  +\n      ggbeeswarm::geom_beeswarm(size = 2, \n                                color = \"black\", \n                                fill = \"white\", \n                                shape = 21, \n                                stroke = 0.5, \n                                cex = 2, \n                                na.rm = TRUE) + \n      ggsignif::geom_signif(test = \"wilcox.test\", \n                            comparisons = list(c(\"Astrocytoma grade 2\", \"Astrocytoma grade 3\")), \n                            map_signif_level = TRUE, \n                            margin_top = 0.25, \n                            na.rm = TRUE, \n                            size = 0.5, \n                            textsize = 8) + \n      ggplot2::labs(y = \"\", x = \"\", title = \"EEF2\") + \n      ggplot2::theme_minimal(base_size = 18) +\n      ggplot2::scale_x_continuous(limits = c(0, 5)) + \n      ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\",\n                                                        hjust = 0.5,\n                                                        vjust = 0),\n                     plot.subtitle = ggplot2::element_text(face = \"bold\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     plot.title.position = \"panel\",\n                     plot.caption.position = \"plot\",\n                     text = ggplot2::element_text(family = \"sans\"),\n                     legend.justification = \"center\",\n                     legend.position = \"bottom\",\n                     axis.title.x = ggplot2::element_text(color = \"black\", face = \"bold\", hjust = 0.5),\n                     axis.title.y.left = ggplot2::element_text(color = \"black\", face = \"bold\", angle = 90),\n                     axis.title.y.right = ggplot2::element_blank(),\n                     axis.text.y.left = ggplot2::element_blank(),\n                     axis.text.y.right = ggplot2::element_blank(),\n                     axis.ticks.x.bottom = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.y.right = ggplot2::element_blank(),\n                     axis.ticks.y.left = ggplot2::element_blank(),\n                     axis.text.x.bottom = ggplot2::element_text(color = \"black\",\n                                                         face = \"plain\",\n                                                         angle = SCpubr:::get_axis_parameters(angle = 45, flip = TRUE)[[\"angle\"]],\n                                                         hjust = SCpubr:::get_axis_parameters(angle = 45, flip = TRUE)[[\"hjust\"]],\n                                                         vjust = SCpubr:::get_axis_parameters(angle = 45, flip = TRUE)[[\"vjust\"]]),\n                     strip.text.x = ggplot2::element_text(face = \"bold\",\n                                                          color = \"black\"),\n                     strip.text.y = ggplot2::element_blank(),\n                     panel.border = ggplot2::element_rect(color = \"black\", fill = NA),\n                     panel.grid = ggplot2::element_line(color = \"grey90\", linetype = \"dotted\"),\n                     plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 0),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"black\", linetype = \"solid\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n\np &lt;- patchwork::wrap_plots(A = p1, \n                           B = p2, \n                           design = \"AB\")"
  },
  {
    "objectID": "viz/figures_figure_2A.html",
    "href": "viz/figures_figure_2A.html",
    "title": "Figure 2A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_LGGs.rds\")\n\n# Define set of markers.\nmarkers.suva &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\n\nmarkers &lt;- list()\nmarkers$Stemness_program &lt;- markers.suva$Suva_Stemness_Program\nmarkers$Oligo_program &lt;- markers.suva$Suva_Oligo_Program\nmarkers$Astro_program &lt;- markers.suva$Suva_Astro_Program\n\ninput_gene_list &lt;- markers\n\n# Load diffusion analysis.\ndiff.map &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/diffusion_map_only_suva.rds\")\n\n# Set the diffusion analysis as a dimensional reduction of the seurat object.\nsample@reductions$diffusion &lt;- Seurat::CreateDimReducObject(embeddings = diff.map@eigenvectors[colnames(sample), ],\n                                                            key = \"DC_\",\n                                                            assay = \"SCT\")\n\n# Cluster colors.\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                 \n                  \"Cycling\" = \"#5F0F40\")\n\n\n# Exclude gradient for a better visualization.\nsample &lt;- sample[, sample$relabelling != \"Gradient\"]\nsample$Annotation &lt;- sample$relabelling\nsample$Annotation[sample$Annotation == \"RA\"] &lt;- \"RE\"\nsample$Annotation &lt;- factor(sample$Annotation, levels = c(\"Astro-like\", \"Cycling\", \"OPC-like\", \"RE\"))\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"diffusion\",\n                         colors.use = cluster_cols,\n                         group.by = \"Annotation\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         na.value = \"grey50\",\n                         axis.title.face = \"plain\")\n\nout &lt;- SCpubr::do_DiffusionMapPlot(sample = sample,  \n                                   input_gene_list = markers, \n                                   group.by = \"Annotation\", \n                                   colors.use = list(\"Annotation\" = cluster_cols), \n                                   flavor = \"Seurat\",\n                                   font.size = 20,\n                                   interpolate = FALSE,\n                                   main.heatmap.size = 0.80,\n                                   axis.text.face = \"plain\",\n                                   legend.ncol = 1,\n                                   legend.length = 12,\n                                   legend.width = 0.5,\n                                   legend.framecolor = \"grey50\",\n                                   legend.tickcolor = \"white\",\n                                   legend.framewidth = 0.2,\n                                   legend.tickwidth = 0.2,\n                                   axis.title.face = \"plain\")\np2 &lt;- out$DC_1\np3 &lt;- out$DC_2\np2$labels$x &lt;- \"DC 1\"\np3$labels$x &lt;- \"DC 2\"\np2$labels$y &lt;- \"Gene set\"\np3$labels$y &lt;- \"Gene set\"\np2$guides$fill$title &lt;- \"Enrichment\"\np3$guides$fill$title &lt;- \"Enrichment\"\np2[[1]]$guides$fill$title &lt;- \"\"\np3[[1]]$guides$fill$title &lt;- \"\"\np2[[2]] &lt;- p2[[2]] + ggplot2::theme(axis.title.y = ggplot2::element_text(angle = 90))\np3[[2]] &lt;- p3[[2]] + ggplot2::theme(axis.title.y = ggplot2::element_text(angle = 90))\np2 &lt;- p2 & ggplot2::theme(legend.key.size = ggplot2::unit(0.3, 'cm'))\np3 &lt;- p3 & ggplot2::theme(legend.key.size = ggplot2::unit(0.3, 'cm'))\np2 &lt;- p2 + patchwork::plot_annotation(theme = ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0)))\np3 &lt;- p3 + patchwork::plot_annotation(theme = ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0)))"
  },
  {
    "objectID": "viz/figures_figure_2B.html",
    "href": "viz/figures_figure_2B.html",
    "title": "Figure 2B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_LGGs.rds\")\n\n# Subset for the tumor cells.\nsample &lt;- sample[, sample$relabelling %in% c(\"Astro-like\", \"RA\", \"OPC-like\", \"Gradient\", \"Cycling\")]\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nsample$subtype[sample$subtype == \"Oligodendroglioma\"] &lt;- \"OD\"\nsample$subtype[sample$subtype == \"Astrocytoma\"] &lt;- \"AS\"\nsample$subtype = factor(sample$subtype, levels = c(\"OD\", \"AS\"))\n# Read in pathway activities.\nprogeny_activities &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_progeny.rds\")\n\n\n\nCodep &lt;- SCpubr::do_PathwayActivityPlot(sample = sample,\n                                    activities = progeny_activities,\n                                    slot = \"scale.data\",\n                                    split.by = \"subtype\",\n                                    group.by = c(\"relabelling\"),\n                                    min.cutoff = -1,\n                                    max.cutoff = 1,\n                                    flip = TRUE,\n                                    font.size = 17,\n                                    axis.text.face = \"plain\",\n                                    legend.length = 12,\n                                    legend.width = 0.5,\n                                    legend.framecolor = \"grey50\",\n                                    legend.tickcolor = \"white\",\n                                    legend.framewidth = 0.2,\n                                    legend.tickwidth = 0.2) + \n     ggplot2::ylab(\"Pathway\") +\n     ggplot2::xlab(\"Cell type\")\n\np$guides$fill$title &lt;- \"Pathway score\"\np &lt;- p + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))"
  },
  {
    "objectID": "viz/figures_figure_2C.html",
    "href": "viz/figures_figure_2C.html",
    "title": "Figure 2C",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_LGGs.rds\")\n\n# Subset tumor cells.\nsample &lt;- sample[, sample$relabelling %in% c(\"Astro-like\", \"RA\", \"OPC-like\", \"Gradient\", \"Cycling\")]\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nsample$subtype[sample$subtype == \"Oligodendroglioma\"] &lt;- \"OD\"\nsample$subtype[sample$subtype == \"Astrocytoma\"] &lt;- \"AS\"\nsample$subtype = factor(sample$subtype, levels = c(\"OD\", \"AS\"))\n# Read in TF activities.\ndorothea_activities &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_dorothea.rds\")\n\n\n\nCodep &lt;- SCpubr::do_TFActivityPlot(sample = sample,\n                               activities = dorothea_activities,\n                               n_tfs = 30,\n                               split.by = \"subtype\",\n                               group.by = c(\"relabelling\"),\n                               max.cutoff = 1, \n                               min.cutoff = -1,\n                               font.size = 17,\n                               axis.text.face = \"plain\",\n                               legend.length = 12,\n                               legend.width = 0.5,\n                               legend.framecolor = \"grey50\",\n                               legend.tickcolor = \"white\",\n                               legend.framewidth = 0.2,\n                               legend.tickwidth = 0.2) +\n     ggplot2::xlab(\"Regulon\") +\n     ggplot2::ylab(\"Cell type\")\n\np$guides$fill$title &lt;- \"Regulon score\"\np &lt;- p + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))"
  },
  {
    "objectID": "viz/figures_figure_2D.html",
    "href": "viz/figures_figure_2D.html",
    "title": "Figure 2D",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_OD.rds\")\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\n# Colors to use.\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",               \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"relabelling\",\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2,\n                        na.value = \"grey50\")"
  },
  {
    "objectID": "viz/figures_figure_2E.html",
    "href": "viz/figures_figure_2E.html",
    "title": "Figure 2E",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_AS.rds\")\n\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\n# Colors to use.\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",               \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"relabelling\",\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2,\n                        na.value = \"grey50\")"
  },
  {
    "objectID": "viz/figures_figure_2F.html",
    "href": "viz/figures_figure_2F.html",
    "title": "Figure 2F",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n\nsample.oligo &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_OD.rds\")\nsample.astro &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_AS.rds\")\n\nsample.oligo$relabelling[sample.oligo$relabelling == \"RA\"] &lt;- \"RE\"\nsample.astro$relabelling[sample.astro$relabelling == \"RA\"] &lt;- \"RE\"\n\n\nSeurat::Idents(sample.oligo) &lt;- sample.oligo$relabelling\nSeurat::Idents(sample.astro) &lt;- sample.astro$relabelling\n\n# Colors to use.\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",                 \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep0 &lt;- SCpubr::do_BarPlot(sample = sample.oligo,\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         facet.by = \"subtype\",\n                         font.size = 20,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = TRUE,\n                         order.by = \"RE\",\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"OD\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10)) \n\np1 &lt;- SCpubr::do_BarPlot(sample = sample.astro,\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         facet.by = \"subtype\",\n                         font.size = 20,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"bottom\",\n                         order = TRUE,\n                         order.by = \"RE\",\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5,\n                         legend.ncol = 2,\n                         legend.title = \"\") +\n      ggplot2::xlab(\"AS\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10)) \n\nlayout &lt;- paste(c(rep(\"A\", 4), rep(\"B\", 5), \"C\"), collapse = \"\\n\")\n\np &lt;- patchwork::wrap_plots(A = p0,\n                           B = p1,\n                           C = patchwork::guide_area(),\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_2G.html",
    "href": "viz/figures_figure_2G.html",
    "title": "Figure 2G",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n\nsample.oligo &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_OD.rds\")\nsample.astro &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_AS.rds\")\n\nSeurat::DefaultAssay(sample.oligo) &lt;- \"ATAC\"\nSeurat::DefaultAssay(sample.astro) &lt;- \"ATAC\"\n\nsample.oligo &lt;- sample.oligo[, sample.oligo$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"RA\", \"Cycling\")]\nsample.astro &lt;- sample.astro[, sample.astro$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"RA\", \"Cycling\")]\nsample.oligo$relabelling[sample.oligo$relabelling == \"RA\"] &lt;- \"RE\"\nsample.astro$relabelling[sample.astro$relabelling == \"RA\"] &lt;- \"RE\"\n\n\nSeurat::Idents(sample.oligo) &lt;- sample.oligo$relabelling\nSeurat::Idents(sample.astro) &lt;- sample.astro$relabelling\n\nsample.oligo &lt;- Seurat::FindVariableFeatures(sample.oligo)\nsample.astro &lt;- Seurat::FindVariableFeatures(sample.astro)\n\n\n\nCodep1 &lt;- SCpubr::do_CorrelationPlot(sample.oligo,\n                                 mode = \"hvg\",\n                                 assay = \"ATAC\",\n                                 max.cutoff = 0.5,\n                                 min.cutoff = -0.5,\n                                 font.size = 20,\n                                 legend.length = 15,\n                                 legend.width = 0.5,\n                                 legend.framecolor = \"grey50\",\n                                 legend.tickcolor = \"white\",\n                                 legend.framewidth = 0.2,\n                                 legend.tickwidth = 0.2,\n                                 axis.text.face = \"plain\",\n                                 legend.position = \"none\") + \n      ggplot2::xlab(\"OD\")\n\np2 &lt;- SCpubr::do_CorrelationPlot(sample.astro,\n                                 mode = \"hvg\",\n                                 assay = \"ATAC\",\n                                 max.cutoff = 0.5,\n                                 min.cutoff = -0.5,\n                                 font.size = 20,\n                                 legend.length = 15,\n                                 legend.width = 0.5,\n                                 legend.framecolor = \"grey50\",\n                                 legend.tickcolor = \"white\",\n                                 legend.framewidth = 0.2,\n                                 legend.tickwidth = 0.2,\n                                 axis.text.face = \"plain\")  + \n       ggplot2::xlab(\"AS\")\n\np &lt;- patchwork::wrap_plots(A = p1, B = p2, C = patchwork::guide_area(),design = \"AB\n                                                                                 CC\", guides = \"collect\")"
  },
  {
    "objectID": "viz/figures_figure_2H.html",
    "href": "viz/figures_figure_2H.html",
    "title": "Figure 2H",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n\nsample.atac &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_OD.rds\")\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/motif_markers_atac_OD.rds\")\nmarkers$cluster &lt;- as.character(markers$cluster)\nmarkers$cluster[markers$cluster == \"RA\"] &lt;- \"RE\"\nsample.atac &lt;- sample.atac[, sample.atac$relabelling %in% c(\"OPC-like\", \"RA\", \"Cycling\", \"Astro-like\")]\nSeurat::DefaultAssay(sample.atac) &lt;- \"chromvar\"\n\nsample.atac$relabelling[sample.atac$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample.atac) &lt;- sample.atac$relabelling\n\ngenes.use &lt;- unique(markers$gene_short)\n\nmarkers &lt;- markers %&gt;% \n           dplyr::filter(.data$gene_short %in% genes.use) %&gt;% \n           dplyr::mutate(cluster = factor(.data$cluster, levels = c(\"Astro-like\", \"Cycling\", \"OPC-like\", \"RE\"))) %&gt;% \n           dplyr::group_by(.data$cluster) %&gt;% \n           dplyr::arrange(.data$p_val_adj, dplyr::desc(.data$avg_log2FC)) %&gt;% \n           dplyr::slice_head(n = 50)\n\nmarkers &lt;- markers[!duplicated(markers$gene_short), ]\n\nmarkers &lt;- markers %&gt;% \n           dplyr::slice_head(n = 15)\nsample.atac &lt;- Seurat::ScaleData(sample.atac, features = markers$gene_long)\n\n\n\nCodep &lt;- SCpubr::do_ExpressionHeatmap(sample.atac, \n                                  features = markers$gene_long, \n                                  assay = \"chromvar\", \n                                  flip = FALSE, \n                                  cluster = TRUE, \n                                  slot = \"scale.data\", \n                                  enforce_symmetry = TRUE, \n                                  features.order = markers$gene_long,\n                                  groups.order = list(\"Groups\" = rev(c(\"Astro-like\", \"Cycling\", \"OPC-like\", \"RE\"))),\n                                  legend.title = \"Motif Score\",\n                                  max.cutoff = 0.8,\n                                  min.cutoff = -0.8,\n                                  font.size = 20,\n                                  legend.length = 15,\n                                  legend.width = 0.5,\n                                  legend.framecolor = \"grey50\",\n                                  legend.tickcolor = \"white\",\n                                  legend.framewidth = 0.2,\n                                  legend.tickwidth = 0.2,\n                                  axis.text.face = \"plain\") +\n      ggplot2::labs(x = \"Motif\",\n                    y = \"Cell type\") + \n      ggplot2::theme(axis.title.y.left = ggplot2::element_text(hjust = 0.5))\np$data$gene &lt;-  unname(vapply(p$data$gene, function(x){stringr::str_split(x, \"-\")[[1]][3]}, FUN.VALUE = character(1)))\np$data$gene &lt;- factor(p$data$gene, levels = c(markers$gene_short))"
  },
  {
    "objectID": "viz/figures_figure_2I.html",
    "href": "viz/figures_figure_2I.html",
    "title": "Figure 2I",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n\nsample.atac &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_AS.rds\")\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/motif_markers_atac_AS.rds\")\nmarkers$cluster &lt;- as.character(markers$cluster)\nmarkers$cluster[markers$cluster == \"RA\"] &lt;- \"RE\"\nsample.atac &lt;- sample.atac[, sample.atac$relabelling %in% c(\"OPC-like\", \"RA\", \"Cycling\", \"Astro-like\")]\nSeurat::DefaultAssay(sample.atac) &lt;- \"chromvar\"\n\nsample.atac$relabelling[sample.atac$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample.atac) &lt;- sample.atac$relabelling\n\ngenes.use &lt;- unique(markers$gene_short)\n\nmarkers &lt;- markers %&gt;% \n           dplyr::filter(.data$gene_short %in% genes.use) %&gt;% \n           dplyr::mutate(cluster = factor(.data$cluster, levels = c(\"Astro-like\", \"Cycling\", \"OPC-like\", \"RE\"))) %&gt;% \n           dplyr::group_by(.data$cluster) %&gt;% \n           dplyr::arrange(.data$p_val_adj, dplyr::desc(.data$avg_log2FC)) %&gt;% \n           dplyr::slice_head(n = 50)\n\nmarkers &lt;- markers[!duplicated(markers$gene_short), ]\n\nmarkers &lt;- markers %&gt;% \n           dplyr::slice_head(n = 15)\nsample.atac &lt;- Seurat::ScaleData(sample.atac, features = markers$gene_long)\n\n\n\nCodep &lt;- SCpubr::do_ExpressionHeatmap(sample.atac, \n                                  features = markers$gene_long, \n                                  assay = \"chromvar\", \n                                  flip = FALSE, \n                                  cluster = TRUE, \n                                  slot = \"scale.data\", \n                                  enforce_symmetry = TRUE, \n                                  features.order = markers$gene_long,\n                                  groups.order = list(\"Groups\" = rev(c(\"Astro-like\", \"Cycling\", \"OPC-like\", \"RE\"))),\n                                  legend.title = \"Motif Score\",\n                                  max.cutoff = 0.8,\n                                  min.cutoff = -0.4,\n                                  font.size = 20,\n                                  legend.length = 15,\n                                  legend.width = 0.5,\n                                  legend.framecolor = \"grey50\",\n                                  legend.tickcolor = \"white\",\n                                  legend.framewidth = 0.2,\n                                  legend.tickwidth = 0.2,\n                                  axis.text.face = \"plain\") +\n      ggplot2::labs(x = \"Motif\",\n                    y = \"Cell type\") + \n      ggplot2::theme(axis.title.y.left = ggplot2::element_text(hjust = 0.5))\np$data$gene &lt;-  unname(vapply(p$data$gene, function(x){stringr::str_split(x, \"-\")[[1]][3]}, FUN.VALUE = character(1)))\np$data$gene &lt;- factor(p$data$gene, levels = c(markers$gene_short))"
  },
  {
    "objectID": "viz/figures_figure_3A.html",
    "href": "viz/figures_figure_3A.html",
    "title": "Figure 3A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_primary.rds\")\n\n# Define colors.\ncluster_cols &lt;- c(\"Mg Homeostatic\"= \"#ECA809\",                          \n                  \"Mg Inflammatory TAMs\" = \"#043362\",                  \n                  \"Mg Activated\"= \"#9A031E\",                 \n                  \"Mg Resident−like TAMs\"= \"#009FF5\",                    \n                  \"BMD Anti−inflammatory TAMs\"= \"#BC5210\",            \n                  \"Mg Phagocytic\"= \"#279185\",                 \n                  \"Mg IFNg TAMs\"= \"#7EB356\",                   \n                  \"Mg Stressed TAMs\"= \"#AC70FF\",                  \n                  \"Mg Inflammatory ICAM1+\"= \"#63412C\",                  \n                  \"BAMs\" = \"#5F0F40\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample = sample,\n                        colors.use = cluster_cols,\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        legend.icon.size = 8,\n                        legend.ncol = 2,\n                        na.value = \"grey50\",\n                        axis.title.face = \"plain\")"
  },
  {
    "objectID": "viz/figures_figure_3B.html",
    "href": "viz/figures_figure_3B.html",
    "title": "Figure 3B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_primary.rds\")\n\n# Define colors.\ncluster_cols &lt;- c(\"Mg Homeostatic\"= \"#ECA809\",                          \n                  \"Mg Inflammatory TAMs\" = \"#043362\",                  \n                  \"Mg Activated\"= \"#9A031E\",                 \n                  \"Mg Resident−like TAMs\"= \"#009FF5\",                    \n                  \"BMD Anti−inflammatory TAMs\"= \"#BC5210\",            \n                  \"Mg Phagocytic\"= \"#279185\",                 \n                  \"Mg IFNg TAMs\"= \"#7EB356\",                   \n                  \"Mg Stressed TAMs\"= \"#AC70FF\",                  \n                  \"Mg Inflammatory ICAM1+\"= \"#63412C\",                  \n                  \"BAMs\" = \"#5F0F40\")\n\n\n\nCodep0 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$subtype == \"Oligodendroglioma\"],\n                         group.by = \"final_annotation\",\n                         split.by = \"orig.ident\",\n                         font.size = 16,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::ylab(\"\") +\n      ggplot2::xlab(\"OD\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np1 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$subtype == \"Astrocytoma\"],\n                         group.by = \"final_annotation\",\n                         split.by = \"orig.ident\",\n                         font.size = 16,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::ylab(\"\") +\n      ggplot2::xlab(\"AS\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np2 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"final_annotation\",\n                         split.by = \"subtype\",\n                         flip = TRUE,\n                         position = \"fill\",\n                         font.size = 16,\n                         colors.use = cluster_cols,\n                         legend.position = \"none\",\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"\") +\n      ggplot2::ylab(\"\") +\n      ggplot2::theme(axis.text.x.bottom = ggplot2::element_blank(),\n                     axis.ticks.x.bottom = ggplot2::element_blank(),\n                     axis.line.x.bottom = ggplot2::element_blank(),\n                     strip.background = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 5, l = 10))\n\np3 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"final_annotation\",\n                         split.by = \"grade\",\n                         flip = TRUE,\n                         position = \"fill\",\n                         font.size = 16,\n                         colors.use = cluster_cols,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5,\n                         legend.ncol = 2,\n                         legend.title = \"\") +\n      ggplot2::xlab(\"\") +\n      ggplot2::ylab(\"\") +\n      ggplot2::theme(axis.text.x.bottom = ggplot2::element_blank(),\n                     axis.ticks.x.bottom = ggplot2::element_blank(),\n                     axis.line.x.bottom = ggplot2::element_blank(),\n                     strip.background = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 5, l = 10))\n\nlayout &lt;- paste(c(rep(\"A\", 8), rep(\"B\", 6), rep(\"C\", 2), rep(\"D\", 2), \"E\"), collapse = \"\\n\")\n\np &lt;- patchwork::wrap_plots(A = p0,\n                           B = p1,\n                           C = p2,\n                           D = p3,\n                           E = patchwork::guide_area(),\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_3C.html",
    "href": "viz/figures_figure_3C.html",
    "title": "Figure 3C",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_primary.rds\")\n\nscale.subtype.short &lt;- c(\"AS\" = \"#b38b14\",\n                         \"OD\" = \"#3c5b8b\")\n\n\n\nCodedata &lt;- sample@meta.data %&gt;% \n        dplyr::select(dplyr::all_of(c(\"final_annotation\", \"subtype\", \"orig.ident\"))) %&gt;% \n        tibble::as_tibble() %&gt;%\n        dplyr::filter(!.data$orig.ident %in% c(\"IDH_NCH2164\", \"IDH_NCH6702\")) %&gt;% \n        dplyr::mutate(\"subtype\" = ifelse(.data$subtype == \"Oligodendroglioma\", \"OD\", \"AS\")) %&gt;% \n        dplyr::mutate(\"subtype\" = factor(.data$subtype, levels = c(\"OD\", \"AS\"))) %&gt;% \n        dplyr::group_by(.data$subtype, .data$orig.ident, .data$final_annotation) %&gt;% \n        dplyr::summarise(\"n\" = dplyr::n(),\n                        \"subtype\" := unique(.data$subtype),\n                        \"final_annotation\" := unique(.data$final_annotation)) %&gt;% \n        dplyr::reframe(\"freq\" = .data$n / sum(.data$n),\n                       \"subtype\" := unique(.data$subtype),\n                       \"final_annotation\" := unique(.data$final_annotation),\n                       \"orig.ident\" := unique(.data$orig.ident))\n\n\np &lt;- data %&gt;% \n     ggpubr::ggboxplot(x = \"subtype\",\n                       y = \"freq\",\n                       color = \"black\",\n                       fill = \"subtype\",\n                       facet.by = \"final_annotation\",\n                       short.panel.labs = TRUE,\n                       width = 0.9,\n                       outlier.color = \"black\",\n                       outlier.alpha = 0,\n                       fatten = 1,\n                       key_glyph = \"rect\",\n                       nrow = 1,\n                       outlier.shape = NA)  +\n     ggplot2::geom_point(color = \"black\", size = 2) + \n     ggplot2::scale_fill_manual(values = scale.subtype.short,\n                                name = \"\") + \n     ggpubr::stat_compare_means(mapping = ggplot2::aes(label = \"p = \", ggplot2::after_stat(p.format)),\n                                method = \"wilcox.test\", \n                                comparisons = list(c(\"OD\", \"AS\")),\n                                paired = FALSE,\n                                position = \"jitter\") +\n     ggplot2::theme_minimal(base_size = 20) +\n     ggplot2::labs(x = \"Subtype\", y = \"Proportion\") +\n     ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_line(color = \"black\"),\n                    axis.ticks.x.top = ggplot2::element_blank(),\n                    axis.ticks.y.left = ggplot2::element_line(color = \"black\"),\n                    axis.ticks.y.right = ggplot2::element_blank(),\n                    axis.text.y.left = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                    axis.text.y.right = ggplot2::element_blank(),\n                    axis.text.x.top = ggplot2::element_blank(),\n                    axis.text.x.bottom = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                    strip.text.x.top = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                    axis.title.x.bottom = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                    axis.title.x.top = ggplot2::element_blank(),\n                    axis.title.y.right = ggplot2::element_blank(),\n                    axis.title.y.left = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                    strip.text = ggplot2::element_text(face = \"bold\", color = \"black\"),\n                    axis.line = ggplot2::element_blank(),\n                    plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                    plot.subtitle = ggplot2::element_text(hjust = 0),\n                    plot.caption = ggplot2::element_text(hjust = 1),\n                    plot.title.position = \"plot\",\n                    panel.grid = ggplot2::element_blank(),\n                    panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 1),\n                    text = ggplot2::element_text(family = \"sans\"),\n                    plot.caption.position = \"plot\",\n                    legend.text = ggplot2::element_text(face = \"bold\"),\n                    legend.title = ggplot2::element_text(face = \"bold\"),\n                    legend.justification = \"center\",\n                    plot.margin = ggplot2::margin(t = 40, r = 10, b = 0, l = 10),\n                    panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 1),\n                    panel.grid.major = ggplot2::element_blank(),\n                    legend.position = \"none\",\n                    legend.spacing = ggplot2::unit(10, unit = \"mm\"),\n                    plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    legend.key = ggplot2::element_rect(linewidth = 1, color = \"white\"),\n                    legend.key.size = ggplot2::unit(1, 'lines'))"
  },
  {
    "objectID": "viz/figures_figure_3F.html",
    "href": "viz/figures_figure_3F.html",
    "title": "Figure 3F",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nliana_OD &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/interactions_OD_tumor_microglia.rds\")\nliana_AS &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/interactions_AS_tumor_microglia.rds\")\nliana_OD$source &lt;- stringr::str_replace_all(liana_OD$source, \"\\n\", \" \")\nliana_AS$source &lt;- stringr::str_replace_all(liana_AS$source, \"\\n\", \" \")\nliana_OD$source_target &lt;- stringr::str_replace_all(liana_OD$source_target, \"\\n\", \" \")\nliana_AS$source_target &lt;- stringr::str_replace_all(liana_AS$source_target, \"\\n\", \" \")\n\n\n\nCodemagnitude_limits &lt;- c(min(c(min(liana_OD$sca.LRscore, na.rm = TRUE),\n                            min(liana_AS$sca.LRscore, na.rm = TRUE))),\n                      max(c(max(liana_OD$sca.LRscore, na.rm = TRUE),\n                            max(liana_AS$sca.LRscore, na.rm = TRUE))))\n\nspecificity_limits &lt;- c(min(c(min(liana_OD$aggregate_rank_inv, na.rm = TRUE),\n                              min(liana_AS$aggregate_rank_inv, na.rm = TRUE))),\n                        max(c(max(liana_OD$aggregate_rank_inv, na.rm = TRUE),\n                              max(liana_AS$aggregate_rank_inv, na.rm = TRUE))))\n\nscale.magnitude &lt;- SCpubr:::compute_scales(sample = NULL,\n                                           feature = NULL,\n                                           assay = NULL,\n                                           reduction = NULL,\n                                           slot = NULL,\n                                           number.breaks = 5,\n                                           min.cutoff = NA,\n                                           max.cutoff = NA,\n                                           flavor = \"Seurat\",\n                                           enforce_symmetry = FALSE,\n                                           from_data = TRUE,\n                                           limits.use = magnitude_limits)\n\nscale.specificity &lt;- SCpubr:::compute_scales(sample = NULL,\n                                             feature = NULL,\n                                             assay = NULL,\n                                             reduction = NULL,\n                                             slot = NULL,\n                                             number.breaks = 5,\n                                             min.cutoff = NA,\n                                             max.cutoff = NA,\n                                             flavor = \"Seurat\",\n                                             enforce_symmetry = FALSE,\n                                             from_data = TRUE,\n                                             limits.use = specificity_limits)\n\np1 &lt;- liana_OD %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$target,\n                                             y = .data$interaction,\n                                             fill = .data$sca.LRscore,\n                                             size = .data$aggregate_rank_inv,\n                                             group = .data$target)) +\n      ggplot2::geom_point(shape = 21, na.rm = TRUE, stroke = 0.25) +\n      ggplot2::guides(y.sec = SCpubr:::guide_axis_label_trans(~paste0(levels(.data$interaction)))) +\n      ggplot2::scale_size_continuous(name = \"Interaction Specificity\",\n                                     range = c(0.25, 7),\n                                     breaks = scale.specificity$breaks,\n                                     labels = scale.specificity$labels,\n                                     limits = scale.specificity$limits) +\n      ggplot2::scale_fill_gradientn(colors =  RColorBrewer::brewer.pal(n = 9, name = \"YlGnBu\")[1:9],\n                                        na.value = NA,\n                                        name = \"Expression Magnitude\",\n                                        breaks = scale.magnitude$breaks,\n                                        labels = scale.magnitude$labels,\n                                        limits = scale.magnitude$limits) +\n      ggplot2::facet_grid(.data$ligand.complex ~ .data$source,\n                          space = \"free\",\n                          scales = \"free\",\n                          drop = FALSE) +\n      ggplot2::ggtitle(\"Oligodendroglioma\") +\n      ggplot2::xlab(\"\") +\n      ggplot2::ylab(\"Ligand | Receptor\") +\n      ggplot2::guides(size = ggplot2::guide_legend(title.position = \"top\",\n                                                   title.hjust = 0.5,\n                                                   override.aes = ggplot2::aes(fill = \"black\"))) +\n      ggplot2::theme_minimal(base_size = 16) +\n      ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\",\n                                                        hjust = 0.5,\n                                                        vjust = 0),\n                     plot.subtitle = ggplot2::element_text(face = \"bold\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     plot.title.position = \"panel\",\n                     plot.caption.position = \"plot\",\n                     text = ggplot2::element_text(family = \"sans\"),\n                     legend.justification = \"center\",\n                     legend.position = \"bottom\",\n                     axis.title.x = ggplot2::element_text(color = \"black\", face = \"bold\", hjust = 0.5),\n                     axis.title.y.left = ggplot2::element_text(color = \"black\", face = \"bold\", angle = 90),\n                     axis.title.y.right = ggplot2::element_blank(),\n                     axis.text.y.right = ggplot2::element_blank(),\n                     axis.text.y.left = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.y.left = ggplot2::element_blank(),\n                     axis.ticks.y.right = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_text(color = \"black\",\n                                                         face = \"plain\",\n                                                         angle = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"angle\"]],\n                                                         hjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"hjust\"]],\n                                                         vjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"vjust\"]]),\n                     strip.text.x = ggplot2::element_text(face = \"bold\",\n                                                          color = \"black\"),\n                     strip.text.y = ggplot2::element_blank(),\n                     panel.border = ggplot2::element_rect(color = \"black\", fill = NA),\n                     panel.grid = ggplot2::element_line(color = \"grey90\", linetype = \"dotted\"),\n                     plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 40),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"black\", linetype = \"solid\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n         \np1 &lt;- SCpubr:::modify_continuous_legend(p = p1,\n                                        legend.aes = \"fill\",\n                                        legend.type = \"colorbar\",\n                                        legend.position = \"bottom\",\n                                        legend.length = 10,\n                                        legend.width = 0.5,\n                                        legend.framecolor = \"grey50\",\n                                        legend.tickcolor = \"white\",\n                                        legend.framewidth = 0.25,\n                                        legend.tickwidth = 0.25)\n    \n\n\np2 &lt;- liana_AS %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$target,\n                                             y = .data$interaction,\n                                             fill = .data$sca.LRscore,\n                                             size = .data$aggregate_rank_inv,\n                                             group = .data$target)) +\n      ggplot2::geom_point(shape = 21, na.rm = TRUE, stroke = 0.25) +\n      ggplot2::guides(y.sec = SCpubr:::guide_axis_label_trans(~paste0(levels(.data$interaction)))) +\n      ggplot2::scale_size_continuous(name = \"Interaction Specificity\",\n                                     range = c(0.25, 7),\n                                     breaks = scale.specificity$breaks,\n                                     labels = scale.specificity$labels,\n                                     limits = scale.specificity$limits) +\n      ggplot2::scale_fill_gradientn(colors =  RColorBrewer::brewer.pal(n = 9, name = \"YlGnBu\")[1:9],\n                                        na.value = NA,\n                                        name = \"Expression Magnitude\",\n                                        breaks = scale.magnitude$breaks,\n                                        labels = scale.magnitude$labels,\n                                        limits = scale.magnitude$limits) +\n      ggplot2::facet_grid(.data$ligand.complex ~ .data$source,\n                          space = \"free\",\n                          scales = \"free\",\n                          drop = FALSE) +\n      ggplot2::ggtitle(\"Astrocytoma\") +\n      ggplot2::xlab(\"\") +\n      ggplot2::ylab(\"\") +\n      ggplot2::guides(size = ggplot2::guide_legend(title.position = \"top\",\n                                                   title.hjust = 0.5,\n                                                   override.aes = ggplot2::aes(fill = \"black\"))) +\n      ggplot2::theme_minimal(base_size = 16) +\n      ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\",\n                                                        hjust = 0.5,\n                                                        vjust = 0),\n                     plot.subtitle = ggplot2::element_text(face = \"bold\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     plot.title.position = \"panel\",\n                     plot.caption.position = \"plot\",\n                     text = ggplot2::element_text(family = \"sans\"),\n                     legend.justification = \"center\",\n                     legend.position = \"bottom\",\n                     axis.title.x = ggplot2::element_text(color = \"black\", face = \"bold\", hjust = 0.5),\n                     axis.title.y.left = ggplot2::element_text(color = \"black\", face = \"bold\", angle = 90),\n                     axis.title.y.right = ggplot2::element_blank(),\n                     axis.text.y.right = ggplot2::element_text(color = \"black\",\n                                                               face = \"plain\"),\n                     axis.text.y.left = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.y.left = ggplot2::element_blank(),\n                     axis.ticks.y.right = ggplot2::element_line(color = \"black\"),\n                     axis.text.x = ggplot2::element_text(color = \"black\",\n                                                         face = \"plain\",\n                                                         angle = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"angle\"]],\n                                                         hjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"hjust\"]],\n                                                         vjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"vjust\"]]),\n                     strip.text.x = ggplot2::element_text(face = \"bold\",\n                                                          color = \"black\"),\n                     strip.text.y = ggplot2::element_blank(),\n                     panel.border = ggplot2::element_rect(color = \"black\", fill = NA),\n                     panel.grid = ggplot2::element_line(color = \"grey90\", linetype = \"dotted\"),\n                     plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 0),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"black\", linetype = \"solid\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n         \np2 &lt;- SCpubr:::modify_continuous_legend(p = p2,\n                                        legend.aes = \"fill\",\n                                        legend.type = \"colorbar\",\n                                        legend.position = \"bottom\",\n                                        legend.length = 10,\n                                        legend.width = 0.5,\n                                        legend.framecolor = \"grey50\",\n                                        legend.tickcolor = \"white\",\n                                        legend.framewidth = 0.25,\n                                        legend.tickwidth = 0.25)\n\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = patchwork::guide_area(),\n                           design = \"AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     CCCCCCCCCCCCCCCC\",\n                           guides = \"collect\")  + \n     patchwork::plot_annotation(theme = ggplot2::theme(legend.position = \"bottom\",\n                                                       plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 40)))"
  },
  {
    "objectID": "viz/figures_figure_3G.html",
    "href": "viz/figures_figure_3G.html",
    "title": "Figure 3G",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nliana_OD &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/interactions_OD_microglia_tumor.rds\")\nliana_AS &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/interactions_AS_microglia_tumor.rds\")\nliana_OD$source &lt;- stringr::str_replace_all(liana_OD$source, \"\\n\", \" \")\nliana_AS$source &lt;- stringr::str_replace_all(liana_AS$source, \"\\n\", \" \")\nliana_OD$source_target &lt;- stringr::str_replace_all(liana_OD$source_target, \"\\n\", \" \")\nliana_AS$source_target &lt;- stringr::str_replace_all(liana_AS$source_target, \"\\n\", \" \")\n\n\n\nCodemagnitude_limits &lt;- c(min(c(min(liana_OD$sca.LRscore, na.rm = TRUE),\n                            min(liana_AS$sca.LRscore, na.rm = TRUE))),\n                      max(c(max(liana_OD$sca.LRscore, na.rm = TRUE),\n                            max(liana_AS$sca.LRscore, na.rm = TRUE))))\n\nspecificity_limits &lt;- c(min(c(min(liana_OD$aggregate_rank_inv, na.rm = TRUE),\n                              min(liana_AS$aggregate_rank_inv, na.rm = TRUE))),\n                        max(c(max(liana_OD$aggregate_rank_inv, na.rm = TRUE),\n                              max(liana_AS$aggregate_rank_inv, na.rm = TRUE))))\n\nscale.magnitude &lt;- SCpubr:::compute_scales(sample = NULL,\n                                           feature = NULL,\n                                           assay = NULL,\n                                           reduction = NULL,\n                                           slot = NULL,\n                                           number.breaks = 5,\n                                           min.cutoff = NA,\n                                           max.cutoff = NA,\n                                           flavor = \"Seurat\",\n                                           enforce_symmetry = FALSE,\n                                           from_data = TRUE,\n                                           limits.use = magnitude_limits)\n\nscale.specificity &lt;- SCpubr:::compute_scales(sample = NULL,\n                                             feature = NULL,\n                                             assay = NULL,\n                                             reduction = NULL,\n                                             slot = NULL,\n                                             number.breaks = 5,\n                                             min.cutoff = NA,\n                                             max.cutoff = NA,\n                                             flavor = \"Seurat\",\n                                             enforce_symmetry = FALSE,\n                                             from_data = TRUE,\n                                             limits.use = specificity_limits)\n\np1 &lt;- liana_OD %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$source,\n                                             y = .data$interaction,\n                                             fill = .data$sca.LRscore,\n                                             size = .data$aggregate_rank_inv,\n                                             group = .data$source)) +\n      ggplot2::geom_point(shape = 21, na.rm = TRUE, stroke = 0.25) +\n      ggplot2::guides(y.sec = SCpubr:::guide_axis_label_trans(~paste0(levels(.data$interaction)))) +\n      ggplot2::scale_size_continuous(name = \"Interaction Specificity\",\n                                     range = c(0.25, 7),\n                                     breaks = scale.specificity$breaks,\n                                     labels = scale.specificity$labels,\n                                     limits = scale.specificity$limits) +\n      ggplot2::scale_fill_gradientn(colors =  RColorBrewer::brewer.pal(n = 9, name = \"YlGnBu\")[1:9],\n                                        na.value = NA,\n                                        name = \"Expression Magnitude\",\n                                        breaks = scale.magnitude$breaks,\n                                        labels = scale.magnitude$labels,\n                                        limits = scale.magnitude$limits) +\n      ggplot2::facet_grid(.data$ligand.complex ~ .data$target,\n                          space = \"free\",\n                          scales = \"free\",\n                          drop = FALSE) +\n      ggplot2::ggtitle(\"Oligodendroglioma\") +\n      ggplot2::xlab(\"\") +\n      ggplot2::ylab(\"Ligand | Receptor\") +\n      ggplot2::guides(size = ggplot2::guide_legend(title.position = \"top\",\n                                                   title.hjust = 0.5,\n                                                   override.aes = ggplot2::aes(fill = \"black\"))) +\n      ggplot2::theme_minimal(base_size = 16) +\n      ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\",\n                                                        hjust = 0.5,\n                                                        vjust = 0,\n                                                        size = 20),\n                     plot.subtitle = ggplot2::element_text(face = \"bold\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     plot.title.position = \"panel\",\n                     plot.caption.position = \"plot\",\n                     text = ggplot2::element_text(family = \"sans\"),\n                     legend.justification = \"center\",\n                     legend.position = \"bottom\",\n                     axis.title.x = ggplot2::element_text(color = \"black\", face = \"bold\", hjust = 0.5),\n                     axis.title.y.left = ggplot2::element_text(color = \"black\", face = \"bold\", angle = 90),\n                     axis.title.y.right = ggplot2::element_blank(),\n                     axis.text.y.right = ggplot2::element_blank(),\n                     axis.text.y.left = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.y.left = ggplot2::element_blank(),\n                     axis.ticks.y.right = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_text(color = \"black\",\n                                                         face = \"plain\",\n                                                         angle = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"angle\"]],\n                                                         hjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"hjust\"]],\n                                                         vjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"vjust\"]]),\n                     strip.text.x = ggplot2::element_text(face = \"bold\",\n                                                          color = \"black\"),\n                     strip.text.y = ggplot2::element_blank(),\n                     panel.border = ggplot2::element_rect(color = \"black\", fill = NA),\n                     panel.grid = ggplot2::element_line(color = \"grey90\", linetype = \"dotted\"),\n                     plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 40),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"black\", linetype = \"solid\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n         \np1 &lt;- SCpubr:::modify_continuous_legend(p = p1,\n                                        legend.aes = \"fill\",\n                                        legend.type = \"colorbar\",\n                                        legend.position = \"bottom\",\n                                        legend.length = 10,\n                                        legend.width = 0.5,\n                                        legend.framecolor = \"grey50\",\n                                        legend.tickcolor = \"white\",\n                                        legend.framewidth = 0.25,\n                                        legend.tickwidth = 0.25)\n    \n\n\np2 &lt;- liana_AS %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$source,\n                                             y = .data$interaction,\n                                             fill = .data$sca.LRscore,\n                                             size = .data$aggregate_rank_inv,\n                                             group = .data$source)) +\n      ggplot2::geom_point(shape = 21, na.rm = TRUE, stroke = 0.25) +\n      ggplot2::guides(y.sec = SCpubr:::guide_axis_label_trans(~paste0(levels(.data$interaction)))) +\n      ggplot2::scale_size_continuous(name = \"Interaction Specificity\",\n                                     range = c(0.25, 7),\n                                     breaks = scale.specificity$breaks,\n                                     labels = scale.specificity$labels,\n                                     limits = scale.specificity$limits) +\n      ggplot2::scale_fill_gradientn(colors =  RColorBrewer::brewer.pal(n = 9, name = \"YlGnBu\")[1:9],\n                                        na.value = NA,\n                                        name = \"Expression Magnitude\",\n                                        breaks = scale.magnitude$breaks,\n                                        labels = scale.magnitude$labels,\n                                        limits = scale.magnitude$limits) +\n      ggplot2::facet_grid(.data$ligand.complex ~ .data$target,\n                          space = \"free\",\n                          scales = \"free\",\n                          drop = FALSE) +\n      ggplot2::ggtitle(\"Astrocytoma\") +\n      ggplot2::xlab(\"\") +\n      ggplot2::ylab(\"\") +\n      ggplot2::guides(size = ggplot2::guide_legend(title.position = \"top\",\n                                                   title.hjust = 0.5,\n                                                   override.aes = ggplot2::aes(fill = \"black\"))) +\n      ggplot2::theme_minimal(base_size = 16) +\n      ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\",\n                                                        hjust = 0.5,\n                                                        vjust = 0,\n                                                        size = 20),\n                     plot.subtitle = ggplot2::element_text(face = \"bold\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     plot.title.position = \"panel\",\n                     plot.caption.position = \"plot\",\n                     text = ggplot2::element_text(family = \"sans\"),\n                     legend.justification = \"center\",\n                     legend.position = \"bottom\",\n                     axis.title.x = ggplot2::element_text(color = \"black\", face = \"bold\", hjust = 0.5),\n                     axis.title.y.left = ggplot2::element_text(color = \"black\", face = \"plain\", angle = 90),\n                     axis.title.y.right = ggplot2::element_blank(),\n                     axis.text.y.right = ggplot2::element_text(color = \"black\",\n                                                               face = \"plain\"),\n                     axis.text.y.left = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.y.left = ggplot2::element_blank(),\n                     axis.ticks.y.right = ggplot2::element_line(color = \"black\"),\n                     axis.text.x = ggplot2::element_text(color = \"black\",\n                                                         face = \"plain\",\n                                                         angle = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"angle\"]],\n                                                         hjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"hjust\"]],\n                                                         vjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"vjust\"]]),\n                     strip.text.x = ggplot2::element_text(face = \"bold\",\n                                                          color = \"black\"),\n                     strip.text.y = ggplot2::element_blank(),\n                     panel.border = ggplot2::element_rect(color = \"black\", fill = NA),\n                     panel.grid = ggplot2::element_line(color = \"grey90\", linetype = \"dotted\"),\n                     plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 0),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"black\", linetype = \"solid\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))\n         \np2 &lt;- SCpubr:::modify_continuous_legend(p = p2,\n                                        legend.aes = \"fill\",\n                                        legend.type = \"colorbar\",\n                                        legend.position = \"bottom\",\n                                        legend.length = 10,\n                                        legend.width = 0.5,\n                                        legend.framecolor = \"grey50\",\n                                        legend.tickcolor = \"white\",\n                                        legend.framewidth = 0.25,\n                                        legend.tickwidth = 0.25)\n\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = patchwork::guide_area(),\n                           design = \"AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     AAAAAAAABBBBBBBB\n                                     CCCCCCCCCCCCCCCC\",\n                           guides = \"collect\")  + \n     patchwork::plot_annotation(theme = ggplot2::theme(legend.position = \"bottom\",\n                                                       plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 40)))"
  },
  {
    "objectID": "viz/figures_figure_4A.html",
    "href": "viz/figures_figure_4A.html",
    "title": "Figure 4A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in metadata.\nmetadata &lt;- as.data.frame(readxl::read_excel(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/paired_samples_metadata.xlsx\"))\n\n# Define colors.\nyes_no_colors &lt;- c(\"Yes\" = \"#1b4965\", \n                   \"No\"  = \"#98b9cd\")\n\ncolors.use &lt;- list(\"IDH mutated\" = yes_no_colors,\n                   \"1p/19q codeletion\" = yes_no_colors,\n                   \"MGMT methylated\" = yes_no_colors,\n                   \"Treatment\" = c(\"Primary sample\" = \"#854785\", \n                                   \"None\"           = \"#8a817c\",\n                                   \"RT\"             = \"#dda15e\", \n                                   \"TMZ\"            = \"#3a5a40\", \n                                   \"TMZ and RT\"     = \"#903738\"),\n                   \"TMZ cycles\" = c(\"0\"  = \"#cdd3e5\", \n                                    \"5\"  = \"#a8dadc\", \n                                    \"8\"  = \"#457b9d\", \n                                    \"12\" = \"#465686\"),\n                   \"Diagnosis\" = c(\"Oligodendroglioma\" = \"#3c5b8b\", \n                                   \"Astrocytoma\"       = \"#b38b14\", \n                                   \"sGBM\"              = \"#14b363\"),\n                   \"Sex\" = c(\"Male\"   = \"#723d46\", \n                             \"Female\" = \"#af9d6a\"),\n                   \"Grade\" = c(\"Grade 2\" = \"#1a7d9e\", \n                               \"Grade 3\" = \"#9e1a3b\", \n                               \"Grade 4\" = \"#576e12\"),\n                   \"Relapse status\" = c(\"Primary\" = \"#ee9b00\", \n                                        \"Relapse\" = \"#9b2226\"),\n                   \"Patient\" = c(\"IDH_NCH557\"  =  \"#5b859e\", \n                                 \"IDH_NCH758A\" =  \"#1e395f\", \n                                 \"IDH_NCH511B\" =  \"#75884b\", \n                                 \"IDH_NCH678K\" =  \"#1e5a46\", \n                                 \"IDH_NCH302\"  =  \"#df8d71\", \n                                 \"IDH_NCH645\"  =  \"#af4f2f\", \n                                 \"IDH_NCH988\"  =  \"#d48f90\", \n                                 \"IDH_NCH2375\" =  \"#732f30\", \n                                 \"IDH_NCH740W\" =  \"#ab84a5\", \n                                 \"IDH_NCH2367\" =  \"#59385c\", \n                                 \"IDH_NCH673D\" =  \"#d8b847\", \n                                 \"IDH_NCH2260\" =  \"#b38711\"),\n                   \"Pair\" = c(\"6\" = \"#eb7926\",\n                              \"5\" = \"#ffbb44\",\n                              \"4\" = \"#859b6c\",\n                              \"3\" = \"#62929a\",\n                              \"2\" = \"#004f63\",\n                              \"1\" = \"#122451\"))\n\n# Process metadata.\nrownames(metadata) &lt;- metadata$Samples\nmetadata$Samples &lt;- NULL\nmetadata &lt;- metadata %&gt;% \n            dplyr::mutate_all(.funs = function(x){ifelse(x == \"NA\", NA, x)})  %&gt;% \n            dplyr::select(dplyr::all_of(c(names(colors.use), \"Pair\"))) %&gt;% \n            dplyr::mutate(\"IDH mutated\" = factor(.data$`IDH mutated`, levels = c(\"Yes\", \"No\")),\n                          \"1p/19q codeletion\" = factor(.data$`1p/19q codeletion`, levels = c(\"Yes\", \"No\")),\n                          \"MGMT methylated\" = factor(.data$`MGMT methylated`, levels = c(\"Yes\", \"No\")),\n                          \"Treatment\" = factor(.data$Treatment, levels = c(\"Primary sample\", \"RT\", \"TMZ\", \"TMZ and RT\", \"None\")),\n                          \"TMZ cycles\" = factor(.data$`TMZ cycles`, levels = c(\"0\", \"5\", \"8\", \"12\")),\n                          \"Diagnosis\" = factor(.data$Diagnosis, levels = c(\"Astrocytoma\", \"sGBM\")),\n                          \"Sex\" = factor(.data$Sex, levels = c(\"Female\", \"Male\")),\n                          \"Grade\" = factor(.data$Grade, levels = c(\"Grade 2\", \"Grade 3\", \"Grade 4\")),\n                          \"Relapse status\" = factor(.data$`Relapse status`, levels = c(\"Primary\", \"Relapse\")),\n                          \"Patient\" = factor(.data$Patient, levels = c(\"IDH_NCH557\",\n                                                                       \"IDH_NCH758A\", \n                                                                       \"IDH_NCH511B\", \n                                                                       \"IDH_NCH678K\", \n                                                                       \"IDH_NCH302\" , \n                                                                       \"IDH_NCH645\" , \n                                                                       \"IDH_NCH988\" , \n                                                                       \"IDH_NCH2375\", \n                                                                       \"IDH_NCH740W\", \n                                                                       \"IDH_NCH2367\", \n                                                                       \"IDH_NCH673D\", \n                                                                       \"IDH_NCH2260\")),\n                          \"Pair\" = factor(.data$Pair, levels = c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"))) %&gt;% \n            as.data.frame()\nrownames(metadata) &lt;- metadata$Patient\n\n\n# Plot.\np &lt;- SCpubr::do_MetadataPlot(from_df = TRUE,\n                             df = metadata,\n                             legend.ncol = 1,\n                             colors.use = colors.use,\n                             axis.text.face = \"plain\", \n                             font.size = 20, \n                             legend.font.size = 20, \n                             legend.symbol.size = 8,\n                             cluster = FALSE,\n                             legend.position = \"right\") &\n     ggplot2::ylab(\"\")\np &lt;- p + patchwork::plot_annotation(theme = ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 40, l = 0, b = 0)))"
  },
  {
    "objectID": "viz/figures_figure_4B.html",
    "href": "viz/figures_figure_4B.html",
    "title": "Figure 4B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in metadata.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_paired_AS.rds\")\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Excluded\" = \"#4D6880\",                   \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"relabelling\",\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2,\n                        na.value = \"grey50\")"
  },
  {
    "objectID": "viz/figures_figure_4C.html",
    "href": "viz/figures_figure_4C.html",
    "title": "Figure 4C",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in metadata.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_paired_AS.rds\")\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Cycling\" = \"#5F0F40\")\n\nidents.keep &lt;- c(\"OPC-like\", \"Astro-like\", \"RE\", \"Gradient\", \"Cycling\")\nsample &lt;- sample[, sample$relabelling %in% idents.keep]\n\n\n\nCodep1 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH557\", \"IDH_NCH758A\")],\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 1\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10)) \n\np2 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH511B\", \"IDH_NCH678K\")],\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 2\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np3 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH302\", \"IDH_NCH645\")],\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 3\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np4 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH988\", \"IDH_NCH2375\")],\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 4\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np5 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH740W\", \"IDH_NCH2367\")],\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 5\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np6 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH673D\", \"IDH_NCH2260\")],\n                         group.by = \"relabelling\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 6\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 10, l = 10))\n\np7 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"relabelling\",\n                         split.by = \"time\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Status\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 10, l = 10))\n\n\np8 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"relabelling\",\n                         split.by = \"grade\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         legend.title = \"\",\n                         position = \"fill\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5,\n                         legend.ncol = 3) +\n      ggplot2::xlab(\"Grade\") +\n      ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\nlayout &lt;- paste(c(rep(\"A\", 2), rep(\"B\", 2), rep(\"C\", 2), rep(\"D\", 2), rep(\"E\", 2), rep(\"F\", 2), rep(\"G\", 2), rep(\"H\", 3), \"I\"), collapse = \"\\n\")\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = p3,\n                           D = p4,\n                           E = p5,\n                           F = p6,\n                           G = p7,\n                           H = p8,\n                           I = patchwork::guide_area(),\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_4E.html",
    "href": "viz/figures_figure_4E.html",
    "title": "Figure 4E",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Load samples.\ndata &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/data_4E.rds\")\n\n\n\nCodescale.setup &lt;- SCpubr:::compute_scales(sample = NULL,\n                                       feature = NULL,\n                                       assay = NULL,\n                                       reduction = NULL,\n                                       slot = NULL,\n                                       number.breaks = 5,\n                                       min.cutoff = NA,\n                                       max.cutoff = NA,\n                                       flavor = \"Seurat\",\n                                       enforce_symmetry = FALSE,\n                                       from_data = TRUE,\n                                       limits.use = c(1, 4))\n\np &lt;- data %&gt;% \n     ggplot2::ggplot(mapping = ggplot2::aes(y = forcats::fct_rev(.data$Pair),\n                                            x = .data$Type, \n                                            fill = .data$Score)) +\n     ggplot2::geom_tile(color = \"white\", linewidth = 0.25, na.rm = TRUE) +\n     ggplot2::scale_y_discrete(expand = c(0, 0), position = \"right\") +\n     ggplot2::scale_x_discrete(expand = c(0, 0),\n                               position = \"top\") + \n     ggplot2::guides(x.sec = SCpubr:::guide_axis_label_trans(~paste0(levels(.data$Pair))),\n                     y.sec = SCpubr:::guide_axis_label_trans(~paste0(levels(.data$Type)))) +\n     ggplot2::coord_equal() +\n     ggplot2::scale_fill_manual(values = stats::setNames(RColorBrewer::brewer.pal(n = 5, \"YlGnBu\")[c(2, 3, 4, 5)], c(\"1\", \"2\", \"3\", \"4\"))) + \n     ggplot2::guides(\"fill\" = ggplot2::guide_legend(title = \"Histology score\",\n                                                    title.position = \"top\",\n                                                    title.hjust = 0.5))\n\n\np &lt;- p +\n     ggplot2::labs(title = \"EEF1A1\") + \n     ggplot2::theme_minimal(base_size = 20) +\n     ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_line(color = \"black\"),\n                    axis.ticks.x.top = ggplot2::element_blank(),\n                    axis.ticks.y.left = ggplot2::element_blank(),\n                    axis.ticks.y.right = ggplot2::element_line(color = \"black\"),\n                    axis.text.y.left = ggplot2::element_blank(),\n                    axis.text.y.right = ggplot2::element_text(color = \"black\"),\n                    axis.text.x.top = ggplot2::element_blank(),\n                    axis.text.x.bottom =  ggplot2::element_text(color = \"black\"),\n                    axis.title.x.bottom = ggplot2::element_text(color = \"black\"),\n                    axis.title.x.top = ggplot2::element_blank(),\n                    axis.title.y.right = ggplot2::element_blank(),\n                    axis.title.y.left = ggplot2::element_blank(),\n                    axis.line = ggplot2::element_blank(),\n                    plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                    plot.subtitle = ggplot2::element_text(hjust = 0),\n                    plot.caption = ggplot2::element_text(hjust = 1),\n                    panel.grid = ggplot2::element_blank(),\n                    panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 0.1),\n                    text = ggplot2::element_text(family = \"sans\"),\n                    plot.caption.position = \"plot\",\n                    legend.title = ggplot2::element_text(face = \"bold\", size = 20),\n                    legend.text = ggplot2::element_text(size = 20),\n                    legend.justification = \"center\",\n                    legend.key.size = ggplot2::unit(0.3, 'cm'),\n                    plot.margin = ggplot2::margin(t = 1, r = 10, b = 0, l = 10),\n                    panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 0.5),\n                    panel.grid.major = ggplot2::element_blank(),\n                    legend.position = \"bottom\",\n                    plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"))"
  },
  {
    "objectID": "viz/figures_figure_4F.html",
    "href": "viz/figures_figure_4F.html",
    "title": "Figure 4F",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in metadata.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_paired.rds\")\n\ncluster_cols &lt;- c(\"Mg Homeostatic\"= \"#ECA809\",                          \n                  \"Mg Inflammatory TAMs\" = \"#043362\",                  \n                  \"Mg Activated\"= \"#9A031E\",                 \n                  \"Mg Resident−like TAMs\"= \"#009FF5\",                    \n                  \"BMD Anti−inflammatory TAMs\"= \"#BC5210\",            \n                  \"Mg Phagocytic\"= \"#279185\",                 \n                  \"Mg IFNg TAMs\"= \"#7EB356\",                   \n                  \"Mg Stressed TAMs\"= \"#AC70FF\",                  \n                  \"Mg Inflammatory ICAM1+\"= \"#63412C\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"final_annotation\",\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2,\n                        na.value = \"grey90\")"
  },
  {
    "objectID": "viz/figures_figure_4G.html",
    "href": "viz/figures_figure_4G.html",
    "title": "Figure 4G",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in metadata.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_paired.rds\")\n\ncluster_cols &lt;- c(\"Mg Homeostatic\"= \"#ECA809\",                          \n                  \"Mg Inflammatory TAMs\" = \"#043362\",                  \n                  \"Mg Activated\"= \"#9A031E\",                 \n                  \"Mg Resident−like TAMs\"= \"#009FF5\",                    \n                  \"BMD Anti−inflammatory TAMs\"= \"#BC5210\",            \n                  \"Mg Phagocytic\"= \"#279185\",                 \n                  \"Mg IFNg TAMs\"= \"#7EB356\",                   \n                  \"Mg Stressed TAMs\"= \"#AC70FF\",                  \n                  \"Mg Inflammatory ICAM1+\"= \"#63412C\")\n\n\n\nCodep1 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH557\", \"IDH_NCH758A\")],\n                         group.by = \"final_annotation\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 1\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10)) \n\np2 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH511B\", \"IDH_NCH678K\")],\n                         group.by = \"final_annotation\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 2\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np3 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH302\", \"IDH_NCH645\")],\n                         group.by = \"final_annotation\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 3\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np4 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH988\", \"IDH_NCH2375\")],\n                         group.by = \"final_annotation\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 4\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np5 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH740W\", \"IDH_NCH2367\")],\n                         group.by = \"final_annotation\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 5\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np6 &lt;- SCpubr::do_BarPlot(sample = sample[, sample$orig.ident %in% c(\"IDH_NCH673D\", \"IDH_NCH2260\")],\n                         group.by = \"final_annotation\",\n                         split.by = \"orig.ident\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Pair 6\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 10, l = 10))\n\np7 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"final_annotation\",\n                         split.by = \"time\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.position = \"none\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5) +\n      ggplot2::xlab(\"Relapse status\") +\n      ggplot2::ylab(\"\") + \n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 10, l = 10))\n\n\np8 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"final_annotation\",\n                         split.by = \"grade\",\n                         font.size = 18,\n                         flip = TRUE,\n                         colors.use = cluster_cols,\n                         position = \"fill\",\n                         legend.title = \"\",\n                         order = FALSE,\n                         plot.grid = FALSE,\n                         add.n = TRUE,\n                         add.n.expand = c(0, 1.15),\n                         axis.text.face = \"plain\",\n                         add.n.size = 5,\n                         legend.ncol = 2) +\n      ggplot2::xlab(\"Grade\") +\n      ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\nlayout &lt;- paste(c(rep(\"A\", 2), rep(\"B\", 2), rep(\"C\", 2), rep(\"D\", 2), rep(\"E\", 2), rep(\"F\", 2), rep(\"G\", 2), rep(\"H\", 3), \"I\"), collapse = \"\\n\")\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = p3,\n                           D = p4,\n                           E = p5,\n                           F = p6,\n                           G = p7,\n                           H = p8,\n                           I = patchwork::guide_area(),\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_4H.html",
    "href": "viz/figures_figure_4H.html",
    "title": "Figure 4H",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_paired.rds\")\n\n# Define colors.\nsample$time &lt;- ifelse(sample$time == \"Primary\", \"P\", \"R\")\n\nscale.status &lt;- c(\"P\" = \"#ee9b00\",\n                  \"R\" = \"#9b2226\")\n\n\n\nCodedata &lt;-  sample@meta.data %&gt;% \n         dplyr::filter(!(.data$orig.ident %in% c(\"IDH_NCH511B\", \"IDH_NCH2367\", \"IDH_NCH740W\", \"IDH_NCH678K\"))) %&gt;% \n         dplyr::select(dplyr::all_of(c(\"final_annotation\", \"time\", \"pair\"))) %&gt;% \n         tibble::as_tibble() %&gt;%\n         dplyr::group_by(.data$time, .data$pair, .data$final_annotation) %&gt;% \n         dplyr::summarise(\"n\" = dplyr::n(),\n                         \"time\" := unique(.data$time),\n                         \"final_annotation\" := unique(.data$final_annotation),\n                         \"time\" = unique(.data$time)) %&gt;% \n         dplyr::ungroup() %&gt;% \n         tidyr::complete(.data$pair, .data$time, .data$final_annotation) %&gt;% \n         dplyr::mutate(dplyr::across(dplyr::everything(), function(x){ifelse(is.na(x), 0, x)})) %&gt;% \n         dplyr::group_by(.data$time, .data$pair) %&gt;% \n         dplyr::mutate(\"pair\" = factor(.data$pair),\n                       \"time\" = factor(.data$time),\n                       \"final_annotation\" = factor(.data$final_annotation)) %&gt;% \n         dplyr::reframe(\"freq\" = .data$n / sum(.data$n),\n                        \"time\" := unique(.data$time),\n                        \"final_annotation\" := unique(.data$final_annotation),\n                        \"pair\" := unique(.data$pair)) %&gt;% \n         tidyr::pivot_wider(names_from = \"time\",\n                            values_from = \"freq\")\n\np &lt;- data %&gt;% \n     ggpubr::ggpaired(cond1 = \"P\",\n                      cond2 = \"R\",\n                      facet.by = \"final_annotation\",\n                      color = \"black\",\n                      fill = \"condition\",\n                      label.rectangle = FALSE,\n                      width = 0.9,\n                      outlier.color = \"black\",\n                      outlier.alpha = 0.5,\n                      fatten = 1,\n                      key_glyph = \"rect\",\n                      nrow = 1) +\n     ggpubr::stat_compare_means(label = \"p.format\", \n                                paired = TRUE, \n                                method = \"wilcox.test\") +\n     ggplot2::scale_fill_manual(values = scale.status) +\n     ggplot2::theme_minimal(base_size = 20) +\n     ggplot2::theme(axis.ticks.x.bottom = ggplot2::element_line(color = \"black\"),\n                    axis.ticks.x.top = ggplot2::element_blank(),\n                    axis.ticks.y.left = ggplot2::element_line(color = \"black\"),\n                    axis.ticks.y.right = ggplot2::element_blank(),\n                    axis.text.y.left = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                    axis.text.y.right = ggplot2::element_blank(),\n                    axis.text.x.top = ggplot2::element_blank(),\n                    axis.text.x.bottom = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                    axis.title.x.bottom = ggplot2::element_blank(),\n                    axis.title.x.top = ggplot2::element_blank(),\n                    axis.title.y.right = ggplot2::element_blank(),\n                    axis.title.y.left = ggplot2::element_blank(),\n                    strip.text = ggplot2::element_text(face = \"plain\", color = \"black\"),\n                    axis.line = ggplot2::element_blank(),\n                    plot.title = ggplot2::element_text(face = \"bold\", hjust = 0),\n                    plot.subtitle = ggplot2::element_text(hjust = 0),\n                    plot.caption = ggplot2::element_text(hjust = 1),\n                    plot.title.position = \"plot\",\n                    panel.grid = ggplot2::element_blank(),\n                    panel.grid.minor.y = ggplot2::element_line(color = \"white\", linewidth = 1),\n                    text = ggplot2::element_text(family = \"sans\"),\n                    plot.caption.position = \"plot\",\n                    legend.text = ggplot2::element_text(face = \"bold\"),\n                    legend.title = ggplot2::element_text(face = \"bold\"),\n                    legend.justification = \"center\",\n                    plot.margin = ggplot2::margin(t = 40, r = 10, b = 0, l = 10),\n                    panel.border = ggplot2::element_rect(fill = NA, color = \"black\", linewidth = 1),\n                    panel.grid.major = ggplot2::element_blank(),\n                    legend.position = \"none\",\n                    legend.spacing = ggplot2::unit(10, unit = \"mm\"),\n                    plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    legend.key = ggplot2::element_rect(linewidth = 1, color = \"white\"),\n                    legend.key.size = ggplot2::unit(1, 'lines'))"
  },
  {
    "objectID": "viz/figures_figure_S1A.html",
    "href": "viz/figures_figure_S1A.html",
    "title": "Figure S1A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/merged_primary_OD.rds\")\n\n# Colors to use.\ncluster_cols &lt;- c(\"Oligo program\" = \"#043362\",                  \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro program\" = \"#9A031E\",                  \n                  \"Excluded\" = \"#4D6880\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample = sample,\n                        group.by = \"first_labelling\",\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2)"
  },
  {
    "objectID": "viz/figures_figure_S1B.html",
    "href": "viz/figures_figure_S1B.html",
    "title": "Figure S1B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/merged_primary_AS.rds\")\n\n# Colors to use.\ncluster_cols &lt;- c(\"Oligo program\" = \"#043362\",                  \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro program\" = \"#9A031E\")\n\n\n\nCodep &lt;- SCpubr::do_DimPlot(sample,\n                        group.by = \"first_labelling\",\n                        font.size = 20,\n                        raster = TRUE,\n                        raster.dpi = 2048,\n                        pt.size = 4,\n                        colors.use = cluster_cols,\n                        legend.icon.size = 8,\n                        legend.ncol = 2)"
  },
  {
    "objectID": "viz/figures_figure_S1E.html",
    "href": "viz/figures_figure_S1E.html",
    "title": "Figure S1E",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsample$relabelling &lt;- as.character(sample$relabelling)\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\n\n\nCodep &lt;- SCpubr::do_CorrelationPlot(sample,\n                                group.by = \"relabelling\",\n                                font.size = 20,\n                                legend.length = 12,\n                                legend.width = 0.5,\n                                legend.framecolor = \"grey50\",\n                                legend.tickcolor = \"white\",\n                                legend.framewidth = 0.2,\n                                legend.tickwidth = 0.2,\n                                axis.text.face = \"plain\",\n                                mode = \"hvg\", \n                                min.cutoff = -0.25,\n                                max.cutoff = 0.25,\n                                legend.title = \"P. Corr.\")"
  },
  {
    "objectID": "viz/figures_figure_S1F.html",
    "href": "viz/figures_figure_S1F.html",
    "title": "Figure S1F",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\nsample$relabelling &lt;- as.character(sample$relabelling)\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\n\n\nCodep &lt;- SCpubr::do_CorrelationPlot(sample,\n                                group.by = \"relabelling\",\n                                font.size = 20,\n                                legend.title = \"P. Corr.\",\n                                legend.length = 12,\n                                legend.width = 0.5,\n                                legend.framecolor = \"grey50\",\n                                legend.tickcolor = \"white\",\n                                legend.framewidth = 0.2,\n                                legend.tickwidth = 0.2,\n                                axis.text.face = \"plain\",\n                                mode = \"hvg\", \n                                min.cutoff = -0.25,\n                                max.cutoff = 0.25)"
  },
  {
    "objectID": "viz/figures_figure_S1G.html",
    "href": "viz/figures_figure_S1G.html",
    "title": "Figure S1G",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/Gradient_subset_OD_primary.rds\")\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs.rds\")\n\nsample$Clusters &lt;- sample$seurat_clusters\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         group.by = \"seurat_clusters\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         label = TRUE,\n                         repel = TRUE,\n                         legend.position = \"none\")\n\np2 &lt;- SCpubr::do_EnrichmentHeatmap(sample = sample,\n                                   font.size = 16,\n                                   input_gene_list = markers,\n                                   group.by = \"seurat_clusters\",\n                                   flip = TRUE,\n                                   axis.text.face = \"plain\",\n                                   legend.length = 12,\n                                   legend.width = 0.5,\n                                   legend.framecolor = \"grey50\",\n                                   legend.tickcolor = \"white\",\n                                   legend.framewidth = 0.2,\n                                   legend.tickwidth = 0.2) + \n      ggplot2::labs(x = \"Clusters\", y = \"Gene set\")"
  },
  {
    "objectID": "viz/figures_figure_S1H.html",
    "href": "viz/figures_figure_S1H.html",
    "title": "Figure S1H",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/Gradient_subset_AS_primary.rds\")\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs.rds\")\n\nsample$Clusters &lt;- sample$seurat_clusters\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         group.by = \"seurat_clusters\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         label = TRUE,\n                         repel = TRUE,\n                         legend.position = \"none\")\n\np2 &lt;- SCpubr::do_EnrichmentHeatmap(sample = sample,\n                                   font.size = 16,\n                                   input_gene_list = markers,\n                                   group.by = \"seurat_clusters\",\n                                   flip = TRUE,\n                                   axis.text.face = \"plain\",\n                                   legend.length = 12,\n                                   legend.width = 0.5,\n                                   legend.framecolor = \"grey50\",\n                                   legend.tickcolor = \"white\",\n                                   legend.framewidth = 0.2,\n                                   legend.tickwidth = 0.2) + \n      ggplot2::labs(x = \"Clusters\", y = \"Gene set\")"
  },
  {
    "objectID": "viz/figures_figure_S1I.html",
    "href": "viz/figures_figure_S1I.html",
    "title": "Figure S1I",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/Gradient_subset_AS_paired.rds\")\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs.rds\")\n\nsample$Clusters &lt;- sample$seurat_clusters\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         group.by = \"seurat_clusters\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         label = TRUE,\n                         repel = TRUE,\n                         legend.position = \"none\")\n\np2 &lt;- SCpubr::do_EnrichmentHeatmap(sample = sample,\n                                   font.size = 16,\n                                   input_gene_list = markers,\n                                   group.by = \"seurat_clusters\",\n                                   flip = TRUE,\n                                   axis.text.face = \"plain\",\n                                   legend.length = 12,\n                                   legend.width = 0.5,\n                                   legend.framecolor = \"grey50\",\n                                   legend.tickcolor = \"white\",\n                                   legend.framewidth = 0.2,\n                                   legend.tickwidth = 0.2) + \n      ggplot2::labs(x = \"Clusters\", y = \"Gene set\")"
  },
  {
    "objectID": "viz/figures_figure_S2A.html",
    "href": "viz/figures_figure_S2A.html",
    "title": "Figure S2A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\nnames(markers) &lt;- stringr::str_replace_all(names(markers), \"RA\", \"RE\")\n\n\n\nCodep &lt;- SCpubr::do_CorrelationPlot(input_gene_list = markers, \n                                mode = \"jaccard\", \n                                font.size = 20,\n                                axis.text.face = \"plain\") + \n     ggplot2::labs(x = \"Gene sets\", y = \"Gene sets\") + \n     ggplot2::theme(axis.title.y.left = ggplot2::element_text(face = \"bold\", hjust = 0.5))"
  },
  {
    "objectID": "viz/figures_figure_S2B.html",
    "href": "viz/figures_figure_S2B.html",
    "title": "Figure S2B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Cycling\" = \"#5F0F40\")\n\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\nmarkers &lt;- markers[c(\"OD_RA\", \"N_RA\", \"N2_RA\")]\nnames(markers) &lt;- c(\"OD_RE\", \"N_RE\", \"N2_RE\")\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsample &lt;- sample[, sample$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"Gradient\", \"RA\", \"Cycling\")]\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\nsample &lt;- SCpubr:::compute_enrichment_scores(sample = sample,\n                                             input_gene_list = markers)\n\nlist.selected &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/RA_overlap_selected_cells_primary_OD.rds\")\n\n\n\nCodep2 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"OD_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np3 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"N_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np4 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"N2_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np5 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$O_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"OD_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                                plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np6 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$N_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"N_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                               plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np7 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$N2_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"N2_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                                plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np8 &lt;- SCpubr::do_CorrelationPlot(input_gene_list = list.selected, \n                                 mode = \"jaccard\", \n                                 font.size = 16,\n                                 axis.text.face = \"plain\",\n                                 legend.length = 8,\n                                 legend.width = 0.5,\n                                 legend.framecolor = \"grey50\",\n                                 legend.tickcolor = \"white\",\n                                 legend.framewidth = 0.2,\n                                 legend.tickwidth = 0.2) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\nlayout &lt;-  \"CF\n            DG\n            EH\"\np &lt;- patchwork::wrap_plots(C = p2,\n                           D = p3,\n                           E = p4,\n                           F = p5,\n                           G = p6,\n                           H = p7,\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_S2C.html",
    "href": "viz/figures_figure_S2C.html",
    "title": "Figure S2C",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Cycling\" = \"#5F0F40\")\n\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\nmarkers &lt;- markers[c(\"OD_RA\", \"N_RA\", \"N2_RA\")]\nnames(markers) &lt;- c(\"OD_RE\", \"N_RE\", \"N2_RE\")\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\nsample &lt;- sample[, sample$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"Gradient\", \"RA\", \"Cycling\")]\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\nsample &lt;- SCpubr:::compute_enrichment_scores(sample = sample,\n                                             input_gene_list = markers)\n\nlist.selected &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/RA_overlap_selected_cells_primary_AS.rds\")\n\n\n\nCodep2 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"OD_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np3 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"N_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np4 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"N2_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np5 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$O_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"OD_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                                plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np6 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$N_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"N_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                               plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np7 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$N2_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"N2_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                                plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np8 &lt;- SCpubr::do_CorrelationPlot(input_gene_list = list.selected, \n                                 mode = \"jaccard\", \n                                 font.size = 16,\n                                 axis.text.face = \"plain\",\n                                 legend.length = 8,\n                                 legend.width = 0.5,\n                                 legend.framecolor = \"grey50\",\n                                 legend.tickcolor = \"white\",\n                                 legend.framewidth = 0.2,\n                                 legend.tickwidth = 0.2) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\nlayout &lt;-  \"CF\n            DG\n            EH\"\np &lt;- patchwork::wrap_plots(C = p2,\n                           D = p3,\n                           E = p4,\n                           F = p5,\n                           G = p6,\n                           H = p7,\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_S2D.html",
    "href": "viz/figures_figure_S2D.html",
    "title": "Figure S2D",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\ncluster_cols &lt;- c(\"RA\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Cycling\" = \"#5F0F40\")\n\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\nmarkers &lt;- markers[c(\"OD_RA\", \"N_RA\", \"N2_RA\")]\nnames(markers) &lt;- c(\"OD_RE\", \"N_RE\", \"N2_RE\")\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_paired_AS.rds\")\nsample &lt;- sample[, sample$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"Gradient\", \"RA\", \"Cycling\")]\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\nsample &lt;- SCpubr:::compute_enrichment_scores(sample = sample,\n                                             input_gene_list = markers)\n\nlist.selected &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/RA_overlap_selected_cells_paired_AS.rds\")\n\n\n\nCodep2 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"OD_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np3 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"N_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np4 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"N2_RE\", \n                             font.size = 16,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np5 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$O_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"OD_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                                plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np6 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$N_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"N_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                               plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np7 &lt;- SCpubr::do_DimPlot(sample = sample, \n                         cells.highlight = list.selected$N2_RA, \n                         font.size = 16,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         plot.title = \"N2_RE\") + ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5),\n                                                                plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\np8 &lt;- SCpubr::do_CorrelationPlot(input_gene_list = list.selected, \n                                 mode = \"jaccard\", \n                                 font.size = 16,\n                                 axis.text.face = \"plain\",\n                                 legend.length = 8,\n                                 legend.width = 0.5,\n                                 legend.framecolor = \"grey50\",\n                                 legend.tickcolor = \"white\",\n                                 legend.framewidth = 0.2,\n                                 legend.tickwidth = 0.2) + ggplot2::theme(plot.margin = ggplot2::margin(t = 0, r = 0, b = 0, l = 0))\n\nlayout &lt;-  \"CF\n            DG\n            EH\"\np &lt;- patchwork::wrap_plots(C = p2,\n                           D = p3,\n                           E = p4,\n                           F = p5,\n                           G = p6,\n                           H = p7,\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_S2E.html",
    "href": "viz/figures_figure_S2E.html",
    "title": "Figure S2E",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Excluded\" = \"#4D6880\",                   \n                  \"Cycling\" = \"#5F0F40\")\n\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\n\n\nCodep1 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"nCount_RNA\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE) + \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"UMIs\")\n\np2 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"nFeature_RNA\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE,\n                         legend.position = \"bottom\",\n                         legend.title = \"\") + \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"Genes\")\n\np3 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"percent.mt\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE)+ \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"Pct. Mito.\")\n\nlayout &lt;- \"ABC\n           DDD\"\n\np &lt;- patchwork::wrap_plots(A = p1, B = p2, C = p3, D = patchwork::guide_area(), design = layout, guides = \"collect\")"
  },
  {
    "objectID": "viz/figures_figure_S2F.html",
    "href": "viz/figures_figure_S2F.html",
    "title": "Figure S2F",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",                 \n                  \"Cycling\" = \"#5F0F40\")\n\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\n\n\nCodep1 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"nCount_RNA\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE) + \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"UMIs\")\n\np2 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"nFeature_RNA\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE,\n                         legend.position = \"bottom\",\n                         legend.title = \"\") + \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"Genes\")\n\np3 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"percent.mt\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE)+ \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"Pct. Mito.\")\n\nlayout &lt;- \"ABC\n           DDD\"\n\np &lt;- patchwork::wrap_plots(A = p1, B = p2, C = p3, D = patchwork::guide_area(), design = layout, guides = \"collect\")"
  },
  {
    "objectID": "viz/figures_figure_S2G.html",
    "href": "viz/figures_figure_S2G.html",
    "title": "Figure S2G",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_paired_AS.rds\")\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",                 \n                  \"Cycling\" = \"#5F0F40\")\n\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\n\n\nCodep1 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"nCount_RNA\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE) + \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"UMIs\")\n\np2 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"nFeature_RNA\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE,\n                         legend.position = \"bottom\",\n                         legend.title = \"\") + \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"Genes\")\n\np3 &lt;- SCpubr::do_BoxPlot(sample = sample, \n                         feature = \"percent.mt\", \n                         group.by = \"relabelling\", \n                         order = TRUE, \n                         colors.use = cluster_cols,\n                         boxplot.linewidth = 0.5,\n                         font.size = 16,\n                         flip = TRUE)+ \n       ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                      axis.ticks.y = ggplot2::element_blank(),\n                      axis.title.y = ggplot2::element_blank()) +\n       ggplot2::labs(x = \"\",\n                     y = \"Pct. Mito.\")\n\nlayout &lt;- \"ABC\n           DDD\"\n\np &lt;- patchwork::wrap_plots(A = p1, B = p2, C = p3, D = patchwork::guide_area(), design = layout, guides = \"collect\")"
  },
  {
    "objectID": "viz/figures_figure_S3A.html",
    "href": "viz/figures_figure_S3A.html",
    "title": "Figure S3A",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nproportions &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/spotlight_deconv_olig_pseudobulk_long.rds\")\nproportions$cell_type[proportions$cell_type == \"RA\"] &lt;- \"RE\"\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",               \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep &lt;- proportions %&gt;% \n     ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                            y = .data$proportion,\n                                            fill = .data$cell_type)) + \n     ggplot2::geom_col(color = \"black\", position = \"fill\") + \n     ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n     ggplot2::theme_minimal(base_size = 20) +\n     ggplot2::labs(x = \"Patient\",\n                   y = \"Proportion\",\n                   title = \"Oligodendroglioma\") +\n     ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                         face = \"bold\"),\n                      axis.line.x = ggplot2::element_line(color = \"black\"),\n                      axis.line.y = ggplot2::element_blank(),\n                      axis.text.x = ggplot2::element_text(color = \"black\",\n                                                          face = \"plain\",\n                                                          angle = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"angle\"]],\n                                                          hjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"hjust\"]],\n                                                          vjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"vjust\"]]),\n                      axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                      axis.ticks = ggplot2::element_line(color = \"black\"),\n                      plot.title.position = \"plot\",\n                      plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                      plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                      plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                      panel.grid = ggplot2::element_blank(),\n                      text = ggplot2::element_text(family = \"sans\"),\n                      plot.caption.position = \"plot\",\n                      legend.text = ggplot2::element_text(face = \"plain\"),\n                      legend.position = \"bottom\",\n                      legend.title = ggplot2::element_text(face = \"bold\"),\n                      legend.justification = \"center\",\n                      plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 10),\n                      plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                      panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                      legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                      strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                      strip.background = ggplot2::element_blank())"
  },
  {
    "objectID": "viz/figures_figure_S3B.html",
    "href": "viz/figures_figure_S3B.html",
    "title": "Figure S3B",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nproportions &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/spotlight_deconv_astr_pseudobulk_long.rds\")\nproportions$cell_type[proportions$cell_type == \"RA\"] &lt;- \"RE\"\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",               \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep &lt;- proportions %&gt;% \n     ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                            y = .data$proportion,\n                                            fill = .data$cell_type)) + \n     ggplot2::geom_col(color = \"black\", position = \"fill\") + \n     ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n     ggplot2::theme_minimal(base_size = 20) +\n     ggplot2::labs(x = \"Patient\",\n                   y = \"Proportion\",\n                   title = \"Astrocytoma\") +\n     ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                         face = \"bold\"),\n                      axis.line.x = ggplot2::element_line(color = \"black\"),\n                      axis.line.y = ggplot2::element_blank(),\n                      axis.text.x = ggplot2::element_text(color = \"black\",\n                                                          face = \"plain\",\n                                                          angle = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"angle\"]],\n                                                          hjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"hjust\"]],\n                                                          vjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"vjust\"]]),\n                      axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                      axis.ticks = ggplot2::element_line(color = \"black\"),\n                      plot.title.position = \"plot\",\n                      plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                      plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                      plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                      panel.grid = ggplot2::element_blank(),\n                      text = ggplot2::element_text(family = \"sans\"),\n                      plot.caption.position = \"plot\",\n                      legend.text = ggplot2::element_text(face = \"plain\"),\n                      legend.position = \"bottom\",\n                      legend.title = ggplot2::element_text(face = \"bold\"),\n                      legend.justification = \"center\",\n                      plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 10),\n                      plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                      panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                      legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                      strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                      strip.background = ggplot2::element_blank())"
  },
  {
    "objectID": "viz/figures_figure_S3C.html",
    "href": "viz/figures_figure_S3C.html",
    "title": "Figure S3C",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nproportions &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/spotlight_deconv_olig_pseudobulk_long.rds\")\nproportions$cell_type[proportions$cell_type == \"RA\"] &lt;- \"RE\"\n\nscale.ident &lt;- c(\"IDH_ACB_AD_540\" = \"#E07A5F\",\n                 \"IDH_ACB_AD_809\" = \"#F2CC8F\",\n                 \"IDH_ACB_AD_883\" = \"#DAA82B\",\n                 \"IDH_NCH2111\"    = \"#81B29A\",\n                 \"IDH_NCH536\"     = \"#3E745E\",\n                 \"IDH_NCH6341\"    = \"#5CADC1\",\n                 \"IDH_NCH6702\"    = \"#8B6BB8\",\n                 \"IDH_NCH781\"     = \"#3D405B\",\n                 \"IDH_ACB_AD_785\" = \"#ae2012\",\n                 \"IDH_ACB_AD_832\" = \"#ca6702\",\n                 \"IDH_ACB_AD_865\" = \"#ee9b00\",\n                 \"IDH_NCH2018\"    = \"#e9d8a6\",\n                 \"IDH_NCH2157\"    = \"#457b9d\",\n                 \"IDH_NCH2164\"    = \"#1d3557\")\n\n\n\nCodep &lt;- proportions %&gt;% \n     ggplot2::ggplot(mapping = ggplot2::aes(x = .data$freq,\n                                            y = .data$proportion)) + \n     ggplot2::geom_point(mapping = ggplot2::aes(fill = .data$ID),\n                         size = 4, \n                         shape = 21, \n                         color = \"black\") + \n     ggplot2::geom_abline(slope = 1, \n                          intercept = 0, \n                          linetype = \"dashed\", \n                          color = \"grey75\")  +\n     ggplot2::facet_wrap(. ~ .data$cell_type,\n                         nrow = 1,\n                         scale = \"free\") +\n     ggplot2::scale_fill_manual(values = scale.ident, name = \"\") +\n     ggpubr::stat_cor(mapping = ggplot2::aes(label = ggplot2::after_stat(rr.label)), \n                      label.y.npc = \"top\", \n                      label.x.npc = \"left\",\n                      geom = \"text\") + \n     ggplot2::theme_minimal(base_size = 12) +\n     ggplot2::labs(x = \"Ground-Truth Proportions\",\n                   y = \"Predicted Proportions\") +\n     ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                         face = \"bold\"),\n                    axis.line.x = ggplot2::element_line(color = \"black\"),\n                    axis.line.y = ggplot2::element_blank(),\n                    axis.text.x = ggplot2::element_text(color = \"black\",\n                                                        face = \"plain\",\n                                                        angle = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"angle\"]],\n                                                        hjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"hjust\"]],\n                                                        vjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"vjust\"]]),\n                    axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                    axis.ticks = ggplot2::element_line(color = \"black\"),\n                    plot.title.position = \"plot\",\n                    plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                    plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                    plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                    panel.grid = ggplot2::element_blank(),\n                    text = ggplot2::element_text(family = \"sans\"),\n                    plot.caption.position = \"plot\",\n                    legend.text = ggplot2::element_text(face = \"plain\"),\n                    legend.position = \"bottom\",\n                    legend.title = ggplot2::element_text(face = \"bold\"),\n                    legend.justification = \"center\",\n                    plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 10),\n                    plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    panel.background = ggplot2::element_rect(fill = \"white\", color = \"black\"),\n                    legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                    strip.background = ggplot2::element_blank())"
  },
  {
    "objectID": "viz/figures_figure_S3D.html",
    "href": "viz/figures_figure_S3D.html",
    "title": "Figure S3D",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nproportions &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/spotlight_deconv_astr_pseudobulk_long.rds\")\nproportions$cell_type[proportions$cell_type == \"RA\"] &lt;- \"RE\"\n\nscale.ident &lt;- c(\"IDH_ACB_AD_540\" = \"#E07A5F\",\n                 \"IDH_ACB_AD_809\" = \"#F2CC8F\",\n                 \"IDH_ACB_AD_883\" = \"#DAA82B\",\n                 \"IDH_NCH2111\"    = \"#81B29A\",\n                 \"IDH_NCH536\"     = \"#3E745E\",\n                 \"IDH_NCH6341\"    = \"#5CADC1\",\n                 \"IDH_NCH6702\"    = \"#8B6BB8\",\n                 \"IDH_NCH781\"     = \"#3D405B\",\n                 \"IDH_ACB_AD_785\" = \"#ae2012\",\n                 \"IDH_ACB_AD_832\" = \"#ca6702\",\n                 \"IDH_ACB_AD_865\" = \"#ee9b00\",\n                 \"IDH_NCH2018\"    = \"#e9d8a6\",\n                 \"IDH_NCH2157\"    = \"#457b9d\",\n                 \"IDH_NCH2164\"    = \"#1d3557\")\n\n\n\nCodep &lt;- proportions %&gt;% \n     ggplot2::ggplot(mapping = ggplot2::aes(x = .data$freq,\n                                            y = .data$proportion)) + \n     ggplot2::geom_point(mapping = ggplot2::aes(fill = .data$ID),\n                         size = 4, \n                         shape = 21, \n                         color = \"black\") + \n     ggplot2::geom_abline(slope = 1, \n                          intercept = 0, \n                          linetype = \"dashed\", \n                          color = \"grey75\")  +\n     ggplot2::facet_wrap(. ~ .data$cell_type,\n                         nrow = 1,\n                         scale = \"free\") +\n     ggplot2::scale_fill_manual(values = scale.ident, name = \"\") +\n     ggpubr::stat_cor(mapping = ggplot2::aes(label = ggplot2::after_stat(rr.label)), \n                      label.y.npc = \"top\", \n                      label.x.npc = \"left\",\n                      geom = \"text\") + \n     ggplot2::theme_minimal(base_size = 12) +\n     ggplot2::labs(x = \"Ground-Truth Proportions\",\n                   y = \"Predicted Proportions\") +\n     ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                         face = \"bold\"),\n                    axis.line.x = ggplot2::element_line(color = \"black\"),\n                    axis.line.y = ggplot2::element_blank(),\n                    axis.text.x = ggplot2::element_text(color = \"black\",\n                                                        face = \"plain\",\n                                                        angle = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"angle\"]],\n                                                        hjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"hjust\"]],\n                                                        vjust = SCpubr:::get_axis_parameters(angle = 45, flip = FALSE)[[\"vjust\"]]),\n                    axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                    axis.ticks = ggplot2::element_line(color = \"black\"),\n                    plot.title.position = \"plot\",\n                    plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                    plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                    plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                    panel.grid = ggplot2::element_blank(),\n                    text = ggplot2::element_text(family = \"sans\"),\n                    plot.caption.position = \"plot\",\n                    legend.text = ggplot2::element_text(face = \"plain\"),\n                    legend.position = \"bottom\",\n                    legend.title = ggplot2::element_text(face = \"bold\"),\n                    legend.justification = \"center\",\n                    plot.margin = ggplot2::margin(t = 10, r = 10, b = 10, l = 10),\n                    plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    panel.background = ggplot2::element_rect(fill = \"white\", color = \"black\"),\n                    legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                    strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                    strip.background = ggplot2::element_blank())"
  },
  {
    "objectID": "viz/figures_figure_S3E.html",
    "href": "viz/figures_figure_S3E.html",
    "title": "Figure S3E",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nproportions &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/spotlight_deconv_olig_TCGA.rds\")\nproportions &lt;- proportions$mat %&gt;% \n               data.frame(check.names = FALSE) %&gt;%\n               tibble::rownames_to_column(\"ID\") %&gt;%\n               tidyr::pivot_longer(cols = -ID,\n                                   names_to = \"cell_type\",\n                                   values_to = \"proportion\")\nproportions$cell_type[proportions$cell_type == \"RA\"] &lt;- \"RE\"\n\nproportions &lt;- proportions %&gt;% \n               dplyr::mutate(\"ID\" = factor(.data$ID, levels = {proportions %&gt;% dplyr::filter(.data$cell_type == \"RE\") %&gt;% dplyr::arrange(dplyr::desc(.data$proportion)) %&gt;% dplyr::pull(\"ID\")}))\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",               \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep0 &lt;- proportions %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                             y = .data$proportion,\n                                             fill = .data$cell_type)) + \n      ggplot2::geom_col(color = \"black\", position = \"fill\", linewidth = 0.25) + \n      ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n      ggplot2::theme_minimal(base_size = 20) +\n      ggplot2::labs(x = \"TCGA Oligodendroglioma Datasets\",\n                    y = \"Proportion\") +\n      ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                        face = \"bold\"),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                     axis.ticks.y = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                     plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = \"sans\"),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.position = \"bottom\",\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     strip.background = ggplot2::element_blank())\n\np1 &lt;- proportions %&gt;% \n      dplyr::filter(.data$cell_type == \"RE\") %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                             y = .data$proportion,\n                                             fill = .data$cell_type)) + \n      ggplot2::geom_col(color = \"black\", position = \"stack\", linewidth = 0.25) + \n      ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n      ggplot2::theme_minimal(base_size = 20) +\n      ggplot2::labs(x = \"\",\n                    y = \"Proportion\") +\n      ggplot2::theme(axis.title.y = ggplot2::element_text(color = \"black\",\n                                                          face = \"bold\"),\n                     axis.title.x = ggplot2::element_blank(),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                     axis.ticks.y = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_blank(),\n                     plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = \"sans\"),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.position = \"none\",\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     strip.background = ggplot2::element_blank())\n\np &lt;- patchwork::wrap_plots(list(p1, p0), ncol = 1, heights = c(0.2, 0.9))"
  },
  {
    "objectID": "viz/figures_figure_S3F.html",
    "href": "viz/figures_figure_S3F.html",
    "title": "Figure S3F",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nproportions &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/spotlight_deconv_astr_TCGA.rds\")\nproportions &lt;- proportions$mat %&gt;% \n               data.frame(check.names = FALSE) %&gt;%\n               tibble::rownames_to_column(\"ID\") %&gt;%\n               tidyr::pivot_longer(cols = -ID,\n                                   names_to = \"cell_type\",\n                                   values_to = \"proportion\")\nproportions$cell_type[proportions$cell_type == \"RA\"] &lt;- \"RE\"\nproportions &lt;- proportions %&gt;% \n               dplyr::mutate(\"ID\" = factor(.data$ID, levels = {proportions %&gt;% dplyr::filter(.data$cell_type == \"RE\") %&gt;% dplyr::arrange(dplyr::desc(.data$proportion)) %&gt;% dplyr::pull(\"ID\")}))\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",               \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep0 &lt;- proportions %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                             y = .data$proportion,\n                                             fill = .data$cell_type)) + \n      ggplot2::geom_col(color = \"black\", position = \"fill\", linewidth = 0.25) + \n      ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n      ggplot2::theme_minimal(base_size = 20) +\n      ggplot2::labs(x = \"TCGA Astrocytoma Datasets\",\n                    y = \"Proportion\") +\n      ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                        face = \"bold\"),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                     axis.ticks.y = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                     plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = \"sans\"),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.position = \"bottom\",\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     strip.background = ggplot2::element_blank())\n\np1 &lt;- proportions %&gt;% \n      dplyr::filter(.data$cell_type == \"RE\") %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                             y = .data$proportion,\n                                             fill = .data$cell_type)) + \n      ggplot2::geom_col(color = \"black\", position = \"stack\", linewidth = 0.25) + \n      ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n      ggplot2::theme_minimal(base_size = 20) +\n      ggplot2::labs(x = \"\",\n                    y = \"Proportion\") +\n      ggplot2::theme(axis.title.y = ggplot2::element_text(color = \"black\",\n                                                          face = \"bold\"),\n                     axis.title.x = ggplot2::element_blank(),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                     axis.ticks.y = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_blank(),\n                     plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = \"sans\"),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.position = \"none\",\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     strip.background = ggplot2::element_blank())\n\np &lt;- patchwork::wrap_plots(list(p1, p0), ncol = 1, heights = c(0.2, 0.9))"
  },
  {
    "objectID": "viz/figures_figure_S3G.html",
    "href": "viz/figures_figure_S3G.html",
    "title": "Figure S3G",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nproportions &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/spotlight_deconv_olig_CGGA.rds\")\nproportions &lt;- proportions$mat %&gt;% \n               data.frame(check.names = FALSE) %&gt;%\n               tibble::rownames_to_column(\"ID\") %&gt;%\n               tidyr::pivot_longer(cols = -ID,\n                                   names_to = \"cell_type\",\n                                   values_to = \"proportion\")\nproportions$cell_type[proportions$cell_type == \"RA\"] &lt;- \"RE\"\n\nproportions &lt;- proportions %&gt;% \n               dplyr::mutate(\"ID\" = factor(.data$ID, levels = {proportions %&gt;% dplyr::filter(.data$cell_type == \"RE\") %&gt;% dplyr::arrange(dplyr::desc(.data$proportion)) %&gt;% dplyr::pull(\"ID\")}))\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",               \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep0 &lt;- proportions %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                             y = .data$proportion,\n                                             fill = .data$cell_type)) + \n      ggplot2::geom_col(color = \"black\", position = \"fill\", linewidth = 0.25) + \n      ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n      ggplot2::theme_minimal(base_size = 20) +\n      ggplot2::labs(x = \"CGGA Oligodendroglioma Datasets\",\n                    y = \"Proportion\") +\n      ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                        face = \"bold\"),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                     axis.ticks.y = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                     plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = \"sans\"),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.position = \"bottom\",\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     strip.background = ggplot2::element_blank())\n\np1 &lt;- proportions %&gt;% \n      dplyr::filter(.data$cell_type == \"RE\") %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                             y = .data$proportion,\n                                             fill = .data$cell_type)) + \n      ggplot2::geom_col(color = \"black\", position = \"stack\", linewidth = 0.25) + \n      ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n      ggplot2::theme_minimal(base_size = 20) +\n      ggplot2::labs(x = \"\",\n                    y = \"Proportion\") +\n      ggplot2::theme(axis.title.y = ggplot2::element_text(color = \"black\",\n                                                          face = \"bold\"),\n                     axis.title.x = ggplot2::element_blank(),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                     axis.ticks.y = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_blank(),\n                     plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = \"sans\"),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.position = \"none\",\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     strip.background = ggplot2::element_blank())\n\np &lt;- patchwork::wrap_plots(list(p1, p0), ncol = 1, heights = c(0.2, 0.9))"
  },
  {
    "objectID": "viz/figures_figure_S3H.html",
    "href": "viz/figures_figure_S3H.html",
    "title": "Figure S3H",
    "section": "",
    "text": "Code# Inma Hernandez Lopez\n# inmaculada.hernandez-lopez@ukr.de\n# LIT -  Leibniz-Institute für Immunotherapie\n\n# Marc Elosua Bayés\n# marc.elosua@cnag.crg.eu\n# CNAG - CRG\n\n# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nproportions &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/spotlight_deconv_astr_CGGA.rds\")\nproportions &lt;- proportions$mat %&gt;% \n               data.frame(check.names = FALSE) %&gt;%\n               tibble::rownames_to_column(\"ID\") %&gt;%\n               tidyr::pivot_longer(cols = -ID,\n                                   names_to = \"cell_type\",\n                                   values_to = \"proportion\")\nproportions$cell_type[proportions$cell_type == \"RA\"] &lt;- \"RE\"\n\nproportions &lt;- proportions %&gt;% \n               dplyr::mutate(\"ID\" = factor(.data$ID, levels = {proportions %&gt;% dplyr::filter(.data$cell_type == \"RE\") %&gt;% dplyr::arrange(dplyr::desc(.data$proportion)) %&gt;% dplyr::pull(\"ID\")}))\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"T Cell\" = \"#009FF5\",                   \n                  \"Oligodendrocytes\" = \"#BC5210\",            \n                  \"Astrocytes\" = \"#279185\",                  \n                  \"Microglia\" = \"#7EB356\",                   \n                  \"Pericytes\" = \"#AC70FF\",                  \n                  \"Mixed\" = \"#8d5d3f\",                   \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Neurons\" = \"#544B81\",                   \n                  \"Endothelial\" = \"#da627d\",                 \n                  \"Astro-like\" = \"#9A031E\",               \n                  \"Cycling\" = \"#5F0F40\")\n\n\n\nCodep0 &lt;- proportions %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                             y = .data$proportion,\n                                             fill = .data$cell_type)) + \n      ggplot2::geom_col(color = \"black\", position = \"fill\", linewidth = 0.25) + \n      ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n      ggplot2::theme_minimal(base_size = 20) +\n      ggplot2::labs(x = \"CGGA Astrocytoma Datasets\",\n                    y = \"Proportion\") +\n      ggplot2::theme(axis.title = ggplot2::element_text(color = \"black\",\n                                                        face = \"bold\"),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                     axis.ticks.y = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5),\n                     plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = \"sans\"),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.position = \"bottom\",\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     strip.background = ggplot2::element_blank())\n\np1 &lt;- proportions %&gt;% \n      dplyr::filter(.data$cell_type == \"RE\") %&gt;% \n      ggplot2::ggplot(mapping = ggplot2::aes(x = .data$ID,\n                                             y = .data$proportion,\n                                             fill = .data$cell_type)) + \n      ggplot2::geom_col(color = \"black\", position = \"stack\", linewidth = 0.25) + \n      ggplot2::scale_fill_manual(values = cluster_cols, name = \"\") + \n      ggplot2::theme_minimal(base_size = 20) +\n      ggplot2::labs(x = \"\",\n                    y = \"Proportion\") +\n      ggplot2::theme(axis.title.y = ggplot2::element_text(color = \"black\",\n                                                          face = \"bold\"),\n                     axis.title.x = ggplot2::element_blank(),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     axis.text.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_text(color = \"black\", face = \"plain\"),\n                     axis.ticks.y = ggplot2::element_line(color = \"black\"),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     plot.title.position = \"plot\",\n                     plot.title = ggplot2::element_blank(),\n                     plot.subtitle = ggplot2::element_text(face = \"plain\", hjust = 0),\n                     plot.caption = ggplot2::element_text(face = \"plain\", hjust = 1),\n                     panel.grid = ggplot2::element_blank(),\n                     text = ggplot2::element_text(family = \"sans\"),\n                     plot.caption.position = \"plot\",\n                     legend.text = ggplot2::element_text(face = \"plain\"),\n                     legend.position = \"none\",\n                     legend.title = ggplot2::element_text(face = \"bold\"),\n                     legend.justification = \"center\",\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10),\n                     plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     panel.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     legend.background = ggplot2::element_rect(fill = \"white\", color = \"white\"),\n                     strip.text = ggplot2::element_text(color = \"black\", face = \"bold\"),\n                     strip.background = ggplot2::element_blank())\n\np &lt;- patchwork::wrap_plots(list(p1, p0), ncol = 1, heights = c(0.2, 0.9))"
  },
  {
    "objectID": "viz/figures_figure_S4A.html",
    "href": "viz/figures_figure_S4A.html",
    "title": "Figure S4A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/suva_OD_TB_integrated.rds\")\n\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\nmarkers.use &lt;- markers[c(\"OD_RA\", \"OD_OPC_like\", \"OD_Astro_like\", \"OD_Cycling\", \"Suva_Astro_Program\", \"Suva_Oligo_Program\", \"Suva_Stemness_Program\")]\n\ncluster_cols &lt;- c(\"Stem-like\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Astro-like\" = \"#9A031E\")\n\nannotation_cols &lt;- SCpubr:::generate_color_scale(names_use = c(\"RA\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"))\nannotation_cols[\"RA\"] &lt;-\"#ECA809\"\n\nsample &lt;- SCpubr:::compute_enrichment_scores(sample, input_gene_list = list(\"OD_RA\" = markers$OD_RA))\n\n# Get the value for which the probabilty to find a more extreme value is 5%.\ndist.test &lt;- sample@meta.data[, \"OD_RA\", drop = FALSE]\nrange.use &lt;- c(min(dist.test$OD_RA, na.rm = TRUE),\n               max(dist.test$OD_RA, na.rm  = TRUE))\n\ndf.probs &lt;- data.frame(row.names = seq(range.use[1], range.use[2], by = 0.0001))\nvector.probs &lt;- c()\nfor (i in rownames(df.probs)){\n  prob &lt;- pnorm(as.numeric(i),\n                mean = mean(dist.test$OD_RA),\n                sd = stats::sd(dist.test$OD_RA),\n                lower.tail = FALSE)\n  vector.probs &lt;- c(vector.probs, prob)\n}\ndf.probs$Prob &lt;- vector.probs\nvalue.use &lt;- df.probs %&gt;% dplyr::filter(.data$Prob &lt;= 0.05) %&gt;% head(1) %&gt;% rownames() %&gt;% as.numeric()\n\n# Define RA population based on this value.\nsample$Annotation &lt;- as.character(sample$seurat_clusters)\nsample$Annotation[names(sample$Annotation) %in% names(sample$OD_RA[sample$OD_RA &gt;= value.use])] &lt;- \"RA\"\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample, \n                         group.by = \"labelling\", \n                         font.size = 20,\n                         label = TRUE,\n                         repel = TRUE,\n                         legend.position = \"none\",\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         colors.use = cluster_cols,\n                         legend.icon.size = 8,\n                         legend.ncol = 3)\n\np2 &lt;- ggplot2::ggplot(dist.test, mapping = ggplot2::aes(x = .data$OD_RA)) +\n      ggplot2::geom_histogram(bins = 100, color = \"black\", fill = \"steelblue\") +\n      ggplot2::geom_vline(xintercept = value.use, color = \"black\") +\n      ggpubr::theme_pubr(base_size = 20) +\n      ggplot2::xlab(\"Enrichment scores for RE metaprogram\") +\n      ggplot2::ylab(\"Number of cells\") + \n      ggplot2::labs(title = \"Suva OD | Shapiro test | OD_RE \",\n                    subtitle = paste0(\"p value = \",  \n                                      format(stats::shapiro.test(dist.test$OD_RA)$p.value, scientific = FALSE),\n                                      \" | Value so that P(X &gt; Value) = 0.05: \",\n                                      round(value.use, 4)))\n\nout &lt;- SCpubr::do_AffinityAnalysisPlot(sample = sample,\n                                       input_gene_list = markers.use,\n                                       assay = \"SCT\",\n                                       slot = \"data\",\n                                       min.cutoff = NA,\n                                       max.cutoff = 2,\n                                       subsample = NA,\n                                       group.by = \"Annotation\",\n                                       return_object = TRUE, \n                                       font.size = 20,\n                                       axis.text.face = \"plain\",\n                                       legend.length = 8,\n                                       legend.width = 0.5,\n                                       legend.framecolor = \"grey50\",\n                                       legend.tickcolor = \"white\",\n                                       legend.framewidth = 0.2,\n                                       legend.tickwidth = 0.2,)\n\np3 &lt;- out$Heatmap\n\np4 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"OD_RA\",\n                             font.size = 20,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE)\n\n# Compute dataframe of averaged expression of the genes and bin it.\ndata.avg &lt;- SCpubr:::.GetAssayData(sample = sample,\n                                   assay = \"SCT\",\n                                   slot = \"data\") %&gt;% \n            Matrix::rowMeans() %&gt;%\n            as.data.frame() %&gt;% \n            dplyr::arrange(.data$.)\n\ndata.avg &lt;- data.avg %&gt;% \n            dplyr::mutate(\"rnorm\" = stats::rnorm(n = nrow(data.avg))/1e30) %&gt;% \n            dplyr::mutate(\"values.use\" = .data$. + .data$rnorm)\n# Produce the expression bins.\nbins &lt;- ggplot2::cut_number(x = data.avg %&gt;% dplyr::pull(.data$values.use) %&gt;% as.numeric(), \n                            n = 24, \n                            labels = FALSE, \n                            right = FALSE)\ndata.avg$bin &lt;- bins\n\ngeneset_list &lt;- list()\ngeneset_list[[\"OD_RA\"]] &lt;- markers.use[[\"OD_RA\"]]\n\n# Method extracted and adapted from Seurat::AddModuleScore: https://github.com/satijalab/seurat/blob/master/R/utilities.R#L272\n# Get the bin in which the list of genes is averagely placed.\nempiric_bin &lt;- data.avg %&gt;% \n               tibble::rownames_to_column(var = \"gene\") %&gt;% \n               dplyr::filter(.data$gene %in% geneset_list[[\"OD_RA\"]]) %&gt;% \n               dplyr::pull(.data$bin)\n\n\n# Generate 50 randomized control gene sets.\nfor (i in seq_len(length(geneset_list[[\"OD_RA\"]]))){\n  control_genes &lt;- NULL\n  for (bin in unique(empiric_bin)){\n    control.use &lt;- data.avg %&gt;% \n                   tibble::rownames_to_column(var = \"gene\") %&gt;% \n                   dplyr::filter(!(.data$gene %in% geneset_list[[\"OD_RA\"]])) %&gt;%\n                   dplyr::filter(.data$bin == .env$bin) %&gt;%  \n                   dplyr::pull(.data$gene) %&gt;% \n                   sample(size = sum(empiric_bin == bin), replace = FALSE)\n    control_genes &lt;- append(control_genes, control.use)\n  }\n  geneset_list[[paste0(\"Control.\", i)]] &lt;- control_genes\n}\n\n\nout &lt;- SCpubr::do_AffinityAnalysisPlot(sample = sample,\n                                       input_gene_list = geneset_list,\n                                       assay = \"SCT\",\n                                       slot = \"data\",\n                                       min.cutoff = NA,\n                                       subsample = NA,\n                                       group.by = \"Annotation\",\n                                       return_object = TRUE, \n                                       font.size = 20,\n                                       verbose = TRUE,\n                                       axis.text.face = \"plain\",\n                                       legend.length = 8,\n                                       legend.width = 0.5,\n                                       legend.framecolor = \"grey50\",\n                                       legend.tickcolor = \"white\",\n                                       legend.framewidth = 0.2,\n                                       legend.tickwidth = 0.2,\n                                       flip = TRUE)\n\np5 &lt;- out$Heatmap + ggplot2::labs(x = \"Gene set\") + ggplot2::theme(axis.title.y.left = ggplot2::element_text(hjust = 0.5))"
  },
  {
    "objectID": "viz/figures_figure_S4B.html",
    "href": "viz/figures_figure_S4B.html",
    "title": "Figure S4B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/suva_AS_TB_integrated.rds\")\n\nmarkers &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\nmarkers.use &lt;- markers[c(\"OD_RA\", \"OD_OPC_like\", \"OD_Astro_like\", \"OD_Cycling\", \"Suva_Astro_Program\", \"Suva_Oligo_Program\", \"Suva_Stemness_Program\")]\n\nannotation_cols &lt;- SCpubr:::generate_color_scale(names_use = c(\"RA\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"))\nannotation_cols[\"RA\"] &lt;-\"#ECA809\"\n\nsample &lt;- SCpubr:::compute_enrichment_scores(sample, input_gene_list = list(\"OD_RA\" = markers$OD_RA))\n\n# Get the value for which the probabilty to find a more extreme value is 5%.\ndist.test &lt;- sample@meta.data[, \"OD_RA\", drop = FALSE]\nrange.use &lt;- c(min(dist.test$OD_RA, na.rm = TRUE),\n               max(dist.test$OD_RA, na.rm  = TRUE))\n\ndf.probs &lt;- data.frame(row.names = seq(range.use[1], range.use[2], by = 0.0001))\nvector.probs &lt;- c()\nfor (i in rownames(df.probs)){\n  prob &lt;- pnorm(as.numeric(i),\n                mean = mean(dist.test$OD_RA),\n                sd = stats::sd(dist.test$OD_RA),\n                lower.tail = FALSE)\n  vector.probs &lt;- c(vector.probs, prob)\n}\ndf.probs$Prob &lt;- vector.probs\nvalue.use &lt;- df.probs %&gt;% dplyr::filter(.data$Prob &lt;= 0.05) %&gt;% head(1) %&gt;% rownames() %&gt;% as.numeric()\n\n# Define RA population based on this value.\nsample$Annotation &lt;- as.character(sample$seurat_clusters)\nsample$Annotation[names(sample$Annotation) %in% names(sample$OD_RA[sample$OD_RA &gt;= value.use])] &lt;- \"RA\"\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample, \n                         group.by = \"Annotation\", \n                         font.size = 20,\n                         label = TRUE,\n                         repel = TRUE,\n                         legend.position = \"none\",\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         colors.use = annotation_cols,\n                         legend.icon.size = 8,\n                         legend.ncol = 3)\n\np2 &lt;- ggplot2::ggplot(dist.test, mapping = ggplot2::aes(x = .data$OD_RA)) +\n      ggplot2::geom_histogram(bins = 100, color = \"black\", fill = \"steelblue\") +\n      ggplot2::geom_vline(xintercept = value.use, color = \"black\") +\n      ggpubr::theme_pubr(base_size = 20) +\n      ggplot2::xlab(\"Enrichment scores for RE metaprogram\") +\n      ggplot2::ylab(\"Number of cells\") + \n      ggplot2::labs(title = \"Suva AS | Shapiro test | OD_RE \",\n                    subtitle = paste0(\"p value = \",  \n                                      format(stats::shapiro.test(dist.test$OD_RA)$p.value, scientific = FALSE),\n                                      \" | Value so that P(X &gt; Value) = 0.05: \",\n                                      round(value.use, 4)))\n\nout &lt;- SCpubr::do_AffinityAnalysisPlot(sample = sample,\n                                       input_gene_list = markers.use,\n                                       assay = \"SCT\",\n                                       slot = \"data\",\n                                       min.cutoff = NA,\n                                       max.cutoff = 2,\n                                       subsample = NA,\n                                       group.by = \"Annotation\",\n                                       return_object = TRUE, \n                                       font.size = 20,\n                                       axis.text.face = \"plain\",\n                                       legend.length = 8,\n                                       legend.width = 0.5,\n                                       legend.framecolor = \"grey50\",\n                                       legend.tickcolor = \"white\",\n                                       legend.framewidth = 0.2,\n                                       legend.tickwidth = 0.2,)\n\np3 &lt;- out$Heatmap\n\np4 &lt;- SCpubr::do_FeaturePlot(sample = sample, \n                             features = \"OD_RA\",\n                             font.size = 20,\n                             raster = TRUE,\n                             raster.dpi = 2048,\n                             pt.size = 4,\n                             legend.length = 8,\n                             legend.width = 0.5,\n                             legend.framecolor = \"grey50\",\n                             legend.tickcolor = \"white\",\n                             legend.framewidth = 0.2,\n                             legend.tickwidth = 0.2,\n                             order = TRUE)\n\n# Compute dataframe of averaged expression of the genes and bin it.\ndata.avg &lt;- SCpubr:::.GetAssayData(sample = sample,\n                                   assay = \"SCT\",\n                                   slot = \"data\") %&gt;% \n            Matrix::rowMeans() %&gt;%\n            as.data.frame() %&gt;% \n            dplyr::arrange(.data$.)\n\ndata.avg &lt;- data.avg %&gt;% \n            dplyr::mutate(\"rnorm\" = stats::rnorm(n = nrow(data.avg))/1e30) %&gt;% \n            dplyr::mutate(\"values.use\" = .data$. + .data$rnorm)\n# Produce the expression bins.\nbins &lt;- ggplot2::cut_number(x = data.avg %&gt;% dplyr::pull(.data$values.use) %&gt;% as.numeric(), \n                            n = 24, \n                            labels = FALSE, \n                            right = FALSE)\ndata.avg$bin &lt;- bins\n\ngeneset_list &lt;- list()\ngeneset_list[[\"OD_RA\"]] &lt;- markers.use[[\"OD_RA\"]]\n\n# Method extracted and adapted from Seurat::AddModuleScore: https://github.com/satijalab/seurat/blob/master/R/utilities.R#L272\n# Get the bin in which the list of genes is averagely placed.\nempiric_bin &lt;- data.avg %&gt;% \n               tibble::rownames_to_column(var = \"gene\") %&gt;% \n               dplyr::filter(.data$gene %in% geneset_list[[\"OD_RA\"]]) %&gt;% \n               dplyr::pull(.data$bin)\n\n\n# Generate 50 randomized control gene sets.\nfor (i in seq_len(length(geneset_list[[\"OD_RA\"]]))){\n  control_genes &lt;- NULL\n  for (bin in unique(empiric_bin)){\n    control.use &lt;- data.avg %&gt;% \n                   tibble::rownames_to_column(var = \"gene\") %&gt;% \n                   dplyr::filter(!(.data$gene %in% geneset_list[[\"OD_RA\"]])) %&gt;%\n                   dplyr::filter(.data$bin == .env$bin) %&gt;%  \n                   dplyr::pull(.data$gene) %&gt;% \n                   sample(size = sum(empiric_bin == bin), replace = FALSE)\n    control_genes &lt;- append(control_genes, control.use)\n  }\n  geneset_list[[paste0(\"Control.\", i)]] &lt;- control_genes\n}\n\n\nout &lt;- SCpubr::do_AffinityAnalysisPlot(sample = sample,\n                                       input_gene_list = geneset_list,\n                                       assay = \"SCT\",\n                                       slot = \"data\",\n                                       min.cutoff = NA,\n                                       subsample = NA,\n                                       group.by = \"Annotation\",\n                                       return_object = TRUE, \n                                       font.size = 16,\n                                       verbose = TRUE,\n                                       axis.text.face = \"plain\",\n                                       legend.length = 8,\n                                       legend.width = 0.5,\n                                       legend.framecolor = \"grey50\",\n                                       legend.tickcolor = \"white\",\n                                       legend.framewidth = 0.2,\n                                       legend.tickwidth = 0.2,\n                                       flip = TRUE)\n\np5 &lt;- out$Heatmap + ggplot2::labs(x = \"Gene set\") + ggplot2::theme(axis.title.y.left = ggplot2::element_text(hjust = 0.5))"
  },
  {
    "objectID": "viz/figures_figure_S4C.html",
    "href": "viz/figures_figure_S4C.html",
    "title": "Figure S4C",
    "section": "",
    "text": "Codesample.oligo &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsample.oligo$orig.ident &lt;- stringr::str_remove_all(sample.oligo$orig.ident, \"OE0145-\")\n\nscale.ident &lt;- c(\"IDH_ACB_AD_540\" = \"#E07A5F\",\n                 \"IDH_ACB_AD_809\" = \"#F2CC8F\",\n                 \"IDH_ACB_AD_883\" = \"#DAA82B\",\n                 \"IDH_NCH2111\" = \"#81B29A\",\n                 \"IDH_NCH536\" = \"#3E745E\",\n                 \"IDH_NCH6341\" = \"#5CADC1\",\n                 \"IDH_NCH6702\" = \"#8B6BB8\",\n                 \"IDH_NCH781\" = \"#3D405B\")\n\n# Define set of markers.\nmarkers.suva &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\n\nsample.oligo &lt;- SCpubr:::compute_enrichment_scores(sample = sample.oligo,\n                                                   input_gene_list = list(\"Stemness_program\" = markers.suva$Suva_Stemness_Program),\n                                                   flavor = \"Seurat\")\n\n\n\nCodep &lt;- SCpubr::do_BoxPlot(sample = sample.oligo[, sample.oligo$relabelling == \"RA\"],\n                        feature = \"Stemness_program\",\n                        order = TRUE,\n                        group.by = \"orig.ident\",\n                        colors.use = scale.ident,\n                        font.size = 20,\n                        axis.text.face = \"plain\") +\n     ggplot2::ylab(\"Stemness enrichment score\") +\n     ggplot2::xlab(\"Patient\")"
  },
  {
    "objectID": "viz/figures_figure_S4D.html",
    "href": "viz/figures_figure_S4D.html",
    "title": "Figure S4D",
    "section": "",
    "text": "Codesample.astro &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\nsample.astro$orig.ident &lt;- stringr::str_remove_all(sample.astro$orig.ident, \"OE0145-\")\n\nscale.ident &lt;- c(\"IDH_ACB_AD_785\" = \"#ae2012\",\n                 \"IDH_ACB_AD_832\" = \"#ca6702\",\n                 \"IDH_ACB_AD_865\" = \"#ee9b00\",\n                 \"IDH_NCH2018\" = \"#e9d8a6\",\n                 \"IDH_NCH2157\" = \"#457b9d\")\n\n# Define set of markers.\nmarkers.suva &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/IDH_gliomas_TB_annotation_kit_with_Suva_programs_and_metaprogram_iterations.rds\")\n\nsample.astro &lt;- SCpubr:::compute_enrichment_scores(sample = sample.astro,\n                                                   input_gene_list = list(\"Stemness_program\" = markers.suva$Suva_Stemness_Program),\n                                                   flavor = \"Seurat\")\n\n\n\nCodep &lt;- SCpubr::do_BoxPlot(sample = sample.astro[, sample.astro$relabelling == \"RA\"],\n                        feature = \"Stemness_program\",\n                        order = TRUE,\n                        group.by = \"orig.ident\",\n                        colors.use = scale.ident,\n                        font.size = 20,\n                        axis.text.face = \"plain\") +\n     ggplot2::ylab(\"Stemness enrichment score\") +\n     ggplot2::xlab(\"Patient\")"
  },
  {
    "objectID": "viz/figures_figure_S6A.html",
    "href": "viz/figures_figure_S6A.html",
    "title": "Figure S6A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nlibrary(fetusref.SeuratData)\nfetusref &lt;- readRDS(\"/home/e420a/R/x86_64-pc-linux-gnu-library/4.2/fetusref.SeuratData/azimuth/ref.Rds\")\nSeurat::Idents(fetusref) &lt;- fetusref$annotation.l1\nfetusref@reductions$refDR &lt;- NULL\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsample &lt;- sample[, sample$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"RA\", \"Gradient\", \"Cycling\")]\nsample$relabelling &lt;- factor(sample$relabelling, levels = c(\"Astro-like\", \"Cycling\", \"Gradient\", \"OPC-like\", \"RA\"))\nSeurat::Idents(sample) &lt;- sample$relabelling\n\ncluster_cols &lt;- c(\"RA\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",\n                  \"T Cell\" = \"#009FF5\",\n                  \"Oligodendrocytes\" = \"#BC5210\",\n                  \"Astrocytes\" = \"#279185\",\n                  \"Microglia\" = \"#7EB356\",\n                  \"Pericytes\" = \"#AC70FF\",\n                  \"Mixed\" = \"#8d5d3f\",\n                  \"Gradient\" = \"#D6D6D6\",\n                  \"Neurons\" = \"#544B81\",\n                  \"Endothelial\" = \"#da627d\",\n                  \"Astro-like\" = \"#9A031E\",\n                  \"Excluded\" = \"#4D6880\",\n                  \"Cycling\" = \"#5F0F40\")\n\nsample &lt;- Azimuth::RunAzimuth(sample, \n                              reference = \"fetusref\",\n                              annotation.levels = c(\"annotation.l1\"))\n\n# Prepare sample metadata and apply desired cutoffs.\nsample@meta.data &lt;- sample@meta.data %&gt;%\n                    tibble::rownames_to_column(var = \"cell\") %&gt;%\n                    dplyr::left_join(by = \"cell\",\n                                     y = {sample@meta.data %&gt;%\n                                          tibble::rownames_to_column(var = \"cell\") %&gt;%\n                                          dplyr::select(dplyr::all_of(c(\"cell\", \"predicted.annotation.l1\", \"predicted.annotation.l1.score\", \"mapping.score\"))) %&gt;%\n                                          dplyr::rowwise() %&gt;%\n                                          dplyr::mutate(\"inferred_annotation\" = if (.data[[\"predicted.annotation.l1.score\"]] &gt;= 0.75 &\n                                                                                    .data[[\"mapping.score\"]] &gt;= 0){.data[[\"predicted.annotation.l1\"]]} else {NA}) %&gt;%\n                                          dplyr::select(c(\"cell\", \"inferred_annotation\"))}) %&gt;%\n                    tibble::column_to_rownames(var = \"cell\")\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"umap\",\n                         colors.use = cluster_cols,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\np2 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"ref.umap\",\n                         colors.use = cluster_cols,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\n# Add reference coordinates.\ndata &lt;- as.data.frame(fetusref@reductions$refUMAP@cell.embeddings)\ncolnames(data) &lt;- c(\"x\", \"y\")\n\nbase_layer &lt;- scattermore::geom_scattermore(data = data,\n                                            mapping = ggplot2::aes(x = .data$x,\n                                                                   y = .data$y),\n                                            color = \"grey75\",\n                                            size = 4,\n                                            stroke = 4 / 2,\n                                            show.legend = FALSE,\n                                            pointsize = 4,\n                                            pixels = c(2048, 2048))\np2$layers &lt;- append(base_layer, p2$layers)\n\nbase_layer &lt;- scattermore::geom_scattermore(data = data,\n                                            mapping = ggplot2::aes(x = .data$x,\n                                                                   y = .data$y),\n                                            color = \"black\",\n                                            size = 4 * 2,\n                                            stroke = 4 / 2,\n                                            show.legend = FALSE,\n                                            pointsize = 4 * 2,\n                                            pixels = c(2048, 2048))\np2$layers &lt;- append(base_layer, p2$layers)\n\np3 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"umap\",\n                         group.by = \"inferred_annotation\",\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\np4 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"inferred_annotation\",\n                         split.by = \"relabelling\",\n                         position = \"fill\",\n                         legend.title = \"Predicted cell types\",\n                         font.size = 20,\n                         axis.text.face = \"plain\",\n                         legend.ncol = 2) + \n      ggplot2::xlab(\"Tumor identities\")\n\np &lt;- (p1 | p2) / (p3 | p4)"
  },
  {
    "objectID": "viz/figures_figure_S6B.html",
    "href": "viz/figures_figure_S6B.html",
    "title": "Figure S6B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nlibrary(fetusref.SeuratData)\nfetusref &lt;- readRDS(\"/home/e420a/R/x86_64-pc-linux-gnu-library/4.2/fetusref.SeuratData/azimuth/ref.Rds\")\nSeurat::Idents(fetusref) &lt;- fetusref$annotation.l1\nfetusref@reductions$refDR &lt;- NULL\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\nsample &lt;- sample[, sample$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"RA\", \"Gradient\", \"Cycling\")]\nsample$relabelling &lt;- factor(sample$relabelling, levels = c(\"Astro-like\", \"Cycling\", \"Gradient\", \"OPC-like\", \"RA\"))\nSeurat::Idents(sample) &lt;- sample$relabelling\n\ncluster_cols &lt;- c(\"RA\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",\n                  \"T Cell\" = \"#009FF5\",\n                  \"Oligodendrocytes\" = \"#BC5210\",\n                  \"Astrocytes\" = \"#279185\",\n                  \"Microglia\" = \"#7EB356\",\n                  \"Pericytes\" = \"#AC70FF\",\n                  \"Mixed\" = \"#8d5d3f\",\n                  \"Gradient\" = \"#D6D6D6\",\n                  \"Neurons\" = \"#544B81\",\n                  \"Endothelial\" = \"#da627d\",\n                  \"Astro-like\" = \"#9A031E\",\n                  \"Excluded\" = \"#4D6880\",\n                  \"Cycling\" = \"#5F0F40\")\n\nsample &lt;- Azimuth::RunAzimuth(sample, \n                              reference = \"fetusref\",\n                              annotation.levels = c(\"annotation.l1\"))\n\n# Prepare sample metadata and apply desired cutoffs.\nsample@meta.data &lt;- sample@meta.data %&gt;%\n                    tibble::rownames_to_column(var = \"cell\") %&gt;%\n                    dplyr::left_join(by = \"cell\",\n                                     y = {sample@meta.data %&gt;%\n                                          tibble::rownames_to_column(var = \"cell\") %&gt;%\n                                          dplyr::select(dplyr::all_of(c(\"cell\", \"predicted.annotation.l1\", \"predicted.annotation.l1.score\", \"mapping.score\"))) %&gt;%\n                                          dplyr::rowwise() %&gt;%\n                                          dplyr::mutate(\"inferred_annotation\" = if (.data[[\"predicted.annotation.l1.score\"]] &gt;= 0.75 &\n                                                                                    .data[[\"mapping.score\"]] &gt;= 0){.data[[\"predicted.annotation.l1\"]]} else {NA}) %&gt;%\n                                          dplyr::select(c(\"cell\", \"inferred_annotation\"))}) %&gt;%\n                    tibble::column_to_rownames(var = \"cell\")\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"umap\",\n                         colors.use = cluster_cols,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\np2 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"ref.umap\",\n                         colors.use = cluster_cols,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\n# Add reference coordinates.\ndata &lt;- as.data.frame(fetusref@reductions$refUMAP@cell.embeddings)\ncolnames(data) &lt;- c(\"x\", \"y\")\n\nbase_layer &lt;- scattermore::geom_scattermore(data = data,\n                                            mapping = ggplot2::aes(x = .data$x,\n                                                                   y = .data$y),\n                                            color = \"grey75\",\n                                            size = 4,\n                                            stroke = 4 / 2,\n                                            show.legend = FALSE,\n                                            pointsize = 4,\n                                            pixels = c(2048, 2048))\np2$layers &lt;- append(base_layer, p2$layers)\n\nbase_layer &lt;- scattermore::geom_scattermore(data = data,\n                                            mapping = ggplot2::aes(x = .data$x,\n                                                                   y = .data$y),\n                                            color = \"black\",\n                                            size = 4 * 2,\n                                            stroke = 4 / 2,\n                                            show.legend = FALSE,\n                                            pointsize = 4 * 2,\n                                            pixels = c(2048, 2048))\np2$layers &lt;- append(base_layer, p2$layers)\n\np3 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"umap\",\n                         group.by = \"inferred_annotation\",\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\np4 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"inferred_annotation\",\n                         split.by = \"relabelling\",\n                         position = \"fill\",\n                         legend.title = \"Predicted cell types\",\n                         font.size = 20,\n                         axis.text.face = \"plain\",\n                         legend.ncol = 2) + \n      ggplot2::xlab(\"Tumor identities\")\n\np &lt;- (p1 | p2) / (p3 | p4)"
  },
  {
    "objectID": "viz/figures_figure_S6C.html",
    "href": "viz/figures_figure_S6C.html",
    "title": "Figure S6C",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nlibrary(Azimuth)\nlibrary(Seurat)\nsource(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/modified_azimuth.R\")\nazimuth_core &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/azimuth_core_GBmap.rds\")\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsample &lt;- sample[, sample$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"RA\", \"Gradient\", \"Cycling\")]\nsample$relabelling &lt;- factor(sample$relabelling, levels = c(\"Astro-like\", \"Cycling\", \"Gradient\", \"OPC-like\", \"RA\"))\nSeurat::Idents(sample) &lt;- sample$relabelling\n\nSeurat::DefaultAssay(sample) &lt;- \"RNA\"\nsample &lt;- Seurat::NormalizeData(sample)\nsample &lt;- Seurat::FindVariableFeatures(sample)\nsample &lt;- Seurat::ScaleData(sample)\n\ncluster_cols &lt;- c(\"RA\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",\n                  \"T Cell\" = \"#009FF5\",\n                  \"Oligodendrocytes\" = \"#BC5210\",\n                  \"Astrocytes\" = \"#279185\",\n                  \"Microglia\" = \"#7EB356\",\n                  \"Pericytes\" = \"#AC70FF\",\n                  \"Mixed\" = \"#8d5d3f\",\n                  \"Gradient\" = \"#D6D6D6\",\n                  \"Neurons\" = \"#544B81\",\n                  \"Endothelial\" = \"#da627d\",\n                  \"Astro-like\" = \"#9A031E\",\n                  \"Excluded\" = \"#4D6880\",\n                  \"Cycling\" = \"#5F0F40\")\n\nsample &lt;- Azimuth::RunAzimuth(sample, \n                              reference = azimuth_core,\n                              annotation.levels = c(\"annotation_level_3\"))\n\n\n# Prepare sample metadata and apply desired cutoffs.\nsample@meta.data &lt;- sample@meta.data %&gt;%\n                    tibble::rownames_to_column(var = \"cell\") %&gt;%\n                    dplyr::left_join(by = \"cell\",\n                                     y = {sample@meta.data %&gt;%\n                                          tibble::rownames_to_column(var = \"cell\") %&gt;%\n                                          dplyr::select(dplyr::all_of(c(\"cell\", \"predicted.annotation_level_3\", \"predicted.annotation_level_3.score\", \"mapping.score\"))) %&gt;%\n                                          dplyr::rowwise() %&gt;%\n                                          dplyr::mutate(\"inferred_annotation\" = if (.data[[\"predicted.annotation_level_3.score\"]] &gt;= 0.75 &\n                                                                                    .data[[\"mapping.score\"]] &gt;= 0){.data[[\"predicted.annotation_level_3\"]]} else {NA}) %&gt;%\n                                          dplyr::select(c(\"cell\", \"inferred_annotation\"))}) %&gt;%\n                    tibble::column_to_rownames(var = \"cell\")\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"umap\",\n                         colors.use = cluster_cols,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\np2 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"ref.umap\",\n                         colors.use = cluster_cols,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\n# Add reference coordinates.\ndata &lt;- as.data.frame(azimuth_core@reductions$umap@cell.embeddings)\ncolnames(data) &lt;- c(\"x\", \"y\")\n\nbase_layer &lt;- scattermore::geom_scattermore(data = data,\n                                            mapping = ggplot2::aes(x = .data$x,\n                                                                   y = .data$y),\n                                            color = \"grey75\",\n                                            size = 4,\n                                            stroke = 4 / 2,\n                                            show.legend = FALSE,\n                                            pointsize = 4,\n                                            pixels = c(2048, 2048))\np2$layers &lt;- append(base_layer, p2$layers)\n\nbase_layer &lt;- scattermore::geom_scattermore(data = data,\n                                            mapping = ggplot2::aes(x = .data$x,\n                                                                   y = .data$y),\n                                            color = \"black\",\n                                            size = 4 * 2,\n                                            stroke = 4 / 2,\n                                            show.legend = FALSE,\n                                            pointsize = 4 * 2,\n                                            pixels = c(2048, 2048))\np2$layers &lt;- append(base_layer, p2$layers)\n\np3 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"umap\",\n                         group.by = \"inferred_annotation\",\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\np4 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"inferred_annotation\",\n                         split.by = \"relabelling\",\n                         position = \"fill\",\n                         legend.title = \"Predicted cell types\",\n                         font.size = 20,\n                         axis.text.face = \"plain\",\n                         legend.ncol = 2) + \n      ggplot2::xlab(\"Tumor identities\")\n\np &lt;- (p1 | p2) / (p3 | p4)"
  },
  {
    "objectID": "viz/figures_figure_S6D.html",
    "href": "viz/figures_figure_S6D.html",
    "title": "Figure S6D",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nlibrary(Azimuth)\nlibrary(Seurat)\nsource(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/modified_azimuth.R\")\nazimuth_core &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/azimuth_core_GBmap.rds\")\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\nsample &lt;- sample[, sample$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"RA\", \"Gradient\", \"Cycling\")]\nsample$relabelling &lt;- factor(sample$relabelling, levels = c(\"Astro-like\", \"Cycling\", \"Gradient\", \"OPC-like\", \"RA\"))\nSeurat::Idents(sample) &lt;- sample$relabelling\n\nSeurat::DefaultAssay(sample) &lt;- \"RNA\"\nsample &lt;- Seurat::NormalizeData(sample)\nsample &lt;- Seurat::FindVariableFeatures(sample)\nsample &lt;- Seurat::ScaleData(sample)\n\ncluster_cols &lt;- c(\"RA\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",\n                  \"T Cell\" = \"#009FF5\",\n                  \"Oligodendrocytes\" = \"#BC5210\",\n                  \"Astrocytes\" = \"#279185\",\n                  \"Microglia\" = \"#7EB356\",\n                  \"Pericytes\" = \"#AC70FF\",\n                  \"Mixed\" = \"#8d5d3f\",\n                  \"Gradient\" = \"#D6D6D6\",\n                  \"Neurons\" = \"#544B81\",\n                  \"Endothelial\" = \"#da627d\",\n                  \"Astro-like\" = \"#9A031E\",\n                  \"Excluded\" = \"#4D6880\",\n                  \"Cycling\" = \"#5F0F40\")\n\nsample &lt;- Azimuth::RunAzimuth(sample, \n                              reference = azimuth_core,\n                              annotation.levels = c(\"annotation_level_3\"))\n\n\n# Prepare sample metadata and apply desired cutoffs.\nsample@meta.data &lt;- sample@meta.data %&gt;%\n                    tibble::rownames_to_column(var = \"cell\") %&gt;%\n                    dplyr::left_join(by = \"cell\",\n                                     y = {sample@meta.data %&gt;%\n                                          tibble::rownames_to_column(var = \"cell\") %&gt;%\n                                          dplyr::select(dplyr::all_of(c(\"cell\", \"predicted.annotation_level_3\", \"predicted.annotation_level_3.score\", \"mapping.score\"))) %&gt;%\n                                          dplyr::rowwise() %&gt;%\n                                          dplyr::mutate(\"inferred_annotation\" = if (.data[[\"predicted.annotation_level_3.score\"]] &gt;= 0.75 &\n                                                                                    .data[[\"mapping.score\"]] &gt;= 0){.data[[\"predicted.annotation_level_3\"]]} else {NA}) %&gt;%\n                                          dplyr::select(c(\"cell\", \"inferred_annotation\"))}) %&gt;%\n                    tibble::column_to_rownames(var = \"cell\")\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"umap\",\n                         colors.use = cluster_cols,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\np2 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"ref.umap\",\n                         colors.use = cluster_cols,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\n# Add reference coordinates.\ndata &lt;- as.data.frame(azimuth_core@reductions$umap@cell.embeddings)\ncolnames(data) &lt;- c(\"x\", \"y\")\n\nbase_layer &lt;- scattermore::geom_scattermore(data = data,\n                                            mapping = ggplot2::aes(x = .data$x,\n                                                                   y = .data$y),\n                                            color = \"grey75\",\n                                            size = 4,\n                                            stroke = 4 / 2,\n                                            show.legend = FALSE,\n                                            pointsize = 4,\n                                            pixels = c(2048, 2048))\np2$layers &lt;- append(base_layer, p2$layers)\n\nbase_layer &lt;- scattermore::geom_scattermore(data = data,\n                                            mapping = ggplot2::aes(x = .data$x,\n                                                                   y = .data$y),\n                                            color = \"black\",\n                                            size = 4 * 2,\n                                            stroke = 4 / 2,\n                                            show.legend = FALSE,\n                                            pointsize = 4 * 2,\n                                            pixels = c(2048, 2048))\np2$layers &lt;- append(base_layer, p2$layers)\n\np3 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         reduction = \"umap\",\n                         group.by = \"inferred_annotation\",\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 4,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         font.size = 20)\n\np4 &lt;- SCpubr::do_BarPlot(sample = sample,\n                         group.by = \"inferred_annotation\",\n                         split.by = \"relabelling\",\n                         position = \"fill\",\n                         legend.title = \"Predicted cell types\",\n                         font.size = 20,\n                         axis.text.face = \"plain\",\n                         legend.ncol = 2) + \n      ggplot2::xlab(\"Tumor identities\")\n\np &lt;- (p1 | p2) / (p3 | p4)"
  },
  {
    "objectID": "viz/figures_figure_S7A.html",
    "href": "viz/figures_figure_S7A.html",
    "title": "Figure S7A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_OD.rds\")\n\nscale.ident &lt;- c(\"IDH_ACB_AD_809\" = \"#F2CC8F\",\n                 \"IDH_ACB_AD_883\" = \"#DAA82B\",\n                 \"IDH_NCH2111\" = \"#81B29A\",\n                 \"IDH_NCH6341\" = \"#5CADC1\")\n\nsample$orig.ident &lt;- stringr::str_replace_all(sample$orig.ident, \"OE0145-\", \"\")\n\n\n\nCodep1 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"percentage_reads_in_peaks\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"Pct. Reads in Peaks\",\n                    x = \"\") +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.title.x = ggplot2::element_blank())\n\np2 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"peak_region_fragments\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"Peak region fragments\",\n                    x = \"\") +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.title.x = ggplot2::element_blank())\n\np3 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"blacklist_ratio\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"Blacklist ratio\",\n                    x = \"\") +\n      ggplot2::scale_y_continuous(limits = c(0, 0.0075)) +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.title.x = ggplot2::element_blank())\n\np4 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"TSS.enrichment\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"TSS enrichment\",\n                    x = \"\") +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.title.x = ggplot2::element_blank())\n\np5 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"nucleosome_signal\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"Nucleosome signal\",\n                    x = \"Patient\") +\n      ggplot2::scale_y_continuous(limits = c(0, 0.75))\n\np &lt;- p1 / p2 / p3 / p4 / p5"
  },
  {
    "objectID": "viz/figures_figure_S7B.html",
    "href": "viz/figures_figure_S7B.html",
    "title": "Figure S7B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/primary_ATAC_AS.rds\")\n\nscale.ident &lt;- c(\"IDH_ACB_AD_832\" = \"#ca6702\",\n                 \"IDH_ACB_AD_865\" = \"#ee9b00\",\n                 \"IDH_NCH2018\" = \"#e9d8a6\",\n                 \"IDH_NCH2157\" = \"#457b9d\",\n                 \"IDH_NCH2164\" = \"#1d3557\")\n\nsample$orig.ident &lt;- stringr::str_replace_all(sample$orig.ident, \"OE0145-\", \"\")\n\n\n\nCodep1 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"percentage_reads_in_peaks\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"Pct. Reads in Peaks\",\n                    x = \"\") +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.title.x = ggplot2::element_blank())\n\np2 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"peak_region_fragments\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"Peak region fragments\",\n                    x = \"\") +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.title.x = ggplot2::element_blank())\n\np3 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"blacklist_ratio\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"Blacklist ratio\",\n                    x = \"\") +\n      ggplot2::scale_y_continuous(limits = c(0, 0.0075)) +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.title.x = ggplot2::element_blank())\n\np4 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"TSS.enrichment\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"TSS enrichment\",\n                    x = \"\") +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.title.x = ggplot2::element_blank())\n\np5 &lt;- SCpubr::do_ViolinPlot(sample = sample,\n                            group.by = \"orig.ident\",\n                            features = \"nucleosome_signal\",\n                            colors.use = scale.ident,\n                            boxplot_width = 0.05,\n                            font.size = 20,\n                            axis.text.face = \"plain\") + \n      ggplot2::labs(y = \"Nucleosome signal\",\n                    x = \"Patient\") +\n      ggplot2::scale_y_continuous(limits = c(0, 1.5))\n\np &lt;- p1 / p2 / p3 / p4 / p5"
  },
  {
    "objectID": "viz/figures_figure_S8A.html",
    "href": "viz/figures_figure_S8A.html",
    "title": "Figure S8A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Load samples.\nmicroglia_primary &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_primary.rds\")\n\n\n\nCode# Manually picked features from the NMF metaprograms.\n\nfeatures &lt;- list(\"Mg Homeostatic\"= c(\"PTPRC\", \"ITGAM\", \"P2RY12\"),                          \n                 \"Mg Inflammatory TAMs\" = c(\"CCL4\", \"IL1B\", \"CCL3\"),                  \n                 \"Mg Activated\"= c(\"CX3CR1\", \"GPR34\", \"FOXP2\"),                 \n                 \"Mg Resident−like TAMs\"= c(\"PLCL1\", \"CEBPD\", \"VIM\"),                    \n                 \"BMD Anti−inflammatory TAMs\"= c(\"CD163\", \"SELENOP\", \"MRC1\"),            \n                 \"Mg Phagocytic\"= c(\"GPNMB\", \"RGCC\", \"PPARG\"),                 \n                 \"Mg IFNg TAMs\"= c(\"IFIT2\", \"IFIT3\", \"STAT1\"),                   \n                 \"Mg Stressed TAMs\"= c(\"HSPA1A\", \"HSPA1B\", \"SORCS2\"),                  \n                 \"Mg Inflammatory ICAM1+\"= c(\"RELB\", \"ICAM1\", \"TNFAIP3\"),                  \n                 \"BAMs\" = c(\"LYVE1\", \"APOC1\", \"MERTK\"))\n\n\n\np1 &lt;- SCpubr::do_DotPlot(microglia_primary[, microglia_primary$subtype == \"Oligodendroglioma\"],\n                         features = features,\n                         group.by = \"final_annotation\",\n                         assay = \"RNA\",\n                         legend.title = \"OD | Avg. Exp.\",\n                         legend.length = 8,\n                         legend.width = 0.5,\n                         legend.framecolor = \"grey50\",\n                         legend.tickcolor = \"white\",\n                         legend.framewidth = 0.2,\n                         legend.tickwidth = 0.2,\n                         font.size = 20,\n                         axis.text.face = \"plain\") + \n      ggplot2::ylab(\"OD\") + \n      ggplot2::theme(axis.text.x.bottom = ggplot2::element_blank(),\n                     axis.ticks.x.bottom = ggplot2::element_blank(),\n                     axis.line.x.bottom = ggplot2::element_blank(),\n                     strip.background = ggplot2::element_blank(),\n                     strip.text.x.top = ggplot2::element_text(face = \"plain\"),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 5, l = 10))\n\np2 &lt;- SCpubr::do_DotPlot(microglia_primary[, microglia_primary$subtype == \"Astrocytoma\"],\n                         features = features,\n                         group.by = \"final_annotation\",\n                         assay = \"RNA\",\n                         sequential.palette = \"YlOrRd\",\n                         legend.title = \"AS | Avg. Exp.\",\n                         legend.length = 8,\n                         legend.width = 0.5,\n                         legend.framecolor = \"grey50\",\n                         legend.tickcolor = \"white\",\n                         legend.framewidth = 0.2,\n                         legend.tickwidth = 0.2,\n                         font.size = 20,\n                         axis.text.face = \"plain\") + \n      ggplot2::ylab(\"AS\") + \n      ggplot2::theme(strip.background = ggplot2::element_blank(),\n                     strip.text.x.top = ggplot2::element_blank(),     \n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np1$guides$size$title &lt;- \"OD | Pct. Exp.\"\np2$guides$size$title &lt;- \"AS | Pct. Exp.\"\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = patchwork::guide_area(),\n                           design = \"A\n                                     B\n                                     C\",\n                           guides = \"collect\") + \n     patchwork::plot_annotation(theme = ggplot2::theme(legend.position = \"bottom\"))"
  },
  {
    "objectID": "viz/figures_figure_S8B.html",
    "href": "viz/figures_figure_S8B.html",
    "title": "Figure S8B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_primary.rds\")\n\n# Define colors.\ncluster_cols &lt;- c(\"Mg Homeostatic\"= \"#ECA809\",                          \n                  \"Mg Inflammatory TAMs\" = \"#043362\",                  \n                  \"Mg Activated\"= \"#9A031E\",                 \n                  \"Mg Resident−like TAMs\"= \"#009FF5\",                    \n                  \"BMD Anti−inflammatory TAMs\"= \"#BC5210\",            \n                  \"Mg Phagocytic\"= \"#279185\",                 \n                  \"Mg IFNg TAMs\"= \"#7EB356\",                   \n                  \"Mg Stressed TAMs\"= \"#AC70FF\",                  \n                  \"Mg Inflammatory ICAM1+\"= \"#63412C\",                  \n                  \"BAMs\" = \"#5F0F40\")\n\nscale.subtype.short &lt;- c(\"Astrocytoma\" = \"#b38b14\",\n                         \"Oligodendroglioma\" = \"#3c5b8b\")\n\n\nmarkers &lt;- readr::read_tsv(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/TAM_markers.tsv\")\nmarkers &lt;- lapply(as.list(markers), function(x){x[!is.na(x)]})\nmarkers &lt;- markers[c(\"Pro-Inflammatory\", \"Anti-Inflammatory\")]\nnames(markers) &lt;- c(\"Pro_Inflammatory\", \"Anti_Inflammatory\")\n\nsample &lt;- SCpubr:::compute_enrichment_scores(sample = sample,\n                                             input_gene_list = markers,\n                                             flavor = \"UCell\",\n                                             assay = \"RNA\")\n\n\n\nCodeout &lt;- SCpubr:::compute_umap_layer(sample,\n                                   labels = colnames(sample@reductions[[\"umap\"]][[]])[1:2],\n                                   border.color = \"black\",\n                                   pt.size = 1,\n                                   border.size = 2)\n\np1 &lt;- SCpubr::do_NebulosaPlot(sample[, sample$subtype == \"Astrocytoma\"], \n                              features = \"Anti_Inflammatory\",\n                              font.size = 20,\n                              use_viridis = FALSE,\n                              plot.title = \"Anti Inflammatory TAMs | AS\",\n                              sequential.direction = 1) + ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5))\np1$layers &lt;- append(out$na_layer, p1$layers)\np1$layers &lt;- append(out$base_layer, p1$layers)\n\np2 &lt;- SCpubr::do_NebulosaPlot(sample[, sample$subtype == \"Oligodendroglioma\"], \n                              features = \"Anti_Inflammatory\",\n                              font.size = 20,\n                              use_viridis = FALSE,\n                              plot.title = \"Anti Inflammatory TAMs | OD\",\n                              sequential.direction = 1) + ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5))\np2$layers &lt;- append(out$na_layer, p2$layers)\np2$layers &lt;- append(out$base_layer, p2$layers)\n\np &lt;- p2 | p1"
  },
  {
    "objectID": "viz/figures_figure_S8C.html",
    "href": "viz/figures_figure_S8C.html",
    "title": "Figure S8C",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_primary.rds\")\n\n# Define colors.\ncluster_cols &lt;- c(\"Mg Homeostatic\"= \"#ECA809\",                          \n                  \"Mg Inflammatory TAMs\" = \"#043362\",                  \n                  \"Mg Activated\"= \"#9A031E\",                 \n                  \"Mg Resident−like TAMs\"= \"#009FF5\",                    \n                  \"BMD Anti−inflammatory TAMs\"= \"#BC5210\",            \n                  \"Mg Phagocytic\"= \"#279185\",                 \n                  \"Mg IFNg TAMs\"= \"#7EB356\",                   \n                  \"Mg Stressed TAMs\"= \"#AC70FF\",                  \n                  \"Mg Inflammatory ICAM1+\"= \"#63412C\",                  \n                  \"BAMs\" = \"#5F0F40\")\n\nscale.subtype.short &lt;- c(\"Astrocytoma\" = \"#b38b14\",\n                         \"Oligodendroglioma\" = \"#3c5b8b\")\n\n\nmarkers &lt;- readr::read_tsv(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/TAM_markers.tsv\")\nmarkers &lt;- lapply(as.list(markers), function(x){x[!is.na(x)]})\nmarkers &lt;- markers[c(\"Pro-Inflammatory\", \"Anti-Inflammatory\")]\nnames(markers) &lt;- c(\"Pro_Inflammatory\", \"Anti_Inflammatory\")\n\nsample &lt;- SCpubr:::compute_enrichment_scores(sample = sample,\n                                             input_gene_list = markers,\n                                             flavor = \"UCell\",\n                                             assay = \"RNA\")\n\n\n\nCodeout &lt;- SCpubr:::compute_umap_layer(sample,\n                                   labels = colnames(sample@reductions[[\"umap\"]][[]])[1:2],\n                                   border.color = \"black\",\n                                   pt.size = 1,\n                                   border.size = 2)\n\np1 &lt;- SCpubr::do_NebulosaPlot(sample[, sample$subtype == \"Astrocytoma\"], \n                              features = \"Pro_Inflammatory\",\n                              font.size = 20,\n                              use_viridis = FALSE,\n                              plot.title = \"Pro Inflammatory TAMs | AS\",\n                              sequential.direction = 1) + ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5))\np1$layers &lt;- append(out$na_layer, p1$layers)\np1$layers &lt;- append(out$base_layer, p1$layers)\n\np2 &lt;- SCpubr::do_NebulosaPlot(sample[, sample$subtype == \"Oligodendroglioma\"], \n                              features = \"Pro_Inflammatory\",\n                              font.size = 20,\n                              use_viridis = FALSE,\n                              plot.title = \"Pro Inflammatory TAMs | OD\",\n                              sequential.direction = 1) + ggplot2::theme(plot.title = ggplot2::element_text(face = \"bold\", hjust = 0.5))\np2$layers &lt;- append(out$na_layer, p2$layers)\np2$layers &lt;- append(out$base_layer, p2$layers)\n\np &lt;- p2 | p1"
  },
  {
    "objectID": "viz/figures_figure_S8D.html",
    "href": "viz/figures_figure_S8D.html",
    "title": "Figure S8D",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n\n# Read in sample.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_primary.rds\")\n\n# Define colors.\ncluster_cols &lt;- c(\"Mg Homeostatic\"= \"#ECA809\",                          \n                  \"Mg Inflammatory TAMs\" = \"#043362\",                  \n                  \"Mg Activated\"= \"#9A031E\",                 \n                  \"Mg Resident−like TAMs\"= \"#009FF5\",                    \n                  \"BMD Anti−inflammatory TAMs\"= \"#BC5210\",            \n                  \"Mg Phagocytic\"= \"#279185\",                 \n                  \"Mg IFNg TAMs\"= \"#7EB356\",                   \n                  \"Mg Stressed TAMs\"= \"#AC70FF\",                  \n                  \"Mg Inflammatory ICAM1+\"= \"#63412C\",                  \n                  \"BAMs\" = \"#5F0F40\")\n\nscale.subtype.short &lt;- c(\"Astrocytoma\" = \"#b38b14\",\n                         \"Oligodendroglioma\" = \"#3c5b8b\")\n\n\nmarkers &lt;- readr::read_tsv(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/TAM_markers.tsv\")\nmarkers &lt;- lapply(as.list(markers), function(x){x[!is.na(x)]})\nmarkers &lt;- markers[c(\"Pro-Inflammatory\", \"Anti-Inflammatory\")]\nnames(markers) &lt;- c(\"Pro_Inflammatory\", \"Anti_Inflammatory\")\n\nsample &lt;- SCpubr:::compute_enrichment_scores(sample = sample,\n                                             input_gene_list = markers,\n                                             flavor = \"UCell\",\n                                             assay = \"RNA\")\nsample$subtype &lt;- factor(sample$subtype, levels = c(\"Oligodendroglioma\", \"Astrocytoma\"))\n\n\n\nCodep1 &lt;- SCpubr::do_BoxPlot(sample,\n                         feature = \"Pro_Inflammatory\",\n                         group.by = \"final_annotation\",\n                         split.by = \"subtype\",\n                         colors.use = scale.subtype.short,\n                         font.size = 20,\n                         axis.text.face = \"plain\",\n                         legend.position = \"right\",\n                         legend.title = \"LGG subtype\") + \n      ggplot2::ylab(\"Pro Inflammatory TAMs\") + \n      ggplot2::xlab(\"\") +\n      ggplot2::scale_y_continuous(limits = c(0, 0.25)) +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.line.x = ggplot2::element_blank(),\n                     legend.position = \"none\")\n\np2 &lt;- SCpubr::do_BoxPlot(sample,\n                         feature = \"Anti_Inflammatory\",\n                         group.by = \"final_annotation\",\n                         split.by = \"subtype\",\n                         colors.use = scale.subtype.short,\n                         font.size = 20,\n                         axis.text.face = \"plain\",\n                         legend.position = \"right\",\n                         legend.title = \"LGG subtype\")  +\n      ggplot2::scale_y_continuous(limits = c(0, 0.25)) +\n      ggplot2::ylab(\"Anti Inflammatory TAMs\") + \n      ggplot2::xlab(\"\")\n\n\np3 &lt;- SCpubr::do_BoxPlot(sample,\n                         feature = \"Pro_Inflammatory\",\n                         group.by = \"subtype\",\n                         colors.use = scale.subtype.short,\n                         font.size = 20,\n                         axis.text.face = \"plain\",\n                         legend.position = \"right\",\n                         legend.title = \"LGG subtype\") +\n      ggplot2::scale_y_continuous(limits = c(0, 0.25)) + \n      ggplot2::ylab(\"\") + \n      ggplot2::xlab(\"\") +\n      ggplot2::theme(axis.text.x = ggplot2::element_blank(),\n                     axis.ticks.x = ggplot2::element_blank(),\n                     axis.line.x = ggplot2::element_blank(),\n                     axis.text.y = ggplot2::element_blank(),\n                     axis.ticks.y = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank(),\n                     legend.position = \"none\")\n\np4 &lt;- SCpubr::do_BoxPlot(sample,\n                          feature = \"Anti_Inflammatory\",\n                          group.by = \"subtype\",\n                          colors.use = scale.subtype.short,\n                          font.size = 20,\n                          axis.text.face = \"plain\",\n                         legend.position = \"right\",\n                         legend.title = \"LGG subtype\") +  \n      ggplot2::scale_y_continuous(limits = c(0, 0.25)) + \n      ggplot2::ylab(\"\") + \n      ggplot2::xlab(\"\") + \n      ggplot2::theme(axis.text.y = ggplot2::element_blank(),\n                     axis.ticks.y = ggplot2::element_blank(),\n                     axis.line.y = ggplot2::element_blank())\n\nlayout &lt;- \"AAAAAAAAAAAAAAAAAAAACCE\n           BBBBBBBBBBBBBBBBBBBBDDE\"\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = p3,\n                           D = p4,\n                           E = patchwork::guide_area(),\n                           guides = \"collect\",\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_S8E.html",
    "href": "viz/figures_figure_S8E.html",
    "title": "Figure S8E",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Load samples.\nsample.oligo &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_OD.rds\")\nsample.astro &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_primary_AS.rds\")\n\n# Subset tumor entities.\nsample.oligo &lt;- sample.oligo[, !(sample.oligo$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"Gradient\", \"RA\", \"Cycling\"))]\nsample.astro &lt;- sample.astro[, !(sample.astro$relabelling %in% c(\"OPC-like\", \"Astro-like\", \"Gradient\", \"RA\", \"Cycling\"))]\n\n\n\nCode# Manually picked features from the NMF metaprograms.\nfeatures &lt;- c(\"TOX\", \"IFI16\", \"RBPJ\", \"HNRNPK\", \"TRPS1\",\n              \"CREM\", \"CTNNB1\", \"ETV2\", \"EZH2\", \"HIVEP1\",\n              \"KDM5B\", \"PRDM1\", \"PTTG1\", \"SUB1\", \"TOX2\",\n              \"VDR\", \"ZNF282\") %&gt;% sort()\n\nsample.oligo$relabelling &lt;- factor(sample.oligo$relabelling)\nsample.astro$relabelling &lt;- factor(sample.astro$relabelling)\n\np1 &lt;- SCpubr::do_DotPlot(sample.oligo,\n                         features = features,\n                         group.by = \"relabelling\",\n                         assay = \"SCT\",\n                         legend.title = \"OD | Avg. Exp.\",\n                         legend.length = 8,\n                         legend.width = 0.5,\n                         legend.framecolor = \"grey50\",\n                         legend.tickcolor = \"white\",\n                         legend.framewidth = 0.2,\n                         legend.tickwidth = 0.2,\n                         font.size = 20,\n                         axis.text.face = \"plain\",\n                         dot.scale = ) + \n      ggplot2::ylab(\"OD\") + \n      ggplot2::theme(axis.text.x.bottom = ggplot2::element_blank(),\n                     axis.ticks.x.bottom = ggplot2::element_blank(),\n                     axis.line.x.bottom = ggplot2::element_blank(),\n                     strip.background = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 5, l = 10))\n\np2 &lt;- SCpubr::do_DotPlot(sample.astro,\n                         features = features,\n                         group.by = \"relabelling\",\n                         assay = \"SCT\",\n                         sequential.palette = \"YlOrRd\",\n                         legend.title = \"AS | Avg. Exp.\",\n                         legend.length = 8,\n                         legend.width = 0.5,\n                         legend.framecolor = \"grey50\",\n                         legend.tickcolor = \"white\",\n                         legend.framewidth = 0.2,\n                         legend.tickwidth = 0.2,\n                         font.size = 20,\n                         axis.text.face = \"plain\") + \n      ggplot2::ylab(\"AS\") + \n      ggplot2::theme(strip.background = ggplot2::element_blank(),\n                     strip.text = ggplot2::element_blank(),\n                     plot.margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 10))\n\np1$guides$size$title &lt;- \"OD | Pct. Exp.\"\np2$guides$size$title &lt;- \"AS | Pct. Exp.\"\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = patchwork::guide_area(),\n                           design = \"A\n                                     B\n                                     C\",\n                           guides = \"collect\") + \n     patchwork::plot_annotation(theme = ggplot2::theme(legend.position = \"bottom\"))"
  },
  {
    "objectID": "viz/figures_figure_S10A.html",
    "href": "viz/figures_figure_S10A.html",
    "title": "Figure S10A",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/microglia_paired.rds\")\n\ncluster_cols &lt;- c(\"Mg Homeostatic\"= \"#ECA809\",                          \n                  \"Mg Inflammatory TAMs\" = \"#043362\",                  \n                  \"Mg Activated\"= \"#9A031E\",                 \n                  \"Mg Resident−like TAMs\"= \"#009FF5\",                    \n                  \"BMD Anti−inflammatory TAMs\"= \"#BC5210\",            \n                  \"Mg Phagocytic\"= \"#279185\",                 \n                  \"Mg IFNg TAMs\"= \"#7EB356\",                   \n                  \"Mg Stressed TAMs\"= \"#AC70FF\",                  \n                  \"Mg Inflammatory ICAM1+\"= \"#63412C\")\n\nscale.grade &lt;- c(\"Grade 2\" = \"#1a7d9e\",\n                 \"Grade 3\" = \"#9e1a3b\",\n                 \"Grade 4\" = \"#576e12\")\n\nscale.status &lt;- c(\"Primary\" = \"#ee9b00\",\n                  \"Relapse\" = \"#9b2226\")\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         group.by = \"final_annotation\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 6,\n                         colors.use = cluster_cols,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         na.value = \"grey90\")\n\np2 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         split.by = \"time\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 6,\n                         colors.use = scale.status,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         na.value = \"grey90\")\n\np3 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         split.by = \"grade\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 6,\n                         colors.use = scale.grade,\n                         legend.icon.size = 8,\n                         legend.ncol = 3,\n                         na.value = \"grey90\")\n\nlayout &lt;- c(\"ABB\n             CCC\")\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = p3,\n                           design = layout)"
  },
  {
    "objectID": "viz/figures_figure_S10B.html",
    "href": "viz/figures_figure_S10B.html",
    "title": "Figure S10B",
    "section": "",
    "text": "Code# Enrique Blanco Carmona\n# e.blancocarmona@kitz-heidelberg.de\n# PhD Student – Clinical Bioinformatics\n# Division of Pediatric Neurooncology (B062)\n# DKFZ-KiTZ | Germany\n\n# Read in metadata.\nsample &lt;- readRDS(\"/omics/odcf/analysis/OE0145_projects/idh_gliomas/Figures_Science/revision/IDH_gliomas_book/datasets/integrated_paired_AS.rds\")\nsample$relabelling[sample$relabelling == \"RA\"] &lt;- \"RE\"\nSeurat::Idents(sample) &lt;- sample$relabelling\n\ncluster_cols &lt;- c(\"RE\" = \"#ECA809\",\n                  \"OPC-like\" = \"#043362\",                    \n                  \"Gradient\" = \"#D6D6D6\",                    \n                  \"Astro-like\" = \"#9A031E\",                  \n                  \"Cycling\" = \"#5F0F40\")\n\nidents.keep &lt;- c(\"OPC-like\", \"Astro-like\", \"RE\", \"Gradient\", \"Cycling\")\n\n\n\nCodep1 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         idents.keep = idents.keep,\n                         group.by = \"relabelling\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 6,\n                         colors.use = cluster_cols,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         na.value = \"grey50\")\n\np2 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         split.by = \"time\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 6,\n                         colors.use = scale.status,\n                         legend.icon.size = 8,\n                         legend.ncol = 2,\n                         na.value = \"grey90\")\n\np3 &lt;- SCpubr::do_DimPlot(sample = sample,\n                         split.by = \"grade\",\n                         font.size = 20,\n                         raster = TRUE,\n                         raster.dpi = 2048,\n                         pt.size = 6,\n                         colors.use = scale.grade,\n                         legend.icon.size = 8,\n                         legend.ncol = 3,\n                         na.value = \"grey90\")\n\nlayout &lt;- c(\"ABB\n             CCC\")\n\np &lt;- patchwork::wrap_plots(A = p1,\n                           B = p2,\n                           C = p3,\n                           design = layout)"
  }
]