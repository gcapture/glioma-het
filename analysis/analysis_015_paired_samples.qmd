# Visualization {.unnumbered}

```{r}
#| eval: false

## Inma Hernandez Lopez
## inmaculada.hernandez-lopez@ukr.de
## LIT -  Leibniz-Institute f√ºr Immunotherapie

library(Seurat)
library(sctransform)
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
library(dplyr)
library(future)
library(purrr)
library(harmony)
library(Seurat)
library(tidyverse)
library(plyr)
library("xlsx")
library(SeuratWrappers)
library(harmony)
library(tidyverse)
library("ggpubr")
library(SCpubr)

##1. All Cells paired samples:

Clusters <- readRDS("Paired_Astrocytoma_AllCells_NMF_relabelled_with_permutation_approach.rds")

output.immune.infiltrate <-readRDS("Immune.infiltrate.rds")
# Cycling-like cells.
Mixed <- output.immune.infiltrate$surpassed_cells
Clusters$NMF_labelling[Mixed] <- "Mixed"
Clusters$NMF_labelling <- revalue(Clusters$NMF_labelling, c("Immune" = "T-Cells"))
Idents(Clusters) <- "NMF_labelling"
#Remove 1 cell classified as NA
Clusters = subset(Clusters, idents = c("Microglia","Oligodendrocytes","RA","Gradient" ,"Cycling-like","Astro-like","OPC-like","Neurons","Endothelial","Astrocytes","Mixed","T-Cells"))

markers<- FindAllMarkers(Clusters,
    test.use = "wilcox",
    only.pos = TRUE,
    logfc.threshold = 0.25,
    verbose = TRUE
  )
markers <- markers %>% filter(p_val_adj < 0.05)

output <- split(markers, markers$cluster)
wb <- createWorkbook()

for (i in 1:length(output)) {
  addWorksheet(wb, sheetName=names(output[i]))
  writeData(wb, sheet=names(output[i]), x=output[[i]], rowNames = TRUE) # Note [[]]
}

saveWorkbook(wb, file="Fig3_Suppl_markers_pairedAstrocytoma_adjPvalue0.05.xls",  overwrite = TRUE)

Cells <- table(Clusters$gem_id, Clusters$NMF_labelling)
write.table(Cells, file = "Fig3_Suppl_counts_NMF_labelling_sampleID.txt", 
            row.names = TRUE, col.names = TRUE,  sep = "\t", quote = FALSE)

Clusters$grade <- revalue(Clusters$grade, c("grade2"="2","grade3"="3","grade4"="4"))


cluster_cols <- c("RA" = "#ECA809",                          # Marigold.
                  "OPC-like" = "#043362",                    # Prussian Blue.
                  "T-Cells" = "#009FF5",                     # Carolina Blue.
                  "Oligodendrocytes" = "#BC5210",            # Burnt Orange.
                  "Astrocytes" = "#279185",                  # Celadon Green.
                  "Microglia" = "#7EB356",                   # Bud Green.
                  #"Pericytes" = "#AC70FF",                   # Medium Purple.
                  "Mixed" = "#63412C",                   # Van Dyke Brown.
                  "Gradient" = "#D6D6D6",                    # Light grey.
                  "Neurons" = "#544B81",                     # Purple Navy.
                  "Endothelial" = "#da627d",                 # Blush.
                  "Astro-like" = "#9A031E",                  # Ruby Red.
                  "Cycling-like" = "#5F0F40")                # Tyrian Purple.

cluster_cols <- cluster_cols[sort(names(cluster_cols))]

scale.grade <- c("2" = "#94d2bd",
                 "3" = "#005F73",
                 "4" = "#626D87")


scale.relapse <- c("primary" = "#8D99AE",
                   "relapse" = "#1C2839")

pdf("Fig3B_main_DimPlot_Paired_AllCells.pdf", width = 5, height = 5 )
do_DimPlot(Clusters, colors.use = cluster_cols, plot.title = "Astrocytoma Paired Samples",
           legend.text.size = 14, legend.ncol = 4)
dev.off()


pdf("Fig3B_Supplem_DimPlot_relapse_paired_split.pdf",width = 4.54, height = 3.39 )
do_DimPlot(Clusters, split.by = "time", colors.split =  scale.relapse,
           legend = FALSE, plot.title = "Paired samples Relapse",pt.size = 1, ncol = 2)
dev.off()

pdf("Fig3C_suppl_Barplot_grade.pdf",width = 8, height = 3 )
do_BarPlot(Clusters, features = "grade",group.by = "NMF_labelling", 
           position = "fill", horizontal = TRUE, colors.use = cluster_cols, legend.position = "bottom", legend.ncol = 6)

dev.off()

pdf("Fig3C_suppl_Barplot_time.pdf",width = 8, height = 3 )
do_BarPlot(Clusters, features = "time",group.by = "NMF_labelling", 
           position = "fill", horizontal = TRUE, colors.use = cluster_cols, legend.position = "bottom", legend.ncol = 6)
           
dev.off()

Clusters <- subset(Clusters, idents = c("RA","Gradient" ,"Cycling-like","Astro-like","OPC-like"))

cluster_cols <- c("RA" = "#ECA809",                          # Marigold.
                  "OPC-like" = "#043362",                    # Prussian Blue.
                  #"T-Cells" = "#009FF5",                     # Carolina Blue.
                  #"Oligodendrocytes" = "#BC5210",            # Burnt Orange.
                  #"Astrocytes" = "#279185",                  # Celadon Green.
                  #"Microglia" = "#7EB356",                   # Bud Green.
                  #"Pericytes" = "#AC70FF",                   # Medium Purple.
                  #"Mixed" = "#63412C",                   # Van Dyke Brown.
                  "Gradient" = "#D6D6D6",                    # Light grey.
                  #"Neurons" = "#544B81",                     # Purple Navy.
                  #"Endothelial" = "#da627d",                 # Blush.
                  "Astro-like" = "#9A031E",                  # Ruby Red.
                  "Cycling-like" = "#5F0F40")                # Tyrian Purple.

pdf("Fig3C_main_Barplot_grade.pdf",width = 8, height = 3 )
do_BarPlot(Clusters, features = "grade",group.by = "NMF_labelling", 
           position = "fill", horizontal = TRUE, colors.use = cluster_cols, legend.position = "bottom", legend.ncol = 6)

dev.off()

pdf("Fig3C_main_Barplot_time.pdf",width = 8, height = 3 )
do_BarPlot(Clusters, features = "time",group.by = "NMF_labelling", 
           position = "fill", horizontal = TRUE, colors.use = cluster_cols, legend.position = "bottom", legend.ncol = 6)

dev.off()

Clusters$NMF_labelling <- factor(x = Clusters$NMF_labelling, levels =  c("Astro-like","Cycling-like","Gradient", "OPC-like","RA"))
Idents(Clusters) = "NMF_labelling"
features_use <- c("NRG3", "ADGRV1", "SLC4A4", "SPARCL1", "ADCY2",
                  "MKI67", "CENPK", "EZH2", "POLQ", "EGFR",
                  "OPCML", "DSCAM", "FGF12", "SOX6", "DLGAP1",
                  "EEF2", "EEF1A1", "OLIG1", "ETV1", "RPL13"
)

pdf("Fig3D_main_Paired_DotPlot.pdf", width=4.8, height=6)
do_DotPlot(sample = Clusters,
           features = rev(features_use),
           cols = c("grey75", "#b38b14"),
           ylab = "Astrocytoma Paired",
           legend = TRUE,
           legend.position = "right",
           flip = T) 
dev.off()

##2. Only Microglia Paired Samples:

rm (list = ls())
library(Seurat)
library(sctransform)
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
library(dplyr)
library(future)
library(purrr)
library(harmony)
library(Seurat)
library(tidyverse)
library(plyr)
library("xlsx")
library(SeuratWrappers)
library(harmony)
library(tidyverse)
library("ggpubr")
library(openxlsx)

Clusters <- readRDS("Clusters_microglia_onlyPaired.rds")
Idents(Clusters) <- "seurat_clusters"
new.cluster.ids <- c("Mg homeostatic","Mg Activated","Mo TAMs anti-inflammatory ","Mg inflammatory TAMs","Mg Activated","Mg phagocytic","Mg resident-like TAMs","Mg Hipoxic TAMs","Mg IFNg TAMs ","Mg Inflammatory ICAM+") 

names(new.cluster.ids) <- levels(Clusters)
Clusters <- RenameIdents(Clusters, new.cluster.ids)
Clusters[["Subclusters"]] <- Idents(Clusters)
Idents(Clusters) <- "Subclusters"

cluster_cols <- c("Mg homeostatic"= "#ECA809",                          # Marigold.
                  "Mg inflammatory TAMs" = "#043362",                    # Prussian Blue.
                  "Mg Activated"= "#9A031E",                  # Ruby Red      
                  "Mg resident-like TAMs"= "#009FF5",                     # Carolina Blue.
                  "Mo TAMs anti-inflammatory "= "#BC5210",            # Burnt Orange.
                  "Mg phagocytic"= "#279185",                  # Celadon Green.
                  "Mg IFNg TAMs "= "#7EB356",                   # Bud Green.
                  "Mg Inflammatory ICAM+"= "#63412C",                   # Van Dyke Brown.
                  "Mo TAMs Infiltrating"= "#D6D6D6",
                  "Mg Hipoxic TAMs" = "#5F0F40")                # Tyrian Purple.


Clusters$grade <- Clusters$gem_id
Clusters$grade <- revalue(Clusters$grade, c("NCH2260" = "3", "NCH2367" = "3", "NCH2375" = "3", "NCH302" = "2",   
                                            "NCH511B" = "2", "NCH557" = "2",  "NCH645" = "4" ,"NCH673D" = "2",
                                            "NCH678" = "2"  ,"NCH740W" = "3", "NCH758A" = "2" ,"NCH988" = "3"))

Idents(Clusters) <- "Subclusters"
pdf("Fig3G_main_DimPlot_Paired_Microglia.pdf", width = 6, height = 5 )
do_DimPlot(Clusters, colors.use = cluster_cols, plot.title = "Microglia astrocytoma - paired samples",
           legend.text.size = 14, legend.ncol = 3)
dev.off()

scale.grade <- c("2" = "#94d2bd",
                 "3" = "#005F73",
                 "4" = "#626D87")


scale.relapse <- c("primary" = "#8D99AE",
                   "relapse" = "#1C2839")

scale.relapse <- c("primary" = "#ECA809",
                   "relapse" = "#cb5a28")



Idents(Clusters) <- "grade"
pdf("Fig3G_main_DimPlot_Paired_grade_Microglia.pdf", width = 18, height = 5 )

do_DimPlot(Clusters, split.by = "grade", colors.split = scale.grade,
           legend = FALSE, plot.title = "Microglia astrocytoma - grade",pt.size = 1, ncol = 3)
dev.off()

Idents(Clusters) <- "relapse"
pdf("Fig3G_main_DimPlot_Paired_relapse_Microglia.pdf", width = 12, height = 5 )
do_DimPlot(Clusters, split.by = "time", colors.split = scale.relapse, plot.title = "Microglia astrocytoma - relapse",
           legend.text.size = 14, legend.ncol = 2)

dev.off()

Cells <- table(Clusters$gem_id, Clusters$Subclusters)
write.table(Cells, file = "Fig3_Suppl_countsMicroglia_sampleID.txt", 
            row.names = TRUE, col.names = TRUE,  sep = "\t", quote = FALSE)

Idents(Clusters) <- "Subclusters"
markers<- FindAllMarkers(Clusters,
                         test.use = "wilcox",
                         only.pos = TRUE,
                         logfc.threshold = 0.25,
                         verbose = TRUE
)
markers <- markers %>% filter(p_val_adj < 0.05)

output <- split(markers, markers$cluster)
wb <- createWorkbook()

for (i in 1:length(output)) {
  addWorksheet(wb, sheetName=names(output[i]))
  writeData(wb, sheet=names(output[i]), x=output[[i]], rowNames = TRUE) # Note [[]]
}

saveWorkbook(wb, file="Fig3_Suppl_markers_Microglia_pairedAstrocytoma_adjPvalue0.05.xls",  overwrite = TRUE)

## boxplots ## 

table = read.table("Boxplots_Microglia_onlyPaired_counts_percent.txt", sep="\t")

pdf("Fig3_main_boxplot_time_Mg.inflammatory.TAMs_paired.pdf", width=3.2, height=4)
table %>%
  ggplot(aes(x=sample,y= Mg.inflammatory.TAMs)) +
  geom_boxplot(width=0.5,lwd=1.5) +
  geom_point(aes(color=grade), size= 4) + 
  geom_line(aes(group=Patient))
#geom_jitter(width=0.15, aes(color=Patient)) 
#theme(legend.position = "none")

dev.off()

pdf("Fig3_main_boxplot_time_Mg.IFNg.TAMs_paired.pdf", width=3.2, height=4)
table %>%
  ggplot(aes(x=sample,y= Mg.IFNg.TAMs)) +
  geom_boxplot(width=0.5,lwd=1.5) +
  geom_point(aes(color=grade), size= 4)+ 
  geom_line(aes(group=Patient)) 
#geom_jitter(width=0.15, aes(color=Patient)) 
#theme(legend.position = "none")

dev.off()

pdf("Fig3_main_boxplot_time_Mo.TAMs.anti.inflammatory_paired.pdf", width=3.2, height=4)
table %>%
  ggplot(aes(x=sample,y= Mo.TAMs.anti.inflammatory)) +
  geom_boxplot(width=0.5,lwd=1.5) +
  geom_point(aes(color=grade), size= 4)+ 
  geom_line(aes(group=Patient)) 
#geom_jitter(width=0.15, aes(color=Patient)) 
#theme(legend.position = "none")

dev.off()

pdf("Fig3_main_boxplot_time_Mg.Hipoxic.TAMs_paired.pdf", width=3.2, height=4)
table %>%
  ggplot(aes(x=sample,y= Mg.Hipoxic.TAMs)) +
  geom_boxplot(width=0.5,lwd=1.5) +
  geom_point(aes(color=grade), size= 4)+ 
  geom_line(aes(group=Patient)) 
#geom_jitter(width=0.15, aes(color=Patient)) 
#theme(legend.position = "none")

dev.off()

pdf("Fig3_main_boxplot_time_Mg.Homeostatic.TAMs_paired.pdf", width=3.2, height=4)
table %>%
  ggplot(aes(x=sample,y= Mg.homeostatic)) +
  geom_boxplot(width=0.5,lwd=1.5) +
  geom_point(aes(color=grade), size= 4)+ 
  geom_line(aes(group=Patient)) 
#geom_jitter(width=0.15, aes(color=Patient)) 
#theme(legend.position = "none")

dev.off()



```

